/*
 *   Copyright (C) @2021 Webank Group Holding Limited
 *   <p>
 *   Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 *  in compliance with the License. You may obtain a copy of the License at
 *  <p>
 *  http://www.apache.org/licenses/LICENSE-2.0
 *   <p>
 *   Unless required by applicable law or agreed to in writing, software distributed under the License
 *   is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 *  or implied. See the License for the specific language governing permissions and limitations under
 *  he License.
 *
 */

ext {
    // spring
    springVersion = "5.1.17.RELEASE"
    springMqttVersion = "5.1.11.RELEASE"
    // data.spring-data-commons
    springBootVersion = "2.1.15.RELEASE"
    // spring cloud
    springCloudVersion = "Greenwich.SR5"

    nacosVersion = "2.2.0.RELEASE"

    // ----- org.apache -----
    // zookeeper
    zookeeperVersion = "3.5.5"
    // httpclient
    httpclientVersion = "4.5.6"
    // tomcat
    tomcatVersion = "8.5.23"
    // commons
    apacheCommonsVersion = [
            lang3       : "3.6",
            jexl3       : "3.1",
            pool2       : "2.7.0",
            collections4: "4.1",
            dbcp2       : "2.6.0",
            commonsIo   : "2.4",
            fileupload  : "1.4"
    ]
    // org slf4j
    slf4jVersion = "1.7.30"
    // logging.log4j
    log4jVersion = "2.13.3"

    // org.fisco-bcos.web3sdk
    web3sdkVersion = [
            // fisco: "2.6.1.09271-rc1-SNAPSHOT"
            fisco: "2.3.0"
    ]
    // fabric
    fabricVersion = "1.4.4"
    // pb
    protobufVersion = "3.6.1"

    // lombok
    lombokVersion = "1.18.12"
    // junit
    junitVersion = "4.12"
    // junit-dep
    junitDepVersion = "4.11"
    // netty-all
    nettyVersion = "4.1.44.Final"
    // jsonrpc
    jsonrpc4jVersion = "1.5.3"
    // JMS
    jmsVersion = "1.1"
    // Jmock
    jmockVersion = "1.9.0"
    // mybatis-spring-boot-starter
    mybatisVersion = "1.3.2"
    //h2
    h2Version = "1.4.196"
    // mariadb-java-client
    mariadbClientVersion = "2.3.0"
    // jsoup
    jsoupVersion = "1.9.2"
    // fastjson
    fastjsonVersion = "1.2.70"
    // quartz
    quartzVersion = "2.3.0"
    // Java-WebSocket
    WebSocketVersion = "1.4.0"
    // JWTVersion
    JWTVersion = "3.8.0"
    // MQTT paho client
    PahoClientVersion = "1.2.2"
    // jmeter
    jmeterVersion = "5.0"
    // jackson
    jacksonVersion = "2.11.2"

    commonsNetVersion = "3.6"

    bouncycastleVersion = "1.60"
    //fiscobcos
    fiscobcossdkVersion="2.7.2"

}


buildscript {
    repositories {
        mavenLocal()
        maven {
            url "http://maven.aliyun.com/nexus/content/groups/public/"
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        mavenCentral()
    }
    dependencies {
     //   classpath("org.springframework.boot:spring-boot-gradle-plugin:2.3.4.RELEASE")
        classpath("gradle.plugin.com.gorylenko.gradle-git-properties:gradle-git-properties:2.2.1")
    }
}

List lombok = [
        "org.projectlombok:lombok:${lombokVersion}"
]


allprojects {
    group "com.webank.openledger"
    version "1.0.0-rc1"

    apply plugin: "java"
    apply plugin: "maven"
    apply plugin: "idea"
    apply plugin: "eclipse"

    // jdk version
    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    compileJava {
        options.compilerArgs << "-Xlint:unchecked"
    }

    repositories {
        mavenLocal()
        maven { url"http://maven.aliyun.com/nexus/content/groups/public/" }
        // 通用maven库
        mavenCentral()
        maven { url"https://dl.bintray.com/ethereum/maven/" }
        // JavaSDK snapshot版本 maven库
        maven{ url "https://oss.sonatype.org/content/repositories/snapshots"}
        // JavaSDK maven库
        maven { url = 'http://repo.maven.apache.org/maven2' }
        maven { url = 'http://repo1.maven.org/maven2' }
        jcenter { url "http://jcenter.bintray.com/"}

    }

    // encoding type
    [compileJava, compileTestJava, javadoc]*.options*.encoding = "UTF-8"

    sourceSets {
        main {
            java {
                srcDirs = ["src/main/java"]
            }
            resources {
                srcDirs = ["src/main/resources"]
            }
        }
        test {
            java {
                srcDirs = ["src/test/java"]
            }
            resources {
                srcDirs = ["src/test/resources"]
            }
        }
    }

    clean.doLast {
        file("dist/apps/").deleteDir()
        file("dist/conf/").deleteDir()
        file("dist/lib/").deleteDir()
    }


    configurations.all {
        exclude group: "junit", module: "junit.junit-dep"

        resolutionStrategy {
            force "junit:junit-dep:${junitDepVersion}"
        }
    }

    // all project common lib
    dependencies {
        compileOnly(lombok)
        annotationProcessor(lombok)

        implementation("org.apache.logging.log4j:log4j-slf4j-impl:${log4jVersion}")
        implementation("org.slf4j:slf4j-api:${slf4jVersion}")

        // junit test
        testImplementation("junit:junit:${junitVersion}")
        testImplementation("junit:junit-dep:${junitDepVersion}")

        testCompileOnly(lombok)
        testAnnotationProcessor(lombok)
    }
}