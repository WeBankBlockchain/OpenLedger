package com.webank.openledger.contracts;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import org.fisco.bcos.sdk.abi.FunctionEncoder;
import org.fisco.bcos.sdk.abi.FunctionReturnDecoder;
import org.fisco.bcos.sdk.abi.TypeReference;
import org.fisco.bcos.sdk.abi.datatypes.Address;
import org.fisco.bcos.sdk.abi.datatypes.Bool;
import org.fisco.bcos.sdk.abi.datatypes.DynamicArray;
import org.fisco.bcos.sdk.abi.datatypes.DynamicBytes;
import org.fisco.bcos.sdk.abi.datatypes.Function;
import org.fisco.bcos.sdk.abi.datatypes.Type;
import org.fisco.bcos.sdk.abi.datatypes.Utf8String;
import org.fisco.bcos.sdk.abi.datatypes.generated.Bytes32;
import org.fisco.bcos.sdk.abi.datatypes.generated.StaticArray4;
import org.fisco.bcos.sdk.abi.datatypes.generated.Uint256;
import org.fisco.bcos.sdk.abi.datatypes.generated.Uint8;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple1;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple2;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple3;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple4;
import org.fisco.bcos.sdk.client.Client;
import org.fisco.bcos.sdk.contract.Contract;
import org.fisco.bcos.sdk.crypto.CryptoSuite;
import org.fisco.bcos.sdk.crypto.keypair.CryptoKeyPair;
import org.fisco.bcos.sdk.model.CryptoType;
import org.fisco.bcos.sdk.model.TransactionReceipt;
import org.fisco.bcos.sdk.model.callback.TransactionCallback;
import org.fisco.bcos.sdk.transaction.model.exception.ContractException;

@SuppressWarnings("unchecked")
public class Organization extends Contract {
    public static final String[] BINARY_ARRAY = {"","","","0000000000000000000000028152600401620018ac91906200aa1b565b602060405180830381600087803b158015620018c757600080fd5b505af1158015620018dc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062001902919081019062009da7565b151562001946576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200193d906200b4da565b60405180910390fd5b601f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fb47e016866040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401620019bf91906200aa1b565b602060405180830381600087803b158015620019da57600080fd5b505af1158015620019ef573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062001a1591908101906200994f565b925060008373ffffffffffffffffffffffffffffffffffffffff161415151562001a76576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162001a6d906200b496565b60405180910390fd5b62001a8c836022620079de90919063ffffffff16565b508291508173ffffffffffffffffffffffffffffffffffffffff16633bc5de306040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801562001af557600080fd5b505af115801562001b0a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062001b3091908101906200994f565b90508073ffffffffffffffffffffffffffffffffffffffff166358edef4c60096040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040162001b8a91906200b1cc565b602060405180830381600087803b15801562001ba557600080fd5b505af115801562001bba573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062001be0919081019062009da7565b5060019350505050919050565b6000606060008062001c1d8662001c0e898662007baf90919063ffffffff16565b62007baf90919063ffffffff16565b9250601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c04d4ef3601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600086896040518563ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040162001cc194939291906200ad7b565b6040805180830381600087803b15801562001cdb57600080fd5b505af115801562001cf0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062001d16919081019062009b79565b809250819350505080151562001d63576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162001d5a906200b51e565b60405180910390fd5b601f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c4dad5ce87896040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040162001dde9291906200aa38565b602060405180830381600087803b15801562001df957600080fd5b505af115801562001e0e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062001e34919081019062009da7565b93505050509392505050565b606080602b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631a71d6b8846040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040162001ebc91906200b22b565b600060405180830381600087803b15801562001ed757600080fd5b505af115801562001eec573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525062001f17919081019062009d08565b91509150915091565b6000601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166337258c0d33601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16306200203860048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620020235780601f1062001ff75761010080835404028352916020019162002023565b820191906000526020600020905b8154815290600101906020018083116200200557829003601f168201915b50505050508962007bcf90919063ffffffff16565b6040518563ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016200207594939291906200aa65565b602060405180830381600087803b1580156200209057600080fd5b505af1158015620020a5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620020cb919081019062009da7565b15156200210f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162002106906200b3ca565b60405180910390fd5b620021278383601b62007be59092919063ffffffff16565b905092915050565b60118054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620021c95780601f106200219d57610100808354040283529160200191620021c9565b820191906000526020600020905b815481529060010190602001808311620021ab57829003601f168201915b505050505081565b600a8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156200226b5780601f106200223f576101008083540402835291602001916200226b565b820191906000526020600020905b8154815290600101906020018083116200224d57829003601f168201915b505050505081565b60128054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156200230d5780601f10620022e1576101008083540402835291602001916200230d565b820191906000526020600020905b815481529060010190602001808311620022ef57829003601f168201915b505050505081565b60038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620023af5780601f106200238357610100808354040283529160200191620023af565b820191906000526020600020905b8154815290600101906020018083116200239157829003601f168201915b505050505081565b60006060600080620023d3868462007baf90919063ffffffff16565b9250601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c04d4ef3601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600086896040518563ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016200247794939291906200ac3d565b6040805180830381600087803b1580156200249157600080fd5b505af1158015620024a6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620024cc919081019062009b79565b809250819350505080151562002519576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162002510906200b4fc565b60405180910390fd5b601f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638428f258876040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016200259291906200aa1b565b602060405180830381600087803b158015620025ad57600080fd5b505af1158015620025c2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620025e8919081019062009da7565b935050505092915050565b6000606060008373ffffffffffffffffffffffffffffffffffffffff16141562002621576000915062002653565b6200263783602262007f5990919063ffffffff16565b90506000815114156200264e576000915062002653565b600191505b50919050565b60028054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620026f35780601f10620026c757610100808354040283529160200191620026f3565b820191906000526020600020905b815481529060010190602001808311620026d557829003601f168201915b505050505081565b60018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620027955780601f10620027695761010080835404028352916020019162002795565b820191906000526020600020905b8154815290600101906020018083116200277757829003601f168201915b505050505081565b6000601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166337258c0d33601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1630620028b560048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620028a05780601f106200287457610100808354040283529160200191620028a0565b820191906000526020600020905b81548152906001019060200180","83116200288257829003601f168201915b50505050508962007bcf90919063ffffffff16565b6040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401620028f294939291906200aa65565b602060405180830381600087803b1580156200290d57600080fd5b505af115801562002922573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062002948919081019062009da7565b15156200298c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162002983906200b540565b60405180910390fd5b620029a48383601b620080449092919063ffffffff16565b905092915050565b60003073ffffffffffffffffffffffffffffffffffffffff16634768e049336040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040162002a0591906200aa1b565b602060405180830381600087803b15801562002a2057600080fd5b505af115801562002a35573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062002a5b919081019062009da7565b151562002a9f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162002a96906200b4da565b60405180910390fd5b601f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663789a0ed5836040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040162002b1891906200aa1b565b602060405180830381600087803b15801562002b3357600080fd5b505af115801562002b48573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062002b6e919081019062009da7565b9050919050565b6000601f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166346438ca0836040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040162002bf091906200aa1b565b602060405180830381600087803b15801562002c0b57600080fd5b505af115801562002c20573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062002c4691908101906200994f565b9050919050565b600080601f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fb47e016846040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040162002cc991906200aa1b565b602060405180830381600087803b15801562002ce457600080fd5b505af115801562002cf9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062002d1f91908101906200994f565b905060008173ffffffffffffffffffffffffffffffffffffffff16141562002d4b576000915062002d59565b62002d5681620025f3565b91505b50919050565b6000806060600080600080600089518b5114151562002db5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162002dac906200b474565b60405180910390fd5b62002dca8c8762007baf90919063ffffffff16565b9550600094505b8a5185101562002e475762002e088b8681518110151562002dee57fe5b906020019060200201518762007bcf90919063ffffffff16565b955062002e378a8681518110151562002e1d57fe5b906020019060200201518762007bcf90919063ffffffff16565b9550848060010195505062002dd1565b601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c04d4ef3601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000898d6040518563ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040162002ee994939291906200aca7565b6040805180830381600087803b15801562002f0357600080fd5b505af115801562002f18573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062002f3e919081019062009b79565b809450819550505082151562002f8b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162002f82906200b386565b60405180910390fd5b62002f988c8c8c62008248565b809250819350505060258190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506001819750975050505050505094509492505050565b60003073ffffffffffffffffffffffffffffffffffffffff16634768e049336040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016200307591906200aa1b565b602060405180830381600087803b1580156200309057600080fd5b505af1158015620030a5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620030cb919081019062009da7565b15156200310f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162003106906200b4da565b60405180910390fd5b601f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ec17d025836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016200318891906200aa1b565b602060405180830381600087803b158015620031a357600080fd5b505af1158015620031b8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620031de919081019062009da7565b9050919050565b6000606060008062003201868462007baf90919063ffffffff16565b9250601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c04d4ef3601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600086896040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401620032a594939291906200ad11565b6040805180830381600087803b158015620032bf57600080fd5b505af1158015620032d4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620032fa919081019062009b79565b809250819350505080151562003347576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200333e906200b364565b60405180910390fd5b601f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ec17d025876040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401620033c091906200aa1b565b602060405180830381600087803b158015620033db57600080fd5b505af1158015620033f0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062003416919081019062009da7565b935050505092915050565b6000601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620034e55780601f10620034b957610100808354040283529160200191620034e5565b820191906000526020600020905b815481529060010190602001808311620034c757829003601f168201915b505050505081565b6000601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166337258c0d33601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16306200360560048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620035f05780601f10620035c457610100808354040283529160200191620035f0565b820191906000526020600020905b815481529060010190602001808311620035d257829003601f168201915b50505050508862007bcf90919063ffffffff16565b6040518563ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016200364294939291906200aa65565b602060405180830381600087803b1580156200365d57600080fd5b505af115801562003672573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062003698919081019062009da7565b1515620036dc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620036d3906200b342565b60405180910390fd5b620036f282601b620084cd90919063ffffffff16565b9050919050565b601860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60608115620037b9576027805480602002602001604051908101604052809291908181526020018280548015620037ac57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831162003761575b5050505050905062003845565b60288054806020026020016040519081016040528092919081815260200182805480156200383d57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311620037f2575b505050505090505b919050565b600f8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316","600290048015620038e45780601f10620038b857610100808354040283529160200191620038e4565b820191906000526020600020905b815481529060010190602001808311620038c657829003601f168201915b505050505081565b601960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060606000806200392e868462007baf90919063ffffffff16565b9250601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c04d4ef3601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600086896040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401620039d294939291906200ae4f565b6040805180830381600087803b158015620039ec57600080fd5b505af115801562003a01573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062003a27919081019062009b79565b809250819350505080151562003a74576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162003a6b906200b3ec565b60405180910390fd5b601f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663789a0ed5876040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040162003aed91906200aa1b565b602060405180830381600087803b15801562003b0857600080fd5b505af115801562003b1d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062003b43919081019062009da7565b935050505092915050565b600080600080600080905062003b643362002c4d565b8062003bbd5750602660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b8062003cb55750602660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663893d20e86040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801562003c4b57600080fd5b505af115801562003c60573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062003c8691908101906200994f565b73ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff16145b1562003cc057600190505b80151562003d05576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162003cfc906200b430565b60405180910390fd5b62003d1288888862008248565b809350819450505060258290806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505060018294509450505050935093915050565b6000606060008062003dae868462007bcf90919063ffffffff16565b9250601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c04d4ef3601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163062003ec560048054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801562003eb05780601f1062003e845761010080835404028352916020019162003eb0565b820191906000526020600020905b81548152906001019060200180831162003e9257829003601f168201915b50505050508b62007bcf90919063ffffffff16565b878a6040518663ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040162003f059594939291906200af13565b6040805180830381600087803b15801562003f1f57600080fd5b505af115801562003f34573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062003f5a919081019062009b79565b809250819350505080151562003fa7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162003f9e906200b342565b60405180910390fd5b62003fbd86601b620084cd90919063ffffffff16565b935050505092915050565b60008060008060008615151562004016576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200400d906200b320565b60405180910390fd5b602b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633719ad8e8a8a896040518463ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040162004093939291906200afac565b6040805180830381600087803b158015620040ad57600080fd5b505af1158015620040c2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620040e8919081019062009dd3565b80945081935050508260019450945050505094509492505050565b60158054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156200419d5780601f1062004171576101008083540402835291602001916200419d565b820191906000526020600020905b8154815290600101906020018083116200417f57829003601f168201915b505050505081565b606080600080620041c0868462007bcf90919063ffffffff16565b9250601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c04d4ef3601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1630620042d760038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620042c25780601f106200429657610100808354040283529160200191620042c2565b820191906000526020600020905b815481529060010190602001808311620042a457829003601f168201915b50505050508b62007bcf90919063ffffffff16565b878a6040518663ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401620043179594939291906200af13565b6040805180830381600087803b1580156200433157600080fd5b505af115801562004346573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506200436c919081019062009b79565b8092508193505050801515620043b9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620043b0906200b3a8565b60405180910390fd5b620043cf86601b6200872c90919063ffffffff16565b935050505092915050565b60003073ffffffffffffffffffffffffffffffffffffffff16634768e049336040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016200443391906200aa1b565b602060405180830381600087803b1580156200444e57600080fd5b505af115801562004463573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062004489919081019062009da7565b1515620044cd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620044c4906200b4da565b60405180910390fd5b601f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638428f258836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016200454691906200aa1b565b602060405180830381600087803b1580156200456157600080fd5b505af115801562004576573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506200459c919081019062009da7565b9050919050565b6000806000806000809050620045b93362002c4d565b80620046125750602660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b806200470a5750602660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663893d20e86040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015620046a057600080fd5b505af1158015620046b5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620046db91908101906200994f565b73ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff16145b156200471557600190505b8015156200475a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162004751906200b430565b60405180910390fd5b601f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fb47e016886040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401620047d391906200aa1b565b602060405180830381600087803b158015620047ee57600080fd5b505af115801562004803573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506200482991908101906200994f565b935060008473ffffffffffffffffffffffffffffffffffffffff16141515156200488a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162004881906200b496565b60405180910390fd5b620048a284","876022620088459092919063ffffffff16565b508392508273ffffffffffffffffffffffffffffffffffffffff16633bc5de306040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156200490b57600080fd5b505af115801562004920573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506200494691908101906200994f565b91508173ffffffffffffffffffffffffffffffffffffffff166320ba5b606009886040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401620049a29291906200b1f0565b602060405180830381600087803b158015620049bd57600080fd5b505af1158015620049d2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620049f8919081019062009da7565b50600194505050505092915050565b60006060600080600080600062004a3c8962004a2d8c8962007baf90919063ffffffff16565b62007bcf90919063ffffffff16565b9550601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c04d4ef3601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000898c6040518563ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040162004ae094939291906200ade5565b6040805180830381600087803b15801562004afa57600080fd5b505af115801562004b0f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062004b35919081019062009b79565b809550819650505083151562004b82576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162004b79906200b2dc565b60405180910390fd5b601f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fb47e0168b6040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040162004bfb91906200aa1b565b602060405180830381600087803b15801562004c1657600080fd5b505af115801562004c2b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062004c5191908101906200994f565b925060008373ffffffffffffffffffffffffffffffffffffffff161415151562004cb2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162004ca9906200b496565b60405180910390fd5b62004cca838a6022620088459092919063ffffffff16565b508291508173ffffffffffffffffffffffffffffffffffffffff16633bc5de306040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801562004d3357600080fd5b505af115801562004d48573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062004d6e91908101906200994f565b90508073ffffffffffffffffffffffffffffffffffffffff166320ba5b6060098b6040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040162004dca9291906200b1f0565b602060405180830381600087803b15801562004de557600080fd5b505af115801562004dfa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062004e20919081019062009da7565b50600196505050505050509392505050565b600062004e40601b62008af7565b905090565b60138054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801562004edf5780601f1062004eb35761010080835404028352916020019162004edf565b820191906000526020600020905b81548152906001019060200180831162004ec157829003601f168201915b505050505081565b6060600080905062004ef93362002c4d565b8062004f525750602660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b806200504a5750602660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663893d20e86040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801562004fe057600080fd5b505af115801562004ff5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506200501b91908101906200994f565b73ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff16145b156200505557600190505b8015156200509a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162005091906200b430565b60405180910390fd5b60298054806020026020016040519081016040528092919081815260200182805480156200511e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311620050d3575b505050505091505090565b6000606060008060008060003073ffffffffffffffffffffffffffffffffffffffff16634768e049336040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016200518c91906200aa1b565b602060405180830381600087803b158015620051a757600080fd5b505af1158015620051bc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620051e2919081019062009da7565b151562005226576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200521d906200b4da565b60405180910390fd5b6200523b898762007baf90919063ffffffff16565b9550601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c04d4ef3601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000898c6040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401620052df94939291906200abd3565b6040805180830381600087803b158015620052f957600080fd5b505af11580156200530e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062005334919081019062009b79565b809550819650505083151562005381576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162005378906200b452565b60405180910390fd5b601f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fb47e0168a6040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401620053fa91906200aa1b565b602060405180830381600087803b1580156200541557600080fd5b505af11580156200542a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506200545091908101906200994f565b925060008373ffffffffffffffffffffffffffffffffffffffff1614151515620054b1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620054a8906200b496565b60405180910390fd5b620054c7836022620079de90919063ffffffff16565b508291508173ffffffffffffffffffffffffffffffffffffffff16633bc5de306040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156200553057600080fd5b505af115801562005545573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506200556b91908101906200994f565b90508073ffffffffffffffffffffffffffffffffffffffff166358edef4c60096040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401620055c591906200b1cc565b602060405180830381600087803b158015620055e057600080fd5b505af1158015620055f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506200561b919081019062009da7565b506001965050505050505092915050565b60098054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620056c65780601f106200569a57610100808354040283529160200191620056c6565b820191906000526020600020905b815481529060010190602001808311620056a857829003601f168201915b505050505081565b60003073ffffffffffffffffffffffffffffffffffffffff16634768e049336040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016200572791906200aa1b565b602060405180830381600087803b1580156200574257600080fd5b505af115801562005757573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506200577d919081019062009da7565b1515620057c1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620057b8906200b4da565b60405180910390fd5b601f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c4dad5ce83856040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016200583c9291906200aa38565b602060405180830381600087803b1580156200585757600080fd5b505af11580156200586c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062005892919081019062009d","a7565b905092915050565b6000601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166337258c0d33601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1630620059b260048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156200599d5780601f1062005971576101008083540402835291602001916200599d565b820191906000526020600020905b8154815290600101906020018083116200597f57829003601f168201915b50505050508962007bcf90919063ffffffff16565b6040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401620059ef94939291906200aa65565b602060405180830381600087803b15801562005a0a57600080fd5b505af115801562005a1f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062005a45919081019062009da7565b151562005a89576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162005a80906200b2ba565b60405180910390fd5b62005aa18383601b62008b059092919063ffffffff16565b905092915050565b6000806000601f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fb47e016856040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040162005b2791906200aa1b565b602060405180830381600087803b15801562005b4257600080fd5b505af115801562005b57573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062005b7d91908101906200994f565b915060008273ffffffffffffffffffffffffffffffffffffffff16141562005ba9576000925062005bb0565b8190508092505b5050919050565b606080600062005bc8602262008d0e565b925092509250909192565b6000606060008062005c038662005bf4898662007bcf90919063ffffffff16565b62007bcf90919063ffffffff16565b9250601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c04d4ef3601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163062005d1a60048054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801562005d055780601f1062005cd95761010080835404028352916020019162005d05565b820191906000526020600020905b81548152906001019060200180831162005ce757829003601f168201915b50505050508c62007bcf90919063ffffffff16565b878a6040518663ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040162005d5a9594939291906200af13565b6040805180830381600087803b15801562005d7457600080fd5b505af115801562005d89573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062005daf919081019062009b79565b809250819350505080151562005dfc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162005df3906200b540565b60405180910390fd5b62005e148787601b620080449092919063ffffffff16565b93505050509392505050565b6000602660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663124b65b46040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801562005ea957600080fd5b505af115801562005ebe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062005ee491908101906200994f565b905090565b60008060008060008615620060a757602a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bdbeafa08a8a89601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16306040518663ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040162005f9b9594939291906200aff0565b6040805180830381600087803b15801562005fb557600080fd5b505af115801562005fca573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062005ff0919081019062009dd3565b80945081935050508273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff1614156200603b57600080945094506200632d565b60278390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062006251565b602b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bdbeafa08a8a89601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16306040518663ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016200614a9594939291906200aff0565b6040805180830381600087803b1580156200616457600080fd5b505af115801562006179573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506200619f919081019062009dd3565b80945081935050508273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff161415620061ea57600080945094506200632d565b60288390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b602660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b1a8b94b84308a6040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401620062ce939291906200aab9565b602060405180830381600087803b158015620062e957600080fd5b505af1158015620062fe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062006324919081019062009da7565b50826001945094505b50505094509492505050565b601660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b3032be86040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015620063e857600080fd5b505af1158015620063fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506200642391908101906200994f565b905090565b60068054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620064c25780601f106200649657610100808354040283529160200191620064c2565b820191906000526020600020905b815481529060010190602001808311620064a457829003601f168201915b505050505081565b60078054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620065645780601f10620065385761010080835404028352916020019162006564565b820191906000526020600020905b8154815290600101906020018083116200654657829003601f168201915b505050505081565b60008054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620066065780601f10620065da5761010080835404028352916020019162006606565b820191906000526020600020905b815481529060010190602001808311620065e857829003601f168201915b505050505081565b601760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60088054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620066ce5780601f10620066a257610100808354040283529160200191620066ce565b820191906000526020600020905b815481529060010190602001808311620066b057829003601f168201915b505050505081565b6000601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c55fc52d6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156200678957600080fd5b505af11580156200679e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620067c491908101906200994f565b905090565b60006060600080620067f986620067ea898662007bcf90919063ffffffff16565b62007bcf90919063ffffffff16565b9250601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c04d4ef3601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16306200691060048054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291","9081815260200182805460018160011615610100020316600290048015620068fb5780601f10620068cf57610100808354040283529160200191620068fb565b820191906000526020600020905b815481529060010190602001808311620068dd57829003601f168201915b50505050508c62007bcf90919063ffffffff16565b878a6040518663ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401620069509594939291906200af13565b6040805180830381600087803b1580156200696a57600080fd5b505af11580156200697f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620069a5919081019062009b79565b8092508193505050801515620069f2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620069e9906200b3ca565b60405180910390fd5b62006a0a8787601b62007be59092919063ffffffff16565b93505050509392505050565b6000602154905090565b6060601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166337258c0d33601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163062006b3860038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801562006b235780601f1062006af75761010080835404028352916020019162006b23565b820191906000526020600020905b81548152906001019060200180831162006b0557829003601f168201915b50505050508862007bcf90919063ffffffff16565b6040518563ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040162006b7594939291906200aa65565b602060405180830381600087803b15801562006b9057600080fd5b505af115801562006ba5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062006bcb919081019062009da7565b151562006c0f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162006c06906200b3a8565b60405180910390fd5b62006c2582601b6200872c90919063ffffffff16565b9050919050565b6000606060008062006c5c8662006c4d898662007bcf90919063ffffffff16565b62007bcf90919063ffffffff16565b9250601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c04d4ef3601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163062006d7360048054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801562006d5e5780601f1062006d325761010080835404028352916020019162006d5e565b820191906000526020600020905b81548152906001019060200180831162006d4057829003601f168201915b50505050508c62007bcf90919063ffffffff16565b878a6040518663ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040162006db39594939291906200af13565b6040805180830381600087803b15801562006dcd57600080fd5b505af115801562006de2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062006e08919081019062009b79565b809250819350505080151562006e55576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162006e4c906200b2ba565b60405180910390fd5b62006e6d8787601b62008b059092919063ffffffff16565b93505050509392505050565b6000806000809050602660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663893d20e86040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801562006f0857600080fd5b505af115801562006f1d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062006f4391908101906200994f565b73ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff16148062006fca5750602660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b1562006fd557600190505b8015156200701a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162007011906200b430565b60405180910390fd5b602660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635a3298946040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015620070a157600080fd5b505af1158015620070b6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620070dc91908101906200994f565b73ffffffffffffffffffffffffffffffffffffffff1663c6e8631b878787601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16306040518663ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016200715c9594939291906200b24f565b602060405180830381600087803b1580156200717757600080fd5b505af11580156200718c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620071b291908101906200994f565b91508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff161415151562007229576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162007220906200b40e565b60405180910390fd5b602660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632f84c391836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401620072a291906200aa1b565b602060405180830381600087803b158015620072bd57600080fd5b505af1158015620072d2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620072f8919081019062009da7565b5081925050509392505050565b60058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156200739f5780601f1062007373576101008083540402835291602001916200739f565b820191906000526020600020905b8154815290600101906020018083116200738157829003601f168201915b505050505081565b6000806000809050620073ba3362002c4d565b80620074135750602660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b806200750b5750602660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663893d20e86040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015620074a157600080fd5b505af1158015620074b6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620074dc91908101906200994f565b73ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff16145b156200751657600190505b8015156200755b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162007552906200b430565b60405180910390fd5b602660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635de2d1926040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015620075e257600080fd5b505af1158015620075f7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506200761d91908101906200994f565b73ffffffffffffffffffffffffffffffffffffffff166376a39282601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16306040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401620076979291906200aa38565b602060405180830381600087803b158015620076b257600080fd5b505af1158015620076c7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620076ed91908101906200994f565b91508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff161415151562007764576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200775b906200b4b8565b60405180910390fd5b60298290806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050819250505090565b600080600080601f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fb47e016866040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016200785191906200aa1b565b602060405180830381600087803b1580156200786c57600080fd5b505af115801562007881573d6000803e3d6000fd5b505050506040513d601f19601f82","","","","","","836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600001819055508385600101828154811015156200101757fe5b906000526020600020906002020160000190805190602001906200103d929190620010e6565b508460020160008154809291906001019190505550600091505b509392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620010a257805160ff1916838001178555620010d3565b82800160010185558215620010d3579182015b82811115620010d2578251825591602001919060010190620010b5565b5b509050620010e29190620011a2565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200112957805160ff19168380011785556200115a565b828001600101855582156200115a579182015b82811115620011595782518255916020019190600101906200113c565b5b509050620011699190620011a2565b5090565b8154818355818111156200119d576002028160020283600052602060002091820191016200119c9190620011ca565b5b505050565b620011c791905b80821115620011c3576000816000905550600101620011a9565b5090565b90565b6200120f91905b808211156200120b5760008082016000620011ed919062001212565b6001820160006101000a81549060ff021916905550600201620011d1565b5090565b90565b50805460018160011615610100020316600290046000825580601f106200123a57506200125b565b601f0160209004906000526020600020908101906200125a9190620011a2565b5b50565b60006200126c8251620014b2565b905092915050565b6000602082840312156200128757600080fd5b600062001297848285016200125e565b91505092915050565b60008060408385031215620012b457600080fd5b6000620012c4858286016200125e565b9250506020620012d7858286016200125e565b9150509250929050565b620012ec8162001492565b82525050565b6000620012ff8262001487565b80845262001315816020860160208601620014d2565b620013208162001508565b602085010191505092915050565b60006200133b826200147c565b80845262001351816020860160208601620014d2565b6200135c8162001508565b602085010191505092915050565b6000815460018116600081146200138a5760018114620013ab57620013f0565b607f600283041680865260ff198316602087015260408601935050620013f0565b60028204808652602086019550620013c3856200146a565b60005b82811015620013e757815481890152600182019150602081019050620013c6565b80880195505050505b505092915050565b600060a0820190506200140f6000830188620012e1565b6200141e6020830187620012e1565b81810360408301526200143281866200132e565b90508181036060830152620014488185620012f2565b905081810360808301526200145e81846200136a565b90509695505050505050565b60008160005260206000209050919050565b600081519050919050565b600081519050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b83811015620014f2578082015181840152602081019050620014d5565b8381111562001502576000848401525b50505050565b6000601f19601f8301169050919050565b6158b680620015296000396000f30060806040526004361061023b576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806301db8d891461024057806303ba71eb1461026b578063081f9339146102965780630c0fd886146102c15780630feca68a146102ec578063117803e31461031757806315e9977e1461034257806320ba5b601461036d57806323a772bd146103aa578063283d26ca146103d55780632a0acc6a146104005780632ef8cb1c1461042b57806339151753146104565780633a0e6174146104815780633b007d8e146104ac5780635262e2a1146104e957806357872d131461051457806358edef4c1461053f578063632e1dfe1461057c5780636709ecba146105a7578063699cc7f1146105e65780636adc4165146106115780637bdd20b21461063c57806381e167cf146106795780638662acad146106a4578063949d225d146106e157806395a0c7961461070c578063983d2737146107495780639d53fe2b14610774578063a066609a1461079f578063a18c751e146107de578063a26aa92a1461081b578063ac44522e14610858578063b11569f514610895578063b3032be8146108c0578063b3cea217146108eb578063b4eb5ede14610916578063b85a290114610941578063bb1239c31461096c578063bb24fe8a14610997578063c28304aa146109c2578063c55fc52d146109ed578063cb6163ad14610a18578063d087d28814610a55578063d6d7d52514610a80578063e8c2553a14610abd578063f307b32c14610afa575b600080fd5b34801561024c57600080fd5b50610255610b25565b6040516102629190615467565b60405180910390f35b34801561027757600080fd5b50610280610bc3565b60405161028d9190615467565b60405180910390f35b3480156102a257600080fd5b506102ab610c61565b6040516102b89190615467565b60405180910390f35b3480156102cd57600080fd5b506102d6610cff565b6040516102e39190615467565b60405180910390f35b3480156102f857600080fd5b50610301610d9d565b60405161030e91906155ab565b60405180910390f35b34801561032357600080fd5b5061032c610dc3565b6040516103399190615467565b60405180910390f35b34801561034e57600080fd5b50610357610e61565b6040516103649190615467565b60405180910390f35b34801561037957600080fd5b50610394600480360361038f9190810190614c6f565b610eff565b6040516103a1919061544c565b60405180910390f35b3480156103b657600080fd5b506103bf6110fd565b6040516103cc9190615467565b60405180910390f35b3480156103e157600080fd5b506103ea61119b565b6040516103f79190615467565b60405180910390f35b34801561040c57600080fd5b50610415611239565b6040516104229190615467565b60405180910390f35b34801561043757600080fd5b506104406112d7565b60405161044d9190615467565b60405180910390f35b34801561046257600080fd5b5061046b611375565b6040516104789190615467565b60405180910390f35b34801561048d57600080fd5b50610496611413565b6040516104a39190615467565b60405180910390f35b3480156104b857600080fd5b506104d360048036036104ce9190810190614c6f565b6114b1565b6040516104e0919061544c565b60405180910390f35b3480156104f557600080fd5b506104fe6116af565b60405161050b9190615172565b60405180910390f35b34801561052057600080fd5b506105296116d9565b6040516105369190615467565b60405180910390f35b34801561054b57600080fd5b5061056660048036036105619190810190614bda565b611777565b604051610573919061544c565b60405180910390f35b34801561058857600080fd5b50610591611972565b60405161059e9190615172565b60405180910390f35b3480156105b357600080fd5b506105ce60048036036105c99190810190614b4c565b611998565b6040516105dd93929190615407565b60405180910390f35b3480156105f257600080fd5b506105fb611a12565b6040516106089190615467565b60405180910390f35b34801561061d57600080fd5b50610626611ab0565b6040516106339190615172565b60405180910390f35b34801561064857600080fd5b50610663600480360361065e9190810190614c1b565b611ad6565b604051610670919061544c565b60405180910390f35b34801561068557600080fd5b5061068e611cf9565b60405161069b9190615467565b60405180910390f35b3480156106b057600080fd5b506106cb60048036036106c69190810190614c1b565b611d97565b6040516106d89190615489565b60405180910390f35b3480156106ed57600080fd5b506106f6611fb9565b60405161070391906155ab565b60405180910390f35b34801561071857600080fd5b50610733600480360361072e9190810190614a31565b611fca565b604051610740919061544c565b60405180910390f35b34801561075557600080fd5b5061075e61200f565b60405161076b9190615467565b60405180910390f35b34801561078057600080fd5b506107896120ad565b6040516107969190615467565b60405180910390f35b3480156107ab57600080fd5b506107c660048036036107c19190810190614b9e565b61214b565b6040516107d593929190615407565b60405180910390f35b3480156107ea57600080fd5b5061080560048036036108009190810190614c6f565b6122aa565b604051610812919061544c565b60405180910390f35b34801561082757600080fd5b50610842600480360361083d9190810190614a80565b6124a8565b60405161084f919061544c565b60405180910390f35b34801561086457600080fd5b5061087f600480360361087a9190810190614cdb565b612613565b60405161088c919061544c565b60405180910390f35b3480156108a157600080fd5b506108aa61284b565b6040516108b79190615172565b60405180910390f35b3480156108cc57600080fd5b506108d5612871565b6040516108e29190615172565b60405180910390f35b3480156108f757600080fd5b50610900612936565b60405161090d9190615467565b60405180910390f35b34801561092257600080fd5b5061092b6129d4565b6040516109389190615467565b60405180910390f35b34801561094d57600080fd5b50610956612a72565b6040516109639190615467565b60405180910390f35b34801561097857600080fd5b50610981612b10565b60405161098e9190615172565b60405180910390f35b3480156109a357600080fd5b506109ac612b36565b6040516109b99190615467565b60405180910390f35b3480156109ce57600080fd5b506109d7612bd4565b6040516109e49190615172565b60405180910390f35b3480156109f957600080fd5b50610a02612bfe565b604051610a0f9190615172565b60405180910390f35b348015610a2457600080fd5b50610a3f6004803603610a3a9190810190614cdb565b612cc3565b604051610a4c919061544c565b60405180910390f35b348015610a6157600080fd5b50610a6a612efb565b604051610a7791906155ab565b60405180910390f35b348015610a8c57600080fd5b50610aa76004803603610aa29190810190614bda565b61","","168201915b505050505081565b601960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006060600080611af0868461342d90919063ffffffff16565b9250601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c04d4ef3601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1630611c0160048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611bed5780601f10611bc257610100808354040283529160200191611bed565b820191906000526020600020905b815481529060010190602001808311611bd057829003601f168201915b50505050508b61342d90919063ffffffff16565b878a6040518663ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611c3f9594939291906153a5565b6040805180830381600087803b158015611c5857600080fd5b505af1158015611c6c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611c909190810190614b10565b8092508193505050801515611cda576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cd19061550b565b60405180910390fd5b611cee86601b61399390919063ffffffff16565b935050505092915050565b60158054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611d8f5780601f10611d6457610100808354040283529160200191611d8f565b820191906000526020600020905b815481529060010190602001808311611d7257829003601f168201915b505050505081565b606080600080611db0868461342d90919063ffffffff16565b9250601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c04d4ef3601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1630611ec160038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611ead5780601f10611e8257610100808354040283529160200191611ead565b820191906000526020600020905b815481529060010190602001808311611e9057829003601f168201915b50505050508b61342d90919063ffffffff16565b878a6040518663ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611eff9594939291906153a5565b6040805180830381600087803b158015611f1857600080fd5b505af1158015611f2c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611f509190810190614b10565b8092508193505050801515611f9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f919061552b565b60405180910390fd5b611fae86601b613c1b90919063ffffffff16565b935050505092915050565b6000611fc5601b613d2e565b905090565b60008115611fef57611fe884846022613d3c9092919063ffffffff16565b9050612008565b61200584846025613d3c9092919063ffffffff16565b90505b9392505050565b60138054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156120a55780601f1061207a576101008083540402835291602001916120a5565b820191906000526020600020905b81548152906001019060200180831161208857829003601f168201915b505050505081565b60098054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156121435780601f1061211857610100808354040283529160200191612143565b820191906000526020600020905b81548152906001019060200180831161212657829003601f168201915b505050505081565b60608060006060600080601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c04d4ef361219b6116af565b30868b6040518563ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016121d99493929190615345565b6040805180830381600087803b1580156121f257600080fd5b505af1158015612206573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061222a9190810190614b10565b8092508193505050801515612274576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161226b906154ab565b60405180910390fd5b871561228f576122846022613be5565b9550955095506122a0565b6122996025613be5565b9550955095505b5050509250925092565b6000601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166337258c0d33601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16306123bc60048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156123a85780601f1061237d576101008083540402835291602001916123a8565b820191906000526020600020905b81548152906001019060200180831161238b57829003601f168201915b50505050508961342d90919063ffffffff16565b6040518563ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016123f7949392919061518d565b602060405180830381600087803b15801561241157600080fd5b505af1158015612425573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506124499190810190614b75565b151561248a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612481906154cb565b60405180910390fd5b6124a08383601b6140589092919063ffffffff16565b905092915050565b6000806000601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c04d4ef36124f36116af565b3088886040518563ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161253194939291906152e5565b6040805180830381600087803b15801561254a57600080fd5b505af115801561255e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506125829190810190614b10565b80925081935050508015156125cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016125c39061554b565b60405180910390fd5b85156125ef576125e888886022613d3c9092919063ffffffff16565b9250612608565b61260588886025613d3c9092919063ffffffff16565b92505b505095945050505050565b6000606060008061263f86612631898661342d90919063ffffffff16565b61342d90919063ffffffff16565b9250601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c04d4ef3601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163061275060048054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561273c5780601f106127115761010080835404028352916020019161273c565b820191906000526020600020905b81548152906001019060200180831161271f57829003601f168201915b50505050508c61342d90919063ffffffff16565b878a6040518663ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161278e9594939291906153a5565b6040805180830381600087803b1580156127a757600080fd5b505af11580156127bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506127df9190810190614b10565b8092508193505050801515612829576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016128209061558b565b60405180910390fd5b61283f8787601b61379e9092919063ffffffff16565b93505050509392505050565b601660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b3032be86040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156128f957600080fd5b505af115801561290d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506129319190810190614a08565b905090565b60068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156129cc5780601f106129a1576101008083540402835291602001916129cc565b820191906000526020600020905b8154815290600101906020018083116129af57829003601f168201915b505050505081565b60078054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612a6a5780601f10612a3f57610100808354040283529160200191612a6a565b820191906000526020600020905b815481529060010190602001808311612a4d57829003601f168201915b505050505081565b60008054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181","","","48d8565b9550506020614ab8888289016148d8565b9450506040614ac988828901614976565b935050606086013567ffffffffffffffff811115614ae657600080fd5b614af2888289016149b2565b9250506080614b0388828901614900565b9150509295509295909350565b60008060408385031215614b2357600080fd5b6000614b31858286016148ec565b9250506020614b428582860161498a565b9150509250929050565b600060208284031215614b5e57600080fd5b6000614b6c84828501614976565b91505092915050565b600060208284031215614b8757600080fd5b6000614b958482850161498a565b91505092915050565b60008060a08385031215614bb157600080fd5b6000614bbf85828601614976565b9250506020614bd085828601614900565b9150509250929050565b600060208284031215614bec57600080fd5b600082013567ffffffffffffffff811115614c0657600080fd5b614c12848285016149b2565b91505092915050565b60008060a08385031215614c2e57600080fd5b600083013567ffffffffffffffff811115614c4857600080fd5b614c54858286016149b2565b9250506020614c6585828601614900565b9150509250929050565b60008060408385031215614c8257600080fd5b600083013567ffffffffffffffff811115614c9c57600080fd5b614ca8858286016149b2565b925050602083013567ffffffffffffffff811115614cc557600080fd5b614cd1858286016149b2565b9150509250929050565b600080600060c08486031215614cf057600080fd5b600084013567ffffffffffffffff811115614d0a57600080fd5b614d16868287016149b2565b935050602084013567ffffffffffffffff811115614d3357600080fd5b614d3f868287016149b2565b9250506040614d5086828701614900565b9150509250925092565b614d63816156b0565b82525050565b6000614d748261566a565b808452602084019350614d8683615641565b60005b82811015614db857614d9c868351614d5a565b614da582615696565b9150602086019550600181019050614d89565b50849250505092915050565b614dcd81615675565b614dd68261564e565b60005b82811015614e0857614dec858351614e1e565b614df5826156a3565b9150602085019450600181019050614dd9565b5050505050565b614e18816156d0565b82525050565b614e27816156dc565b82525050565b6000614e388261568b565b808452614e4c816020860160208601615759565b614e558161578c565b602085010191505092915050565b6000614e6e82615680565b808452614e82816020860160208601615759565b614e8b8161578c565b602085010191505092915050565b600081546001811660008114614eb65760018114614ed657614f17565b607f600283041680865260ff198316602087015260408601935050614f17565b60028204808652602086019550614eec85615658565b60005b82811015614f0e57815481890152600182019150602081019050614eef565b80880195505050505b505092915050565b614f2881615726565b82525050565b614f3781615738565b82525050565b6000601782527f676574416c6c41737365747320466f7262696464656e210000000000000000006020830152604082019050919050565b6000600e82527f73657420466f7262696464656e210000000000000000000000000000000000006020830152604082019050919050565b6000601b82527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006020830152604082019050919050565b6000601182527f72656d6f766520466f7262696464656e210000000000000000000000000000006020830152604082019050919050565b6000600e82527f67657420466f7262696464656e210000000000000000000000000000000000006020830152604082019050919050565b6000601382527f616464417373657420466f7262696464656e21000000000000000000000000006020830152604082019050919050565b6000601182527f696e7365727420466f7262696464656e210000000000000000000000000000006020830152604082019050919050565b6000600882527f61646441737365740000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600e82527f61646420466f7262696464656e210000000000000000000000000000000000006020830152604082019050919050565b6000600c82527f676574416c6c41737365747300000000000000000000000000000000000000006020830152604082019050919050565b61516c816156e6565b82525050565b60006020820190506151876000830184614d5a565b92915050565b60006080820190506151a26000830187614d5a565b6151af6020830186614d5a565b6151bc6040830185614d5a565b81810360608301526151ce8184614e2d565b905095945050505050565b600060a0820190506151ee6000830188614d5a565b6151fb6020830187614d5a565b818103604083015261520d8186614e63565b905061521c6060830185614d5a565b6152296080830184614d5a565b9695505050505050565b600060a0820190506152486000830188614d5a565b6152556020830187614d5a565b81810360408301526152678186614e63565b9050818103606083015261527b8185614e2d565b9050818103608083015261528f8184614e99565b90509695505050505050565b60006080820190506152b06000830186614d5a565b6152bd6020830185614d5a565b6152ca6040830184614f1f565b81810360608301526152db8161512c565b9050949350505050565b6000610100820190506152fb6000830187614d5a565b6153086020830186614f1f565b8181036040830152615319816150be565b9050818103606083015261532d8185614e2d565b905061533c6080830184614dc4565b95945050505050565b60006101008201905061535b6000830187614d5a565b6153686020830186614f1f565b81810360408301526153798161512c565b9050818103606083015261538d8185614e2d565b905061539c6080830184614dc4565b95945050505050565b6000610100820190506153bb6000830188614d5a565b6153c86020830187614f2e565b81810360408301526153da8186614e2d565b905081810360608301526153ee8185614e2d565b90506153fd6080830184614dc4565b9695505050505050565b600060608201905081810360008301526154218186614d69565b905081810360208301526154358185614d69565b90506154446040830184615163565b949350505050565b60006020820190506154616000830184614e0f565b92915050565b600060208201905081810360008301526154818184614e63565b905092915050565b600060208201905081810360008301526154a38184614e2d565b905092915050565b600060208201905081810360008301526154c481614f3d565b9050919050565b600060208201905081810360008301526154e481614f74565b9050919050565b6000602082019050818103600083015261550481614fab565b9050919050565b6000602082019050818103600083015261552481614fe2565b9050919050565b6000602082019050818103600083015261554481615019565b9050919050565b6000602082019050818103600083015261556481615050565b9050919050565b6000602082019050818103600083015261558481615087565b9050919050565b600060208201905081810360008301526155a4816150f5565b9050919050565b60006020820190506155c06000830184615163565b92915050565b6000604051905081810181811067ffffffffffffffff821117156155e957600080fd5b8060405250919050565b600067ffffffffffffffff82111561560a57600080fd5b602082029050919050565b600067ffffffffffffffff82111561562c57600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b6000819050919050565b60008160005260206000209050919050565b600081519050919050565b600060049050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b6000615731826156b0565b9050919050565b6000615743826156b0565b9050919050565b82818337600083830152505050565b60005b8381101561577757808201518184015260208101905061575c565b83811115615786576000848401525b50505050565b6000601f19601f8301169050919050565b6060600080836c0100000000000000000000000002915060146040519080825280601f01601f1916602001820160405280156157e85781602001602082028038833980820191505090505b509250600090505b601481101561587557818160148110151561580757fe5b1a7f010000000000000000000000000000000000000000000000000000000000000002838281518110151561583857fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506157f0565b50509190505600a265627a7a7230582074729e41751e6c8c3535545ba9fb1cd1d484258c3deeec4f037ecb406c4bc2fa6c6578706572696d656e74616cf50037a265627a7a72305820bf743ccc6802b4c303ac91552313644d683d313d8cbb0dbeb5f88ec3f50e5d5e6c6578706572696d656e74616cf50037"};

    public static final String BINARY = String.join("", BINARY_ARRAY);

    public static final String[] SM_BINARY_ARRAY = {"","","aa1b565b60405180910390f35b348015620008a957600080fd5b50620008c86004803603620008c2919081019062009f26565b62003aea565b604051620008d791906200b0ff565b60405180910390f35b348015620008ed57600080fd5b506200090c600480360362000906919081019062009d7b565b62003d37565b6040516200091b91906200b055565b60405180910390f35b3480156200093157600080fd5b506200093c62003e62565b6040516200094b91906200b562565b60405180910390f35b3480156200096157600080fd5b506200096c62003e6c565b6040516200097b91906200aa1b565b60405180910390f35b3480156200099157600080fd5b506200099c62003e96565b604051620009ab91906200b149565b60405180910390f35b348015620009c157600080fd5b50620009cc62003f38565b604051620009db91906200aa1b565b60405180910390f35b348015620009f157600080fd5b5062000a10600480360362000a0a919081019062009923565b62003f62565b60405162000a1f91906200b0ff565b60405180910390f35b34801562000a3557600080fd5b5062000a54600480360362000a4e919081019062009eb3565b6200412b565b60405162000a6391906200b0ff565b60405180910390f35b34801562000a7957600080fd5b5062000a98600480360362000a92919081019062009a12565b6200433a565b60405162000aa791906200b0ff565b60405180910390f35b34801562000abd57600080fd5b5062000ac86200483d565b60405162000ad791906200b149565b60405180910390f35b34801562000aed57600080fd5b5062000af8620048df565b60405162000b0791906200b055565b60405180910390f35b34801562000b1d57600080fd5b5062000b286200496f565b60405162000b3791906200aa1b565b60405180910390f35b34801562000b4d57600080fd5b5062000b5862004995565b60405162000b6791906200b149565b60405180910390f35b34801562000b7d57600080fd5b5062000b9c600480360362000b96919081019062009a12565b62004a37565b60405162000bab91906200b0ff565b60405180910390f35b34801562000bc157600080fd5b5062000be0600480360362000bda919081019062009a12565b62004c73565b60405162000bef91906200b0ff565b60405180910390f35b34801562000c0557600080fd5b5062000c1062004eaf565b60405162000c1f91906200b149565b60405180910390f35b34801562000c3557600080fd5b5062000c54600480360362000c4e919081019062009e14565b62004f51565b60405162000c6391906200b0ff565b60405180910390f35b34801562000c7957600080fd5b5062000c846200515d565b60405162000c9391906200b149565b60405180910390f35b34801562000ca957600080fd5b5062000cb4620051ff565b60405162000cc391906200aa1b565b60405180910390f35b34801562000cd957600080fd5b5062000cf8600480360362000cf2919081019062009f26565b62005225565b60405162000d0791906200b0ff565b60405180910390f35b34801562000d1d57600080fd5b5062000d2862005472565b60405162000d3791906200b149565b60405180910390f35b34801562000d4d57600080fd5b5062000d6c600480360362000d66919081019062009c83565b62005514565b60405162000d7c9291906200aeb9565b60405180910390f35b34801562000d9257600080fd5b5062000db1600480360362000dab919081019062009eb3565b6200564f565b60405162000dc091906200b0ff565b60405180910390f35b34801562000dd657600080fd5b5062000df5600480360362000def919081019062009eb3565b6200585e565b60405162000e0491906200b0ff565b60405180910390f35b34801562000e1a57600080fd5b5062000e2562005a6d565b60405162000e3491906200b149565b60405180910390f35b34801562000e4a57600080fd5b5062000e5562005b0f565b60405162000e6491906200b149565b60405180910390f35b34801562000e7a57600080fd5b5062000e8562005bb1565b60405162000e9491906200b149565b60405180910390f35b34801562000eaa57600080fd5b5062000eb562005c53565b60405162000ec491906200b149565b60405180910390f35b34801562000eda57600080fd5b5062000ee562005cf5565b60405162000ef491906200b149565b60405180910390f35b34801562000f0a57600080fd5b5062000f1562005d97565b60405162000f2491906200aa1b565b60405180910390f35b34801562000f3a57600080fd5b5062000f59600480360362000f53919081019062009c83565b62005dbd565b60405162000f699291906200aeb9565b60405180910390f35b34801562000f7f57600080fd5b5062000f9e600480360362000f98919081019062009923565b6200620d565b60405162000fad91906200aa1b565b60405180910390f35b34801562000fc357600080fd5b5062000fce620062e5565b60405162000fdd91906200b149565b60405180910390f35b34801562000ff357600080fd5b506200101260048036036200100c919081019062009fae565b62006387565b604051620010229291906200b0c4565b60405180910390f35b3480156200103857600080fd5b5062001057600480360362001051919081019062009923565b62006467565b6040516200106691906200b0ff565b60405180910390f35b3480156200107c57600080fd5b506200109b600480360362001095919081019062009923565b62006630565b604051620010aa91906200aa1b565b60405180910390f35b348015620010c057600080fd5b50620010df6004803603620010d991908101906200997b565b6200673e565b604051620010ee91906200b0ff565b60405180910390f35b3480156200110457600080fd5b506200110f6200690a565b6040516200111e91906200b149565b60405180910390f35b3480156200113457600080fd5b506200115360048036036200114d919081019062009923565b620069ac565b6040516200116291906200b0ff565b60405180910390f35b3480156200117857600080fd5b506200118362006abe565b6040516200119291906200b562565b60405180910390f35b348015620011a857600080fd5b50620011b362006ad1565b604051620011c291906200b149565b60405180910390f35b348015620011d857600080fd5b50620011e362006b73565b604051620011f291906200b149565b60405180910390f35b3480156200120857600080fd5b5062001227600480360362001221919081019062009e59565b62006c15565b6040516200123691906200b0ff565b60405180910390f35b3480156200124c57600080fd5b506200126b600480360362001265919081019062009ff3565b62006e4b565b6040516200127a91906200aa1b565b60405180910390f35b3480156200129057600080fd5b506200129b620072d7565b604051620012aa91906200aa1b565b60405180910390f35b348015620012c057600080fd5b50620012cb620073a0565b604051620012da91906200b149565b60405180910390f35b348015620012f057600080fd5b50620012fb62007442565b6040516200130a91906200b149565b60405180910390f35b3480156200132057600080fd5b506200133f600480360362001339919081019062009923565b620074e4565b6040516200134e91906200b0ff565b60405180910390f35b3480156200136457600080fd5b506200136f620076ad565b6040516200137e91906200b149565b60405180910390f35b3480156200139457600080fd5b50620013b36004803603620013ad919081019062009e59565b6200774f565b604051620013c291906200b16d565b60405180910390f35b601960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60098054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156200148b5780601f106200145f576101008083540402835291602001916200148b565b820191906000526020600020905b8154815290600101906020018083116200146d57829003601f168201915b505050505081565b600060606000806000806000620014c889620014b98c896200798490919063ffffffff16565b620079a490919063ffffffff16565b9550601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cfe3b125601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000898c6040518563ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016200156c94939291906200aca7565b6040805180830381600087803b1580156200158657600080fd5b505af11580156200159b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620015c1919081019062009b79565b80955081965050508315156200160e576040517fc703cb1200000000000000000000000000000000000000000000000000000000815260040162001605906200b2dc565b60405180910390fd5b601f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a5d51f748b6040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016200168791906200aa1b565b602060405180830381600087803b158015620016a257600080fd5b505af1158015620016b7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620016dd91908101906200994f565b925060008373ffffffffffffffffffffffffffffffffffffffff16141515156200173e576040517fc703cb1200000000000000000000000000000000000000000000000000000000815260040162001735906200b496565b60405180910390fd5b62001756838a6022620079ba9092919063ffffffff16565b508291508173ffffffffffffffffffffffffffffffffffffffff1663e211e0c16040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015620017bf57600080fd5b505af1158015620017d4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620017fa91908101906200994f565b90508073ffffffffffffffffffffffffffffffffffffffff166361e020cb60098b6040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401620018569291906200b1f0565b602060405180830381600087803b1580156200187157600080fd5b505af115801562001886573d6000803e3d6000fd5b505050506040513d60","1f19601f82011682018060405250620018ac919081019062009da7565b50600196505050505050509392505050565b60028054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620019585780601f106200192c5761010080835404028352916020019162001958565b820191906000526020600020905b8154815290600101906020018083116200193a57829003601f168201915b505050505081565b6000601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631500025a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015620019e957600080fd5b505af1158015620019fe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062001a2491908101906200994f565b905090565b60158054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801562001ac35780601f1062001a975761010080835404028352916020019162001ac3565b820191906000526020600020905b81548152906001019060200180831162001aa557829003601f168201915b505050505081565b600080600080600080905062001ae133620069ac565b8062001b3a5750602660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b8062001c325750602660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c624d5346040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801562001bc857600080fd5b505af115801562001bdd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062001c0391908101906200994f565b73ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff16145b1562001c3d57600190505b80151562001c82576040517fc703cb1200000000000000000000000000000000000000000000000000000000815260040162001c79906200b4b8565b60405180910390fd5b601f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a5d51f74886040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040162001cfb91906200aa1b565b602060405180830381600087803b15801562001d1657600080fd5b505af115801562001d2b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062001d5191908101906200994f565b935060008473ffffffffffffffffffffffffffffffffffffffff161415151562001db2576040517fc703cb1200000000000000000000000000000000000000000000000000000000815260040162001da9906200b496565b60405180910390fd5b62001dca84876022620079ba9092919063ffffffff16565b508392508273ffffffffffffffffffffffffffffffffffffffff1663e211e0c16040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801562001e3357600080fd5b505af115801562001e48573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062001e6e91908101906200994f565b91508173ffffffffffffffffffffffffffffffffffffffff166361e020cb6009886040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040162001eca9291906200b1f0565b602060405180830381600087803b15801562001ee557600080fd5b505af115801562001efa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062001f20919081019062009da7565b50600194505050505092915050565b600080600080601f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a5d51f74866040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040162001fae91906200aa1b565b602060405180830381600087803b15801562001fc957600080fd5b505af115801562001fde573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506200200491908101906200994f565b925060008373ffffffffffffffffffffffffffffffffffffffff161415620020305760009350620020d9565b8291508173ffffffffffffffffffffffffffffffffffffffff1663e211e0c16040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156200209857600080fd5b505af1158015620020ad573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620020d391908101906200994f565b90508093505b505050919050565b6000806060600080600080600089518b5114151562002137576040517fc703cb120000000000000000000000000000000000000000000000000000000081526004016200212e906200b364565b60405180910390fd5b6200214c8c876200798490919063ffffffff16565b9550600094505b8a51851015620021c9576200218a8b868151811015156200217057fe5b9060200190602002015187620079a490919063ffffffff16565b9550620021b98a868151811015156200219f57fe5b9060200190602002015187620079a490919063ffffffff16565b9550848060010195505062002153565b601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cfe3b125601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000898d6040518563ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016200226b94939291906200ad7b565b6040805180830381600087803b1580156200228557600080fd5b505af11580156200229a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620022c0919081019062009b79565b80945081955050508215156200230d576040517fc703cb1200000000000000000000000000000000000000000000000000000000815260040162002304906200b4da565b60405180910390fd5b6200231a8c8c8c62007c6c565b809250819350505060258190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506001819750975050505050505094509492505050565b6000806000806000809050620023b433620069ac565b806200240d5750602660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b80620025055750602660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c624d5346040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156200249b57600080fd5b505af1158015620024b0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620024d691908101906200994f565b73ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff16145b156200251057600190505b80151562002555576040517fc703cb120000000000000000000000000000000000000000000000000000000081526004016200254c906200b4b8565b60405180910390fd5b6200256288888862007c6c565b809350819450505060258290806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505060018294509450505050935093915050565b6060601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638d478f2933601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1630620026fa60038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620026e55780601f10620026b957610100808354040283529160200191620026e5565b820191906000526020600020905b815481529060010190602001808311620026c757829003601f168201915b505050505088620079a490919063ffffffff16565b6040518563ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016200273794939291906200aa65565b602060405180830381600087803b1580156200275257600080fd5b505af115801562002767573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506200278d919081019062009da7565b1515620027d1576040517fc703cb12000000000000000000000000000000000000000000000000000000008152600401620027c8906200b3a8565b60405180910390fd5b620027e782601b62007ef190919063ffffffff16565b9050919050565b6000806000803073ffffffffffffffffffffffffffffffffffffffff1663d2eef3a1336040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016200284b91906200aa1b565b602060405180830381600087803b1580156200286657600080fd5b505af11580156200287b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060","405250620028a1919081019062009da7565b1515620028e5576040517fc703cb12000000000000000000000000000000000000000000000000000000008152600401620028dc906200b474565b60405180910390fd5b601f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a5d51f74866040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016200295e91906200aa1b565b602060405180830381600087803b1580156200297957600080fd5b505af11580156200298e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620029b491908101906200994f565b925060008373ffffffffffffffffffffffffffffffffffffffff161415151562002a15576040517fc703cb1200000000000000000000000000000000000000000000000000000000815260040162002a0c906200b496565b60405180910390fd5b62002a2b8360226200800a90919063ffffffff16565b508291508173ffffffffffffffffffffffffffffffffffffffff1663e211e0c16040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801562002a9457600080fd5b505af115801562002aa9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062002acf91908101906200994f565b90508073ffffffffffffffffffffffffffffffffffffffff16637e6f287c60096040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040162002b2991906200b1cc565b602060405180830381600087803b15801562002b4457600080fd5b505af115801562002b59573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062002b7f919081019062009da7565b5060019350505050919050565b6060600080905062002b9e33620069ac565b8062002bf75750602660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b8062002cef5750602660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c624d5346040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801562002c8557600080fd5b505af115801562002c9a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062002cc091908101906200994f565b73ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff16145b1562002cfa57600190505b80151562002d3f576040517fc703cb1200000000000000000000000000000000000000000000000000000000815260040162002d36906200b4b8565b60405180910390fd5b602980548060200260200160405190810160405280929190818152602001828054801562002dc357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831162002d78575b505050505091505090565b6000606060008062002dea86846200798490919063ffffffff16565b9250601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cfe3b125601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600086896040518563ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040162002e8e94939291906200ac3d565b6040805180830381600087803b15801562002ea857600080fd5b505af115801562002ebd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062002ee3919081019062009b79565b809250819350505080151562002f30576040517fc703cb1200000000000000000000000000000000000000000000000000000000815260040162002f27906200b4fc565b60405180910390fd5b601f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ef0c4a1c876040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040162002fa991906200aa1b565b602060405180830381600087803b15801562002fc457600080fd5b505af115801562002fd9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062002fff919081019062009da7565b935050505092915050565b60008060008090506200301d33620069ac565b80620030765750602660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b806200316e5750602660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c624d5346040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156200310457600080fd5b505af115801562003119573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506200313f91908101906200994f565b73ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff16145b156200317957600190505b801515620031be576040517fc703cb12000000000000000000000000000000000000000000000000000000008152600401620031b5906200b4b8565b60405180910390fd5b602660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630efa13016040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156200324557600080fd5b505af11580156200325a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506200328091908101906200994f565b73ffffffffffffffffffffffffffffffffffffffff16633fe4bd49601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16306040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401620032fa9291906200aa38565b602060405180830381600087803b1580156200331557600080fd5b505af11580156200332a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506200335091908101906200994f565b91508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff1614151515620033c7576040517fc703cb12000000000000000000000000000000000000000000000000000000008152600401620033be906200b40e565b60405180910390fd5b60298290806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050819250505090565b6060806000620034466022620081db565b925092509250909192565b6000606060008062003481866200347289866200798490919063ffffffff16565b6200798490919063ffffffff16565b9250601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cfe3b125601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600086896040518563ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016200352594939291906200ade5565b6040805180830381600087803b1580156200353f57600080fd5b505af115801562003554573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506200357a919081019062009b79565b8092508193505050801515620035c7576040517fc703cb12000000000000000000000000000000000000000000000000000000008152600401620035be906200b342565b60405180910390fd5b601f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639e57312e87896040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401620036429291906200aa38565b602060405180830381600087803b1580156200365d57600080fd5b505af115801562003672573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062003698919081019062009da7565b93505050509392505050565b6000606060008373ffffffffffffffffffffffffffffffffffffffff161415620036d2576000915062003704565b620036e88360226200821590919063ffffffff16565b9050600081511415620036ff576000915062003704565b600191505b50919050565b60138054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620037a45780601f106200377857610100808354040283529160200191620037a4565b820191906000526020600020905b8154815290600101906020018083116200378657829003601f168201915b505050505081565b6000620037c660016021546200830090919063ffffffff16565b602181905550602154905090565b600060606000806200380486620037f58986620079a490919063ffffffff16565b620079a490919063ffffffff16565b9250601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cfe3b125601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16306200391b60048054600181600116156101000203166002900480601f0160208091040260200160","40519081016040528092919081815260200182805460018160011615610100020316600290048015620039065780601f10620038da5761010080835404028352916020019162003906565b820191906000526020600020905b815481529060010190602001808311620038e857829003601f168201915b50505050508c620079a490919063ffffffff16565b878a6040518663ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016200395b9594939291906200af13565b6040805180830381600087803b1580156200397557600080fd5b505af11580156200398a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620039b0919081019062009b79565b8092508193505050801515620039fd576040517fc703cb12000000000000000000000000000000000000000000000000000000008152600401620039f4906200b430565b60405180910390fd5b62003a158787601b6200835a9092919063ffffffff16565b93505050509392505050565b6000602660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631bf727356040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801562003aaa57600080fd5b505af115801562003abf573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062003ae591908101906200994f565b905090565b6000606060008062003b1a8662003b0b8986620079a490919063ffffffff16565b620079a490919063ffffffff16565b9250601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cfe3b125601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163062003c3160048054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801562003c1c5780601f1062003bf05761010080835404028352916020019162003c1c565b820191906000526020600020905b81548152906001019060200180831162003bfe57829003601f168201915b50505050508c620079a490919063ffffffff16565b878a6040518663ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040162003c719594939291906200af13565b6040805180830381600087803b15801562003c8b57600080fd5b505af115801562003ca0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062003cc6919081019062009b79565b809250819350505080151562003d13576040517fc703cb1200000000000000000000000000000000000000000000000000000000815260040162003d0a906200b51e565b60405180910390fd5b62003d2b8787601b620085639092919063ffffffff16565b93505050509392505050565b6060811562003dd157602780548060200260200160405190810160405280929190818152602001828054801562003dc457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831162003d79575b5050505050905062003e5d565b602880548060200260200160405190810160405280929190818152602001828054801562003e5557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831162003e0a575b505050505090505b919050565b6000602154905090565b6000601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600b8054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801562003f305780601f1062003f045761010080835404028352916020019162003f30565b820191906000526020600020905b81548152906001019060200180831162003f1257829003601f168201915b505050505081565b6000601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60003073ffffffffffffffffffffffffffffffffffffffff1663d2eef3a1336040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040162003fbb91906200aa1b565b602060405180830381600087803b15801562003fd657600080fd5b505af115801562003feb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062004011919081019062009da7565b151562004055576040517fc703cb120000000000000000000000000000000000000000000000000000000081526004016200404c906200b474565b60405180910390fd5b601f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ef0c4a1c836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401620040ce91906200aa1b565b602060405180830381600087803b158015620040e957600080fd5b505af1158015620040fe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062004124919081019062009da7565b9050919050565b6000601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638d478f2933601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16306200424360048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156200422e5780601f1062004202576101008083540402835291602001916200422e565b820191906000526020600020905b8154815290600101906020018083116200421057829003601f168201915b505050505089620079a490919063ffffffff16565b6040518563ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016200428094939291906200aa65565b602060405180830381600087803b1580156200429b57600080fd5b505af1158015620042b0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620042d6919081019062009da7565b15156200431a576040517fc703cb1200000000000000000000000000000000000000000000000000000000815260040162004311906200b51e565b60405180910390fd5b620043328383601b620085639092919063ffffffff16565b905092915050565b6000606060008060008060003073ffffffffffffffffffffffffffffffffffffffff1663d2eef3a1336040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016200439d91906200aa1b565b602060405180830381600087803b158015620043b857600080fd5b505af1158015620043cd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620043f3919081019062009da7565b151562004437576040517fc703cb120000000000000000000000000000000000000000000000000000000081526004016200442e906200b474565b60405180910390fd5b6200444c89876200798490919063ffffffff16565b9550601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cfe3b125601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000898c6040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401620044f094939291906200abd3565b6040805180830381600087803b1580156200450a57600080fd5b505af11580156200451f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062004545919081019062009b79565b809550819650505083151562004592576040517fc703cb1200000000000000000000000000000000000000000000000000000000815260040162004589906200b3ec565b60405180910390fd5b601f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a5d51f748a6040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016200460b91906200aa1b565b602060405180830381600087803b1580156200462657600080fd5b505af11580156200463b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506200466191908101906200994f565b925060008373ffffffffffffffffffffffffffffffffffffffff1614151515620046c2576040517fc703cb12000000000000000000000000000000000000000000000000000000008152600401620046b9906200b496565b60405180910390fd5b620046d88360226200800a90919063ffffffff16565b508291508173ffffffffffffffffffffffffffffffffffffffff1663e211e0c16040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156200474157600080fd5b505af115801562004756573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506200477c91908101906200994f565b90508073ffffffffffffffffffffffffffffffffffffffff16637e6f287c60096040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401620047d691906200b1cc565b602060405180830381600087803b158015620047f157600080fd5b505af115801562004806573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506200482c919081019062009da7565b506001965050505050505092915050565b600a8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620048d7578060","","","00000000000000000000028152600401620068ac9291906200aa38565b602060405180830381600087803b158015620068c757600080fd5b505af1158015620068dc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062006902919081019062009da7565b905092915050565b60038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620069a45780601f106200697857610100808354040283529160200191620069a4565b820191906000526020600020905b8154815290600101906020018083116200698657829003601f168201915b505050505081565b600080601f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a5d51f74846040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040162006a2891906200aa1b565b602060405180830381600087803b15801562006a4357600080fd5b505af115801562006a58573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062006a7e91908101906200994f565b905060008173ffffffffffffffffffffffffffffffffffffffff16141562006aaa576000915062006ab8565b62006ab581620036a4565b91505b50919050565b600062006acc601b62008d3a565b905090565b600c8054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801562006b6b5780601f1062006b3f5761010080835404028352916020019162006b6b565b820191906000526020600020905b81548152906001019060200180831162006b4d57829003601f168201915b505050505081565b60108054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801562006c0d5780601f1062006be15761010080835404028352916020019162006c0d565b820191906000526020600020905b81548152906001019060200180831162006bef57829003601f168201915b505050505081565b6000606060008062006c318684620079a490919063ffffffff16565b9250601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cfe3b125601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163062006d4860048054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801562006d335780601f1062006d075761010080835404028352916020019162006d33565b820191906000526020600020905b81548152906001019060200180831162006d1557829003601f168201915b50505050508b620079a490919063ffffffff16565b878a6040518663ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040162006d889594939291906200af13565b6040805180830381600087803b15801562006da257600080fd5b505af115801562006db7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062006ddd919081019062009b79565b809250819350505080151562006e2a576040517fc703cb1200000000000000000000000000000000000000000000000000000000815260040162006e21906200b540565b60405180910390fd5b62006e4086601b620088d790919063ffffffff16565b935050505092915050565b6000806000809050602660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c624d5346040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801562006eda57600080fd5b505af115801562006eef573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062006f1591908101906200994f565b73ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff16148062006f9c5750602660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b1562006fa757600190505b80151562006fec576040517fc703cb1200000000000000000000000000000000000000000000000000000000815260040162006fe3906200b4b8565b60405180910390fd5b602660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bc921a8a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156200707357600080fd5b505af115801562007088573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620070ae91908101906200994f565b73ffffffffffffffffffffffffffffffffffffffff1663825ca314878787601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16306040518663ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016200712e9594939291906200b24f565b602060405180830381600087803b1580156200714957600080fd5b505af11580156200715e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506200718491908101906200994f565b91508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff1614151515620071fb576040517fc703cb12000000000000000000000000000000000000000000000000000000008152600401620071f2906200b320565b60405180910390fd5b602660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338213fc6836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016200727491906200aa1b565b602060405180830381600087803b1580156200728f57600080fd5b505af1158015620072a4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620072ca919081019062009da7565b5081925050509392505050565b6000601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e92139da6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156200736057600080fd5b505af115801562007375573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506200739b91908101906200994f565b905090565b600f8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156200743a5780601f106200740e576101008083540402835291602001916200743a565b820191906000526020600020905b8154815290600101906020018083116200741c57829003601f168201915b505050505081565b60008054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620074dc5780601f10620074b057610100808354040283529160200191620074dc565b820191906000526020600020905b815481529060010190602001808311620074be57829003601f168201915b505050505081565b60003073ffffffffffffffffffffffffffffffffffffffff1663d2eef3a1336040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016200753d91906200aa1b565b602060405180830381600087803b1580156200755857600080fd5b505af11580156200756d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062007593919081019062009da7565b1515620075d7576040517fc703cb12000000000000000000000000000000000000000000000000000000008152600401620075ce906200b474565b60405180910390fd5b601f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638b9b8e5c836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016200765091906200aa1b565b602060405180830381600087803b1580156200766b57600080fd5b505af115801562007680573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620076a6919081019062009da7565b9050919050565b600e8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620077475780601f106200771b5761010080835404028352916020019162007747565b820191906000526020600020905b8154815290600101906020018083116200772957829003601f168201915b505050505081565b6060806000806200776a8684620079a490919063ffffffff16565b9250601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cfe3b125601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16306200788160038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156200786c5780601f1062007840576101008083540402835291602001916200786c565b820191906000526020600020905b8154815290600101906020018083116200784e57829003601f168201915b50505050508b620079a490919063ffffffff16565b878a6040518663ffffffff167c01","00000000000000000000000000000000000000000000000000000000028152600401620078c19594939291906200af13565b6040805180830381600087803b158015620078db57600080fd5b505af1158015620078f0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062007916919081019062009b79565b809250819350505080151562007963576040517fc703cb120000000000000000000000000000000000000000000000000000000081526004016200795a906200b3a8565b60405180910390fd5b6200797986601b62007ef190919063ffffffff16565b935050505092915050565b60606200799c83620079968462008d48565b62008e2c565b905092915050565b6060620079b2838362008e2c565b905092915050565b6000808460000160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050600081111562007b2c577fde7bfb2ec9d489d20ec2a1e43e3bce0b0c89c17611aa8c2e7ff127b514cbf29232336040805190810160405280600681526020017f4d4f444946590000000000000000000000000000000000000000000000000000815250878960000160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160405162007abf9594939291906200aaf6565b60405180910390a1828560000160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101908051906020019062007b219291906200933d565b506001915062007c64565b828560000160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101908051906020019062007b869291906200933d565b5084600101805480919060010162007b9f9190620093c4565b9050600181018560000160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555083856001018281548110151562007c0057fe5b9060005260206000200160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508460020160008154809291906001019190505550600091505b509392505050565b600080600080601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163062007ca0620093f3565b62007cad9291906200af7f565b604051809103906000f08015801562007cca573d6000803e3d6000fd5b5091508451865114151562007d16576040517fc703cb1200000000000000000000000000000000000000000000000000000000815260040162007d0d906200b364565b60405180910390fd5b600090505b855181101562007e13578173ffffffffffffffffffffffffffffffffffffffff166361e020cb878381518110151562007d5057fe5b90602001906020020151878481518110151562007d6957fe5b906020019060200201516040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040162007dae9291906200b191565b602060405180830381600087803b15801562007dc957600080fd5b505af115801562007dde573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062007e04919081019062009da7565b50808060010191505062007d1b565b601f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dbe09bdc88846040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040162007e8e9291906200aee6565b6040805180830381600087803b15801562007ea857600080fd5b505af115801562007ebd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062007ee3919081019062009dd3565b935093505050935093915050565b606082600001826040518082805190602001908083835b60208310151562007f2f578051825260208201915060208101905060208303925062007f08565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206001018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801562007ffd5780601f1062007fd15761010080835404028352916020019162007ffd565b820191906000526020600020905b81548152906001019060200180831162007fdf57829003601f168201915b5050505050905092915050565b6000808360000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015490506000811415620080685760009150620081d4565b7fde7bfb2ec9d489d20ec2a1e43e3bce0b0c89c17611aa8c2e7ff127b514cbf29232336040805190810160405280600681526020017f44454c4554450000000000000000000000000000000000000000000000000000815250868860000160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101604051620081199594939291906200aaf6565b60405180910390a18360000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000808201600090556001820160006200817d919062009404565b5050600184600101600183038154811015156200819657fe5b9060005260206000200160000160146101000a81548160ff021916908315150217905550836002016000815480929190600190039190505550600191505b5092915050565b60608060008060009050620081fd856000620081f78862009006565b62009014565b80945081955082965083975050505050509193909250565b60608260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620082f35780601f10620082c757610100808354040283529160200191620082f3565b820191906000526020600020905b815481529060010190602001808311620082d557829003601f168201915b5050505050905092915050565b600080828401905083811015151562008350576040517fc703cb1200000000000000000000000000000000000000000000000000000000815260040162008347906200b386565b60405180910390fd5b8091505092915050565b60008084600001846040518082805190602001908083835b60208310151562008399578051825260208201915060208101905060208303925062008372565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600001549050600081111562008556577fb842e70165ea1827273bc7a4271b485c64a747bd35bd7b804c41256bf4d5ecf132336040805190810160405280600681526020017f4d4f4449465900000000000000000000000000000000000000000000000000008152508789600001896040518082805190602001908083835b6020831015156200847257805182526020820191506020810190506020830392506200844b565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600101604051620084bb9594939291906200ab61565b60405180910390a18285600001856040518082805190602001908083835b602083101515620085005780518252602082019150602081019050602083039250620084d9565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060010190805190602001906200854b9291906200933d565b50600191506200855b565b600091505b509392505050565b60008084600001846040518082805190602001908083835b602083101515620085a257805182526020820191506020810190506020830392506200857b565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060000154905060008111156200875f577fb842e70165ea1827273bc7a4271b485c64a747bd35bd7b804c41256bf4d5ecf132336040805190810160405280600681526020017f4d4f4449465900000000000000000000000000000000000000000000000000008152508789600001896040518082805190602001908083835b6020831015156200867b578051825260208201915060208101905060208303925062008654565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600101604051620086c49594939291906200ab61565b60405180910390a18285600001856040518082805190602001908083835b602083101515620087095780518252602082019150602081019050602083039250620086e2565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206001019080519060200190620087549291906200933d565b5060019150620088cf565b8285600001856040518082805190602001908083835b6020831015156200879c578051825260208201915060208101905060208303925062008775565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206001019080519060200190620087e79291906200933d565b5084600101805480919060010162008800919062009450565b90506001810185600001856040518082805190602001908083835b6020831015156200884257805182526020820191506020810190506020830392506200881b565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600001819055508385600101828154811015156200888f57fe5b","","","","","836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600001819055508385600101828154811015156200101757fe5b906000526020600020906002020160000190805190602001906200103d929190620010e6565b508460020160008154809291906001019190505550600091505b509392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620010a257805160ff1916838001178555620010d3565b82800160010185558215620010d3579182015b82811115620010d2578251825591602001919060010190620010b5565b5b509050620010e29190620011a2565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200112957805160ff19168380011785556200115a565b828001600101855582156200115a579182015b82811115620011595782518255916020019190600101906200113c565b5b509050620011699190620011a2565b5090565b8154818355818111156200119d576002028160020283600052602060002091820191016200119c9190620011ca565b5b505050565b620011c791905b80821115620011c3576000816000905550600101620011a9565b5090565b90565b6200120f91905b808211156200120b5760008082016000620011ed919062001212565b6001820160006101000a81549060ff021916905550600201620011d1565b5090565b90565b50805460018160011615610100020316600290046000825580601f106200123a57506200125b565b601f0160209004906000526020600020908101906200125a9190620011a2565b5b50565b60006200126c8251620014b2565b905092915050565b6000602082840312156200128757600080fd5b600062001297848285016200125e565b91505092915050565b60008060408385031215620012b457600080fd5b6000620012c4858286016200125e565b9250506020620012d7858286016200125e565b9150509250929050565b620012ec8162001492565b82525050565b6000620012ff8262001487565b80845262001315816020860160208601620014d2565b620013208162001508565b602085010191505092915050565b60006200133b826200147c565b80845262001351816020860160208601620014d2565b6200135c8162001508565b602085010191505092915050565b6000815460018116600081146200138a5760018114620013ab57620013f0565b607f600283041680865260ff198316602087015260408601935050620013f0565b60028204808652602086019550620013c3856200146a565b60005b82811015620013e757815481890152600182019150602081019050620013c6565b80880195505050505b505092915050565b600060a0820190506200140f6000830188620012e1565b6200141e6020830187620012e1565b81810360408301526200143281866200132e565b90508181036060830152620014488185620012f2565b905081810360808301526200145e81846200136a565b90509695505050505050565b60008160005260206000209050919050565b600081519050919050565b600081519050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b83811015620014f2578082015181840152602081019050620014d5565b8381111562001502576000848401525b50505050565b6000601f19601f8301169050919050565b6158b680620015296000396000f30060806040526004361061023b576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630bc95c79146102405780630c9481b91461026b578063112da303146102965780631500025a146102c15780631a1f1cd2146102ec5780633055ae811461031757806342033801146103545780634425c4261461037f57806347a6caff146103aa57806351cf7708146103e757806356688fa214610424578063567f2836146104635780635c7540bc1461048e5780635edfd6fa146104b95780635f12ec2e146104e457806361e020cb1461050f57806367e09af51461054c57806374b00d5314610577578063769fe342146105a25780637e3a1ef4146105cd5780637e6f287c146105f85780637f00af97146106355780638a4451f5146106605780638ed13ef51461068b57806398068364146106c8578063a4fd7711146106f3578063a8cced2014610730578063ad07c37a1461076d578063afe5e5a6146107aa578063b09a50fe146107e9578063b32941d814610814578063bcc6cdb61461083f578063bced95351461086a578063bfabb86d14610895578063c03fd5e7146108c0578063c6125d0c146108eb578063cfc742d514610916578063d1281a7814610953578063d3e9af5a1461097e578063d617f06d146109a9578063d7e7948f146109d4578063e3fbfc3f146109ff578063e92139da14610a3c578063ece272e314610a67578063ee19b0cf14610a92578063f6cb4bc514610abd578063f976699414610ae8575b600080fd5b34801561024c57600080fd5b50610255610b25565b6040516102629190615172565b60405180910390f35b34801561027757600080fd5b50610280610b4b565b60405161028d9190615467565b60405180910390f35b3480156102a257600080fd5b506102ab610be9565b6040516102b89190615467565b60405180910390f35b3480156102cd57600080fd5b506102d6610c87565b6040516102e39190615172565b60405180910390f35b3480156102f857600080fd5b50610301610d4c565b60405161030e9190615467565b60405180910390f35b34801561032357600080fd5b5061033e60048036036103399190810190614bda565b610dea565b60405161034b9190615489565b60405180910390f35b34801561036057600080fd5b50610369610fe5565b6040516103769190615467565b60405180910390f35b34801561038b57600080fd5b50610394611083565b6040516103a191906155ab565b60405180910390f35b3480156103b657600080fd5b506103d160048036036103cc9190810190614cdb565b6110a9565b6040516103de919061544c565b60405180910390f35b3480156103f357600080fd5b5061040e60048036036104099190810190614cdb565b6112e1565b60405161041b919061544c565b60405180910390f35b34801561043057600080fd5b5061044b60048036036104469190810190614b4c565b611519565b60405161045a93929190615407565b60405180910390f35b34801561046f57600080fd5b50610478611593565b60405161048591906155ab565b60405180910390f35b34801561049a57600080fd5b506104a361159d565b6040516104b09190615172565b60405180910390f35b3480156104c557600080fd5b506104ce6115c7565b6040516104db9190615467565b60405180910390f35b3480156104f057600080fd5b506104f9611665565b6040516105069190615172565b60405180910390f35b34801561051b57600080fd5b5061053660048036036105319190810190614c6f565b61168f565b604051610543919061544c565b60405180910390f35b34801561055857600080fd5b5061056161188d565b60405161056e9190615467565b60405180910390f35b34801561058357600080fd5b5061058c61192b565b6040516105999190615172565b60405180910390f35b3480156105ae57600080fd5b506105b7611951565b6040516105c49190615467565b60405180910390f35b3480156105d957600080fd5b506105e26119ef565b6040516105ef9190615467565b60405180910390f35b34801561060457600080fd5b5061061f600480360361061a9190810190614bda565b611a8d565b60405161062c919061544c565b60405180910390f35b34801561064157600080fd5b5061064a611c88565b6040516106579190615467565b60405180910390f35b34801561066c57600080fd5b50610675611d26565b6040516106829190615172565b60405180910390f35b34801561069757600080fd5b506106b260048036036106ad9190810190614cdb565b611d4c565b6040516106bf919061544c565b60405180910390f35b3480156106d457600080fd5b506106dd611f84565b6040516106ea9190615467565b60405180910390f35b3480156106ff57600080fd5b5061071a60048036036107159190810190614c6f565b612022565b604051610727919061544c565b60405180910390f35b34801561073c57600080fd5b5061075760048036036107529190810190614a31565b612220565b604051610764919061544c565b60405180910390f35b34801561077957600080fd5b50610794600480360361078f9190810190614c6f565b612265565b6040516107a1919061544c565b60405180910390f35b3480156107b657600080fd5b506107d160048036036107cc9190810190614b9e565b612463565b6040516107e093929190615407565b60405180910390f35b3480156107f557600080fd5b506107fe6125c2565b60405161080b9190615467565b60405180910390f35b34801561082057600080fd5b50610829612660565b6040516108369190615467565b60405180910390f35b34801561084b57600080fd5b506108546126fe565b6040516108619190615467565b60405180910390f35b34801561087657600080fd5b5061087f61279c565b60405161088c9190615467565b60405180910390f35b3480156108a157600080fd5b506108aa61283a565b6040516108b79190615467565b60405180910390f35b3480156108cc57600080fd5b506108d56128d8565b6040516108e29190615172565b60405180910390f35b3480156108f757600080fd5b506109006128fe565b60405161090d9190615467565b60405180910390f35b34801561092257600080fd5b5061093d60048036036109389190810190614a80565b61299c565b60405161094a919061544c565b60405180910390f35b34801561095f57600080fd5b50610968612b07565b6040516109759190615467565b60405180910390f35b34801561098a57600080fd5b50610993612ba5565b6040516109a091906155ab565b60405180910390f35b3480156109b557600080fd5b506109be612bb6565b6040516109cb9190615467565b60405180910390f35b3480156109e057600080fd5b506109e9612c54565b6040516109f69190615467565b60405180910390f35b348015610a0b57600080fd5b50610a266004803603610a219190810190614c1b565b612cf2565b604051610a33919061544c565b60405180910390f35b348015610a4857600080fd5b50610a51612f15565b604051610a5e9190615172565b60405180910390f35b348015610a7357600080fd5b50610a7c612fda565b604051610a899190615467565b60405180910390f35b348015610a9e57600080fd5b50610aa761","3078565b604051610ab49190615467565b60405180910390f35b348015610ac957600080fd5b50610ad2613116565b604051610adf9190615467565b60405180910390f35b348015610af457600080fd5b50610b0f6004803603610b0a9190810190614c1b565b6131b4565b604051610b1c9190615489565b60405180910390f35b601960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60098054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610be15780601f10610bb657610100808354040283529160200191610be1565b820191906000526020600020905b815481529060010190602001808311610bc457829003601f168201915b505050505081565b60028054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610c7f5780601f10610c5457610100808354040283529160200191610c7f565b820191906000526020600020905b815481529060010190602001808311610c6257829003601f168201915b505050505081565b6000601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631500025a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610d0f57600080fd5b505af1158015610d23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610d479190810190614a08565b905090565b60158054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610de25780601f10610db757610100808354040283529160200191610de2565b820191906000526020600020905b815481529060010190602001808311610dc557829003601f168201915b505050505081565b6060601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638d478f2933601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1630610efc60038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ee85780601f10610ebd57610100808354040283529160200191610ee8565b820191906000526020600020905b815481529060010190602001808311610ecb57829003601f168201915b5050505050886133d690919063ffffffff16565b6040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610f37949392919061518d565b602060405180830381600087803b158015610f5157600080fd5b505af1158015610f65573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610f899190810190614b75565b1515610fca576040517fc703cb12000000000000000000000000000000000000000000000000000000008152600401610fc19061550b565b60405180910390fd5b610fde82601b6133ea90919063ffffffff16565b9050919050565b60138054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561107b5780601f106110505761010080835404028352916020019161107b565b820191906000526020600020905b81548152906001019060200180831161105e57829003601f168201915b505050505081565b600061109b60016021546134fd90919063ffffffff16565b602181905550602154905090565b600060606000806110d5866110c789866133d690919063ffffffff16565b6133d690919063ffffffff16565b9250601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cfe3b125601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16306111e660048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111d25780601f106111a7576101008083540402835291602001916111d2565b820191906000526020600020905b8154815290600101906020018083116111b557829003601f168201915b50505050508c6133d690919063ffffffff16565b878a6040518663ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016112249594939291906153a5565b6040805180830381600087803b15801561123d57600080fd5b505af1158015611251573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506112759190810190614b10565b80925081935050508015156112bf576040517fc703cb120000000000000000000000000000000000000000000000000000000081526004016112b69061552b565b60405180910390fd5b6112d58787601b6135549092919063ffffffff16565b93505050509392505050565b6000606060008061130d866112ff89866133d690919063ffffffff16565b6133d690919063ffffffff16565b9250601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cfe3b125601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163061141e60048054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561140a5780601f106113df5761010080835404028352916020019161140a565b820191906000526020600020905b8154815290600101906020018083116113ed57829003601f168201915b50505050508c6133d690919063ffffffff16565b878a6040518663ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161145c9594939291906153a5565b6040805180830381600087803b15801561147557600080fd5b505af1158015611489573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506114ad9190810190614b10565b80925081935050508015156114f7576040517fc703cb120000000000000000000000000000000000000000000000000000000081526004016114ee9061556b565b60405180910390fd5b61150d8787601b6137519092919063ffffffff16565b93505050509392505050565b60608060007ff2b3d6f00be579b67419fa36ef89b4d8bb8cf9877e7c4ec33bcd52f165fe7ddb33611548611665565b306040516115589392919061529b565b60405180910390a1831561157b576115706022613aae565b92509250925061158c565b6115856025613aae565b9250925092505b9193909250565b6000602154905090565b6000601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600b8054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561165d5780601f106116325761010080835404028352916020019161165d565b820191906000526020600020905b81548152906001019060200180831161164057829003601f168201915b505050505081565b6000601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638d478f2933601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16306117a160048054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561178d5780601f106117625761010080835404028352916020019161178d565b820191906000526020600020905b81548152906001019060200180831161177057829003601f168201915b5050505050896133d690919063ffffffff16565b6040518563ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016117dc949392919061518d565b602060405180830381600087803b1580156117f657600080fd5b505af115801561180a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061182e9190810190614b75565b151561186f576040517fc703cb120000000000000000000000000000000000000000000000000000000081526004016118669061556b565b60405180910390fd5b6118858383601b6137519092919063ffffffff16565b905092915050565b600a8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156119235780601f106118f857610100808354040283529160200191611923565b820191906000526020600020905b81548152906001019060200180831161190657829003601f168201915b505050505081565b601760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600d8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156119e75780601f106119bc576101008083540402835291602001916119e7565b820191906000526020600020905b8154815290600101906020018083116119ca57829003601f168201915b505050505081565b60018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611a855780601f10611a5a57610100808354040283529160200191611a85565b820191906000526020600020905b815481529060010190602001808311611a6857829003601f168201915b505050505081565b6000601e60009054906101000a900473ffffffffffff","","","91505b509392505050565b60608060008060009050613acc856000613ac788614426565b614434565b80945081955082965083975050505050509193909250565b60008083600001836040518082805190602001908083835b602083101515613b215780518252602082019150602081019050602083039250613afc565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206000015490506000811415613b6c5760009150613d2f565b7fb842e70165ea1827273bc7a4271b485c64a747bd35bd7b804c41256bf4d5ecf132336040805190810160405280600681526020017f44454c45544500000000000000000000000000000000000000000000000000008152508688600001886040518082805190602001908083835b602083101515613c005780518252602082019150602081019050602083039250613bdb565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600101604051613c47959493929190615233565b60405180910390a183600001836040518082805190602001908083835b602083101515613c895780518252602082019150602081019050602083039250613c64565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600080820160009055600182016000613cd591906147a2565b505060018460010160018303815481101515613ced57fe5b906000526020600020906002020160010160006101000a81548160ff021916908315150217905550836002016000815480929190600190039190505550600191505b5092915050565b60008084600001846040518082805190602001908083835b602083101515613d735780518252602082019150602081019050602083039250613d4e565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206000015490506000811115613dbe5760009150613f23565b8285600001856040518082805190602001908083835b602083101515613df95780518252602082019150602081019050602083039250613dd4565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206001019080519060200190613e429291906146f0565b50846001018054809190600101613e599190614770565b90506001810185600001856040518082805190602001908083835b602083101515613e995780518252602082019150602081019050602083039250613e74565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060000181905550838560010182815481101515613ee557fe5b90600052602060002090600202016000019080519060200190613f099291906146f0565b508460020160008154809291906001019190505550600191505b509392505050565b6000808460000160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905060008111156140e2577fb878ca1044fc99f4084dda56da543f24ec9f652ef40a3cb97d5837c695ef47b132336040805190810160405280600681526020017f4d4f444946590000000000000000000000000000000000000000000000000000815250878960000160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660405161404e9594939291906151d9565b60405180910390a1828560000160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001915061423f565b828560000160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084600101805480919060010161417b91906147ea565b9050600181018560000160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055508385600101828154811015156141db57fe5b9060005260206000200160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508460020160008154809291906001019190505550600091505b509392505050565b600081600201549050919050565b606080606080606060008088955087945084518651016040519080825280601f01601f19166020018201604052801561429d5781602001602082028038833980820191505090505b50935083925060009150600090505b855181101561435f5785818151811015156142c357fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002838380600101945081518110151561432257fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506142ac565b600090505b845181101561441757848181518110151561437b57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f01000000000000000000000000000000000000000000000000000000000000000283838060010194508151811015156143da57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050614364565b83965050505050505092915050565b600081600201549050919050565b6060806000806000806000808860405190808252806020026020018201604052801561446f5781602001602082028038833980820191505090505b509750886040519080825280602002602001820160405280156144a15781602001602082028038833980820191505090505b509650600093506000925060009550600094508993505b6144c28b856145c6565b156145b9576144d18b856145da565b915091508188848151811015156144e457fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505080878481518110151561452f57fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600183019250858060010196505088861015156145a85761458c8b8561468c565b94506145988b866145c6565b15156145a357600094505b6145b9565b6145b28b8561468c565b93506144b8565b5050505093509350935093565b600082600101805490508210905092915050565b60008083600101838154811015156145ee57fe5b9060005260206000200160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691508360000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690509250929050565b600081806001019250505b8260010180549050821080156146d5575082600101828154811015156146b957fe5b9060005260206000200160000160149054906101000a900460ff165b156146e7578180600101925050614697565b81905092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061473157805160ff191683800117855561475f565b8280016001018555821561475f579182015b8281111561475e578251825591602001919060010190614743565b5b50905061476c9190614816565b5090565b81548183558181111561479d5760020281600202836000526020600020918201910161479c919061483b565b5b505050565b50805460018160011615610100020316600290046000825580601f106147c857506147e7565b601f0160209004906000526020600020908101906147e69190614816565b5b50565b81548183558181111561481157818360005260206000209182019101614810919061487e565b5b505050565b61483891905b8082111561483457600081600090555060010161481c565b5090565b90565b61487b91905b80821115614877576000808201600061485a91906147a2565b6001820160006101000a81549060ff021916905550600201614841565b5090565b90565b6148d591905b808211156148d157600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000820160146101000a81549060ff021916905550600101614884565b5090565b90565b60006148e482356156f0565b905092915050565b60006148f882516156f0565b905092915050565b600082601f830112151561491357600080fd5b6004614926614921826155f3565b6155c6565b9150818385602084028201111561493c57600080fd5b60005b8381101561496c5781614952888261499e565b84526020840193506020830192505060018101905061493f565b5050505092915050565b60006149828235615710565b905092915050565b60006149968251615710565b905092915050565b60006149aa823561571c565b905092915050565b600082601f83011215156149c557600080fd5b81356149d86149d382615615565b6155c6565b915080825260208301602083018583830111156149f457600080fd5b6149ff83828461574a565b50505092915050565b600060208284031215614a1a57600080fd5b6000614a28848285016148ec565b91505092915050565b600080600060608486031215614a4657600080fd5b6000614a54868287016148d8565b9350506020614a65868287016148d8565b9250506040614a7686828701614976565b9150509250925092565b60008060008060006101008688031215614a9957600080fd5b6000614aa78882890161","48d8565b9550506020614ab8888289016148d8565b9450506040614ac988828901614976565b935050606086013567ffffffffffffffff811115614ae657600080fd5b614af2888289016149b2565b9250506080614b0388828901614900565b9150509295509295909350565b60008060408385031215614b2357600080fd5b6000614b31858286016148ec565b9250506020614b428582860161498a565b9150509250929050565b600060208284031215614b5e57600080fd5b6000614b6c84828501614976565b91505092915050565b600060208284031215614b8757600080fd5b6000614b958482850161498a565b91505092915050565b60008060a08385031215614bb157600080fd5b6000614bbf85828601614976565b9250506020614bd085828601614900565b9150509250929050565b600060208284031215614bec57600080fd5b600082013567ffffffffffffffff811115614c0657600080fd5b614c12848285016149b2565b91505092915050565b60008060a08385031215614c2e57600080fd5b600083013567ffffffffffffffff811115614c4857600080fd5b614c54858286016149b2565b9250506020614c6585828601614900565b9150509250929050565b60008060408385031215614c8257600080fd5b600083013567ffffffffffffffff811115614c9c57600080fd5b614ca8858286016149b2565b925050602083013567ffffffffffffffff811115614cc557600080fd5b614cd1858286016149b2565b9150509250929050565b600080600060c08486031215614cf057600080fd5b600084013567ffffffffffffffff811115614d0a57600080fd5b614d16868287016149b2565b935050602084013567ffffffffffffffff811115614d3357600080fd5b614d3f868287016149b2565b9250506040614d5086828701614900565b9150509250925092565b614d63816156b0565b82525050565b6000614d748261566a565b808452602084019350614d8683615641565b60005b82811015614db857614d9c868351614d5a565b614da582615696565b9150602086019550600181019050614d89565b50849250505092915050565b614dcd81615675565b614dd68261564e565b60005b82811015614e0857614dec858351614e1e565b614df5826156a3565b9150602085019450600181019050614dd9565b5050505050565b614e18816156d0565b82525050565b614e27816156dc565b82525050565b6000614e388261568b565b808452614e4c816020860160208601615759565b614e558161578c565b602085010191505092915050565b6000614e6e82615680565b808452614e82816020860160208601615759565b614e8b8161578c565b602085010191505092915050565b600081546001811660008114614eb65760018114614ed657614f17565b607f600283041680865260ff198316602087015260408601935050614f17565b60028204808652602086019550614eec85615658565b60005b82811015614f0e57815481890152600182019150602081019050614eef565b80880195505050505b505092915050565b614f2881615726565b82525050565b614f3781615738565b82525050565b6000601782527f676574416c6c41737365747320466f7262696464656e210000000000000000006020830152604082019050919050565b6000600882527f61646441737365740000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600c82527f676574416c6c41737365747300000000000000000000000000000000000000006020830152604082019050919050565b6000600e82527f61646420466f7262696464656e210000000000000000000000000000000000006020830152604082019050919050565b6000601b82527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006020830152604082019050919050565b6000600e82527f67657420466f7262696464656e210000000000000000000000000000000000006020830152604082019050919050565b6000600e82527f73657420466f7262696464656e210000000000000000000000000000000000006020830152604082019050919050565b6000601382527f616464417373657420466f7262696464656e21000000000000000000000000006020830152604082019050919050565b6000601182527f696e7365727420466f7262696464656e210000000000000000000000000000006020830152604082019050919050565b6000601182527f72656d6f766520466f7262696464656e210000000000000000000000000000006020830152604082019050919050565b61516c816156e6565b82525050565b60006020820190506151876000830184614d5a565b92915050565b60006080820190506151a26000830187614d5a565b6151af6020830186614d5a565b6151bc6040830185614d5a565b81810360608301526151ce8184614e2d565b905095945050505050565b600060a0820190506151ee6000830188614d5a565b6151fb6020830187614d5a565b818103604083015261520d8186614e63565b905061521c6060830185614d5a565b6152296080830184614d5a565b9695505050505050565b600060a0820190506152486000830188614d5a565b6152556020830187614d5a565b81810360408301526152678186614e63565b9050818103606083015261527b8185614e2d565b9050818103608083015261528f8184614e99565b90509695505050505050565b60006080820190506152b06000830186614d5a565b6152bd6020830185614d5a565b6152ca6040830184614f1f565b81810360608301526152db81614fab565b9050949350505050565b6000610100820190506152fb6000830187614d5a565b6153086020830186614f1f565b818103604083015261531981614f74565b9050818103606083015261532d8185614e2d565b905061533c6080830184614dc4565b95945050505050565b60006101008201905061535b6000830187614d5a565b6153686020830186614f1f565b818103604083015261537981614fab565b9050818103606083015261538d8185614e2d565b905061539c6080830184614dc4565b95945050505050565b6000610100820190506153bb6000830188614d5a565b6153c86020830187614f2e565b81810360408301526153da8186614e2d565b905081810360608301526153ee8185614e2d565b90506153fd6080830184614dc4565b9695505050505050565b600060608201905081810360008301526154218186614d69565b905081810360208301526154358185614d69565b90506154446040830184615163565b949350505050565b60006020820190506154616000830184614e0f565b92915050565b600060208201905081810360008301526154818184614e63565b905092915050565b600060208201905081810360008301526154a38184614e2d565b905092915050565b600060208201905081810360008301526154c481614f3d565b9050919050565b600060208201905081810360008301526154e481614fe2565b9050919050565b6000602082019050818103600083015261550481615019565b9050919050565b6000602082019050818103600083015261552481615050565b9050919050565b6000602082019050818103600083015261554481615087565b9050919050565b60006020820190508181036000830152615564816150be565b9050919050565b60006020820190508181036000830152615584816150f5565b9050919050565b600060208201905081810360008301526155a48161512c565b9050919050565b60006020820190506155c06000830184615163565b92915050565b6000604051905081810181811067ffffffffffffffff821117156155e957600080fd5b8060405250919050565b600067ffffffffffffffff82111561560a57600080fd5b602082029050919050565b600067ffffffffffffffff82111561562c57600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b6000819050919050565b60008160005260206000209050919050565b600081519050919050565b600060049050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b6000615731826156b0565b9050919050565b6000615743826156b0565b9050919050565b82818337600083830152505050565b60005b8381101561577757808201518184015260208101905061575c565b83811115615786576000848401525b50505050565b6000601f19601f8301169050919050565b6060600080836c0100000000000000000000000002915060146040519080825280601f01601f1916602001820160405280156157e85781602001602082028038833980820191505090505b509250600090505b601481101561587557818160148110151561580757fe5b1a7f010000000000000000000000000000000000000000000000000000000000000002838281518110151561583857fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506157f0565b50509190505600a265627a7a72305820bff4ad072fcae2dff6a5fbc5b059696bed30080c7c9e0dd6b7290cd2438dcef56c6578706572696d656e74616cf50037a265627a7a7230582054cbbc2c84243d477bead284e26682846b231c1e05783c102f62b783f93138706c6578706572696d656e74616cf50037"};

    public static final String SM_BINARY = String.join("", SM_BINARY_ARRAY);

    public static final String[] ABI_ARRAY = {"[{\"constant\":true,\"inputs\":[],\"name\":\"ROLE_R\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"OPENING_BANK\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ROLE_W\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAllAccounts\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DATA\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"updateNonce\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"OWNER\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BALANCE\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"externalAccount\",\"type\":\"address\"}],\"name\":\"removeAdmin\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"oldAccount\",\"type\":\"address\"},{\"name\":\"newAccount\",\"type\":\"address\"},{\"name\":\"sign\",\"type\":\"bytes32[4]\"}],\"name\":\"changeExternalAccountWithSign\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"assetName\",\"type\":\"string\"}],\"name\":\"listAssetVersion\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"},{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"key\",\"type\":\"bytes\"},{\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"insert\",\"outputs\":[{\"name\":\"replaced\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RECORD\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PUB_KEY\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ADMIN\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MODE_R\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"externalAccount\",\"type\":\"address\"},{\"name\":\"sign\",\"type\":\"bytes32[4]\"}],\"name\":\"freezeWithSign\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"internalAccount\",\"type\":\"address\"}],\"name\":\"isInternalAccountAdmin\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TYPE_ADMIN\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TYPE_OWNER\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"key\",\"type\":\"bytes\"},{\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"add\",\"outputs\":[{\"name\":\"replaced\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"externalAccount\",\"type\":\"address\"}],\"name\":\"unfreeze\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getExternalAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"externalAccount\",\"type\":\"address\"}],\"name\":\"isExternalAccountAdmin\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"externalAccount\",\"type\":\"address\"},{\"name\":\"keyList\",\"type\":\"bytes[]\"},{\"name\":\"valueList\",\"type\":\"bytes[]\"},{\"name\":\"sign\",\"type\":\"bytes32[4]\"}],\"name\":\"createAccountWithSign\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"externalAccount\",\"type\":\"address\"}],\"name\":\"cancel\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"externalAccount\",\"type\":\"address\"},{\"name\":\"sign\",\"type\":\"bytes32[4]\"}],\"name\":\"cancelWithSign\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOrg\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MODE_W\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"key\",\"type\":\"bytes\"}],\"name\":\"remove\",\"outputs\":[{\"name\":\"replaced\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"OWNER_ADDR\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"isFungible\",\"type\":\"bool\"}],\"name\":\"getAllAssets\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ASSETS\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"USER_ADDR\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"externalAccount\",\"type\":\"address\"},{\"name\":\"sign\",\"type\":\"bytes32[4]\"}],\"name\":\"unfreezeWithSign\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"externalAccount\",\"type\":\"address\"},{\"name\":\"keyList\",\"type\":\"bytes[]\"},{\"name\":\"valueList\",\"type\":\"bytes[]\"}],\"name\":\"createAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"key\",\"type\":\"bytes\"},{\"name\":\"sign\",\"type\":\"bytes32[4]\"}],\"name\":\"removeWithSign\",\"outputs\":[{\"name\":\"replaced\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"externalAccount\",\"type\":\"address\"},{\"name\":\"assetName\",\"type\":\"string\"},{\"name\":\"isFungible\",\"type\":\"bool\"},{\"name\":\"sign\",\"type\":\"bytes32[4]\"}],\"name\":\"upgradeAsset\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"USER\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"key\",\"type\":\"bytes\"},{\"name\":\"sign\",\"type\":\"bytes32[4]\"}],\"name\":\"getWithSign\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"externalAccount\",\"type\":\"address\"}],\"name\":\"freeze\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"externalAccount\",\"type\":\"address\"},{\"name\":\"role\",\"type\":\"bytes\"}],\"name\":\"addAdmin\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"externalAccount\",\"type\":\"address\"},{\"name\":\"role\",\"type\":\"bytes\"},{\"name\":\"sign\",\"type\":\"bytes32[4]\"}],\"name\":\"addAdminWithSign\",\"outputs\":[{\"name\":\"\",\"","type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"size\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"OPERATOR\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getAssetPools\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"externalAccount\",\"type\":\"address\"},{\"name\":\"sign\",\"type\":\"bytes32[4]\"}],\"name\":\"removeAdminWithSign\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ROLE\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"oldAccount\",\"type\":\"address\"},{\"name\":\"newAccount\",\"type\":\"address\"}],\"name\":\"changeExternalAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"key\",\"type\":\"bytes\"},{\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"set\",\"outputs\":[{\"name\":\"replaced\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getInnerAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"listAdmins\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"},{\"name\":\"\",\"type\":\"bytes[]\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"key\",\"type\":\"bytes\"},{\"name\":\"value\",\"type\":\"bytes\"},{\"name\":\"sign\",\"type\":\"bytes32[4]\"}],\"name\":\"addWithSign\",\"outputs\":[{\"name\":\"replaced\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getProjectTerm\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"externalAccount\",\"type\":\"address\"},{\"name\":\"assetName\",\"type\":\"string\"},{\"name\":\"isFungible\",\"type\":\"bool\"},{\"name\":\"sign\",\"type\":\"bytes32[4]\"}],\"name\":\"createAssetWithSign\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ADMIN_ADDR\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAccountManager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ID\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ADDR\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TYPE_PUBLIC\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"OPERATOR_ADDR\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TYPE\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAuthCenter\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAuthManager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"key\",\"type\":\"bytes\"},{\"name\":\"value\",\"type\":\"bytes\"},{\"name\":\"sign\",\"type\":\"bytes32[4]\"}],\"name\":\"insertWithSign\",\"outputs\":[{\"name\":\"replaced\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getNonce\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"key\",\"type\":\"bytes\"}],\"name\":\"get\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"key\",\"type\":\"bytes\"},{\"name\":\"value\",\"type\":\"bytes\"},{\"name\":\"sign\",\"type\":\"bytes32[4]\"}],\"name\":\"setWithSign\",\"outputs\":[{\"name\":\"replaced\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"currencyName\",\"type\":\"string\"},{\"name\":\"currencySymbol\",\"type\":\"string\"},{\"name\":\"decimals\",\"type\":\"uint8\"}],\"name\":\"createCurrency\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"KEY_ALL\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"createAssetPool\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"projectAddress\",\"type\":\"address\"},{\"name\":\"authCenterAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]"};

    public static final String ABI = String.join("", ABI_ARRAY);

    public static final String FUNC_ROLE_R = "ROLE_R";

    public static final String FUNC_OPENING_BANK = "OPENING_BANK";

    public static final String FUNC_ROLE_W = "ROLE_W";

    public static final String FUNC_GETALLACCOUNTS = "getAllAccounts";

    public static final String FUNC_DATA = "DATA";

    public static final String FUNC_UPDATENONCE = "updateNonce";

    public static final String FUNC_OWNER = "OWNER";

    public static final String FUNC_BALANCE = "BALANCE";

    public static final String FUNC_REMOVEADMIN = "removeAdmin";

    public static final String FUNC_CHANGEEXTERNALACCOUNTWITHSIGN = "changeExternalAccountWithSign";

    public static final String FUNC_LISTASSETVERSION = "listAssetVersion";

    public static final String FUNC_INSERT = "insert";

    public static final String FUNC_RECORD = "RECORD";

    public static final String FUNC_PUB_KEY = "PUB_KEY";

    public static final String FUNC_ADMIN = "ADMIN";

    public static final String FUNC_MODE_R = "MODE_R";

    public static final String FUNC_FREEZEWITHSIGN = "freezeWithSign";

    public static final String FUNC_ISINTERNALACCOUNTADMIN = "isInternalAccountAdmin";

    public static final String FUNC_TYPE_ADMIN = "TYPE_ADMIN";

    public static final String FUNC_TYPE_OWNER = "TYPE_OWNER";

    public static final String FUNC_ADD = "add";

    public static final String FUNC_UNFREEZE = "unfreeze";

    public static final String FUNC_GETEXTERNALACCOUNT = "getExternalAccount";

    public static final String FUNC_ISEXTERNALACCOUNTADMIN = "isExternalAccountAdmin";

    public static final String FUNC_CREATEACCOUNTWITHSIGN = "createAccountWithSign";

    public static final String FUNC_CANCEL = "cancel";

    public static final String FUNC_CANCELWITHSIGN = "cancelWithSign";

    public static final String FUNC_GETORG = "getOrg";

    public static final String FUNC_MODE_W = "MODE_W";

    public static final String FUNC_REMOVE = "remove";

    public static final String FUNC_OWNER_ADDR = "OWNER_ADDR";

    public static final String FUNC_GETALLASSETS = "getAllAssets";

    public static final String FUNC_ASSETS = "ASSETS";

    public static final String FUNC_USER_ADDR = "USER_ADDR";

    public static final String FUNC_UNFREEZEWITHSIGN = "unfreezeWithSign";

    public static final String FUNC_CREATEACCOUNT = "createAccount";

    public static final String FUNC_REMOVEWITHSIGN = "removeWithSign";

    public static final String FUNC_UPGRADEASSET = "upgradeAsset";

    public static final String FUNC_USER = "USER";

    public static final String FUNC_GETWITHSIGN = "getWithSign";

    public static final String FUNC_FREEZE = "freeze";

    public static final String FUNC_ADDADMIN = "addAdmin";

    public static final String FUNC_ADDADMINWITHSIGN = "addAdminWithSign";

    public static final String FUNC_SIZE = "size";

    public static final String FUNC_OPERATOR = "OPERATOR";

    public static final String FUNC_GETASSETPOOLS = "getAssetPools";

    public static final String FUNC_REMOVEADMINWITHSIGN = "removeAdminWithSign";

    public static final String FUNC_ROLE = "ROLE";

    public static final String FUNC_CHANGEEXTERNALACCOUNT = "changeExternalAccount";

    public static final String FUNC_SET = "set";

    public static final String FUNC_GETINNERACCOUNT = "getInnerAccount";

    public static final String FUNC_LISTADMINS = "listAdmins";

    public static final String FUNC_ADDWITHSIGN = "addWithSign";

    public static final String FUNC_GETPROJECTTERM = "getProjectTerm";

    public static final String FUNC_CREATEASSETWITHSIGN = "createAssetWithSign";

    public static final String FUNC_ADMIN_ADDR = "ADMIN_ADDR";

    public static final String FUNC_GETACCOUNTMANAGER = "getAccountManager";

    public static final String FUNC_ID = "ID";

    public static final String FUNC_ADDR = "ADDR";

    public static final String FUNC_TYPE_PUBLIC = "TYPE_PUBLIC";

    public static final String FUNC_OPERATOR_ADDR = "OPERATOR_ADDR";

    public static final String FUNC_TYPE = "TYPE";

    public static final String FUNC_GETAUTHCENTER = "getAuthCenter";

    public static final String FUNC_GETAUTHMANAGER = "getAuthManager";

    public static final String FUNC_INSERTWITHSIGN = "insertWithSign";

    public static final String FUNC_GETNONCE = "getNonce";

    public static final String FUNC_GET = "get";

    public static final String FUNC_SETWITHSIGN = "setWithSign";

    public static final String FUNC_CREATECURRENCY = "createCurrency";

    public static final String FUNC_KEY_ALL = "KEY_ALL";

    public static final String FUNC_CREATEASSETPOOL = "createAssetPool";

    public static final String FUNC_GETACCOUNT = "getAccount";

    protected Organization(String contractAddress, Client client, CryptoKeyPair credential) {
        super(getBinary(client.getCryptoSuite()), contractAddress, client, credential);
    }

    public static String getBinary(CryptoSuite cryptoSuite) {
        return (cryptoSuite.getCryptoTypeConfig() == CryptoType.ECDSA_TYPE ? BINARY : SM_BINARY);
    }

    public byte[] ROLE_R() throws ContractException {
        final Function function = new Function(FUNC_ROLE_R, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public byte[] OPENING_BANK() throws ContractException {
        final Function function = new Function(FUNC_OPENING_BANK, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public byte[] ROLE_W() throws ContractException {
        final Function function = new Function(FUNC_ROLE_W, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public List getAllAccounts() throws ContractException {
        final Function function = new Function(FUNC_GETALLACCOUNTS, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Address>>() {}));
        List<Type> result = (List<Type>) executeCallWithSingleValueReturn(function, List.class);
        return convertToNative(result);
    }

    public byte[] DATA() throws ContractException {
        final Function function = new Function(FUNC_DATA, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public TransactionReceipt updateNonce() {
        final Function function = new Function(
                FUNC_UPDATENONCE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void updateNonce(TransactionCallback callback) {
        final Function function = new Function(
                FUNC_UPDATENONCE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForUpdateNonce() {
        final Function function = new Function(
                FUNC_UPDATENONCE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<BigInteger> getUpdateNonceOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_UPDATENONCE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public byte[] OWNER() throws ContractException {
        final Function function = new Function(FUNC_OWNER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public byte[] BALANCE() throws ContractException {
        final Function function = new Function(FUNC_BALANCE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public TransactionReceipt removeAdmin(String externalAccount) {
        final Function function = new Function(
                FUNC_REMOVEADMIN, 
                Arrays.<Type>asList(new Address(externalAccount)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void removeAdmin(String externalAccount, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_REMOVEADMIN, 
                Arrays.<Type>asList(new Address(externalAccount)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForRemoveAdmin(String externalAccount) {
        final Function function = new Function(
                FUNC_REMOVEADMIN, 
                Arrays.<Type>asList(new Address(externalAccount)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<String> getRemoveAdminInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_REMOVEADMIN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>(

                (String) results.get(0).getValue()
                );
    }

    public Tuple1<Boolean> getRemoveAdminOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_REMOVEADMIN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<Boolean>(

                (Boolean) results.get(0).getValue()
                );
    }

    public TransactionReceipt changeExternalAccountWithSign(String oldAccount, String newAccount, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_CHANGEEXTERNALACCOUNTWITHSIGN, 
                Arrays.<Type>asList(new Address(oldAccount),
                new Address(newAccount),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void changeExternalAccountWithSign(String oldAccount, String newAccount, List<byte[]> sign, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_CHANGEEXTERNALACCOUNTWITHSIGN, 
                Arrays.<Type>asList(new Address(oldAccount),
                new Address(newAccount),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForChangeExternalAccountWithSign(String oldAccount, String newAccount, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_CHANGEEXTERNALACCOUNTWITHSIGN, 
                Arrays.<Type>asList(new Address(oldAccount),
                new Address(newAccount),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple3<String, String, List<byte[]>> getChangeExternalAccountWithSignInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_CHANGEEXTERNALACCOUNTWITHSIGN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Address>() {}, new TypeReference<StaticArray4<Bytes32>>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple3<String, String, List<byte[]>>(

                (String) results.get(0).getValue(), 
                (String) results.get(1).getValue(), 
                convertToNative((List<Bytes32>) results.get(2).getValue())
                );
    }

    public Tuple1<Boolean> getChangeExternalAccountWithSignOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_CHANGEEXTERNALACCOUNTWITHSIGN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<Boolean>(

                (Boolean) results.get(0).getValue()
                );
    }

    public Tuple2<List<BigInteger>, List<String>> listAssetVersion(String assetName) throws ContractException {
        final Function function = new Function(FUNC_LISTASSETVERSION, 
                Arrays.<Type>asList(new Utf8String(assetName)),
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Uint256>>() {}, new TypeReference<DynamicArray<Address>>() {}));
        List<Type> results = executeCallWithMultipleValueReturn(function);
        return new Tuple2<List<BigInteger>, List<String>>(
                convertToNative((List<Uint256>) results.get(0).getValue()), 
                convertToNative((List<Address>) results.get(1).getValue()));
    }

    public TransactionReceipt insert(byte[] key, byte[] value) {
        final Function function = new Function(
                FUNC_INSERT, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new DynamicBytes(value)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void insert(byte[] key, byte[] value, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_INSERT, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new DynamicBytes(value)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForInsert(byte[] key, byte[] value) {
        final Function function = new Function(
                FUNC_INSERT, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new DynamicBytes(value)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple2<byte[], byte[]> getInsertInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_INSERT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}, new TypeReference<DynamicBytes>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<byte[], byte[]>(

                (byte[]) results.get(0).getValue(), 
                (byte[]) results.get(1).getValue()
                );
    }

    public Tuple1<Boolean> getInsertOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_INSERT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<Boolean>(

                (Boolean) results.get(0).getValue()
                );
    }

    public byte[] RECORD() throws ContractException {
        final Function function = new Function(FUNC_RECORD, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public byte[] PUB_KEY() throws ContractException {
        final Function function = new Function(FUNC_PUB_KEY, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public byte[] ADMIN() throws ContractException {
        final Function function = new Function(FUNC_ADMIN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public byte[] MODE_R() throws ContractException {
        final Function function = new Function(FUNC_MODE_R, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public TransactionReceipt freezeWithSign(String externalAccount, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_FREEZEWITHSIGN, 
                Arrays.<Type>asList(new Address(externalAccount),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void freezeWithSign(String externalAccount, List<byte[]> sign, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_FREEZEWITHSIGN, 
                Arrays.<Type>asList(new Address(externalAccount),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForFreezeWithSign(String externalAccount, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_FREEZEWITHSIGN, 
                Arrays.<Type>asList(new Address(externalAccount),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple2<String, List<byte[]>> getFreezeWithSignInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_FREEZEWITHSIGN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<StaticArray4<Bytes32>>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<String, List<byte[]>>(

                (String) results.get(0).getValue(), 
                convertToNative((List<Bytes32>) results.get(1).getValue())
                );
    }

    public Tuple1<Boolean> getFreezeWithSignOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_FREEZEWITHSIGN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<Boolean>(

                (Boolean) results.get(0).getValue()
                );
    }

    public Boolean isInternalAccountAdmin(String internalAccount) throws ContractException {
        final Function function = new Function(FUNC_ISINTERNALACCOUNTADMIN, 
                Arrays.<Type>asList(new Address(internalAccount)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeCallWithSingleValueReturn(function, Boolean.class);
    }

    public byte[] TYPE_ADMIN() throws ContractException {
        final Function function = new Function(FUNC_TYPE_ADMIN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public byte[] TYPE_OWNER() throws ContractException {
        final Function function = new Function(FUNC_TYPE_OWNER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public TransactionReceipt add(byte[] key, byte[] value) {
        final Function function = new Function(
                FUNC_ADD, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new DynamicBytes(value)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void add(byte[] key, byte[] value, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_ADD, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new DynamicBytes(value)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForAdd(byte[] key, byte[] value) {
        final Function function = new Function(
                FUNC_ADD, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new DynamicBytes(value)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple2<byte[], byte[]> getAddInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_ADD, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}, new TypeReference<DynamicBytes>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<byte[], byte[]>(

                (byte[]) results.get(0).getValue(), 
                (byte[]) results.get(1).getValue()
                );
    }

    public Tuple1<Boolean> getAddOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_ADD, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<Boolean>(

                (Boolean) results.get(0).getValue()
                );
    }

    public TransactionReceipt unfreeze(String externalAccount) {
        final Function function = new Function(
                FUNC_UNFREEZE, 
                Arrays.<Type>asList(new Address(externalAccount)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void unfreeze(String externalAccount, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_UNFREEZE, 
                Arrays.<Type>asList(new Address(externalAccount)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForUnfreeze(String externalAccount) {
        final Function function = new Function(
                FUNC_UNFREEZE, 
                Arrays.<Type>asList(new Address(externalAccount)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<String> getUnfreezeInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_UNFREEZE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>(

                (String) results.get(0).getValue()
                );
    }

    public Tuple1<Boolean> getUnfreezeOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_UNFREEZE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<Boolean>(

                (Boolean) results.get(0).getValue()
                );
    }

    public String getExternalAccount(String userAddress) throws ContractException {
        final Function function = new Function(FUNC_GETEXTERNALACCOUNT, 
                Arrays.<Type>asList(new Address(userAddress)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public Boolean isExternalAccountAdmin(String externalAccount) throws ContractException {
        final Function function = new Function(FUNC_ISEXTERNALACCOUNTADMIN, 
                Arrays.<Type>asList(new Address(externalAccount)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeCallWithSingleValueReturn(function, Boolean.class);
    }

    public TransactionReceipt createAccountWithSign(String externalAccount, List<byte[]> keyList, List<byte[]> valueList, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_CREATEACCOUNTWITHSIGN, 
                Arrays.<Type>asList(new Address(externalAccount),
                keyList.isEmpty()? DynamicArray.empty("bytes[]"):new DynamicArray<DynamicBytes>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(keyList, DynamicBytes.class)),
                valueList.isEmpty()? DynamicArray.empty("bytes[]"):new DynamicArray<DynamicBytes>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(valueList, DynamicBytes.class)),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void createAccountWithSign(String externalAccount, List<byte[]> keyList, List<byte[]> valueList, List<byte[]> sign, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_CREATEACCOUNTWITHSIGN, 
                Arrays.<Type>asList(new Address(externalAccount),
                keyList.isEmpty()? DynamicArray.empty("bytes[]"):new DynamicArray<DynamicBytes>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(keyList, DynamicBytes.class)),
                valueList.isEmpty()? DynamicArray.empty("bytes[]"):new DynamicArray<DynamicBytes>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(valueList, DynamicBytes.class)),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForCreateAccountWithSign(String externalAccount, List<byte[]> keyList, List<byte[]> valueList, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_CREATEACCOUNTWITHSIGN, 
                Arrays.<Type>asList(new Address(externalAccount),
                keyList.isEmpty()? DynamicArray.empty("bytes[]"):new DynamicArray<DynamicBytes>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(keyList, DynamicBytes.class)),
                valueList.isEmpty()? DynamicArray.empty("bytes[]"):new DynamicArray<DynamicBytes>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(valueList, DynamicBytes.class)),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple4<String, List<byte[]>, List<byte[]>, List<byte[]>> getCreateAccountWithSignInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_CREATEACCOUNTWITHSIGN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<DynamicArray<DynamicBytes>>() {}, new TypeReference<DynamicArray<DynamicBytes>>() {}, new TypeReference<StaticArray4<Bytes32>>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple4<String, List<byte[]>, List<byte[]>, List<byte[]>>(

                (String) results.get(0).getValue(), 
                convertToNative((List<DynamicBytes>) results.get(1).getValue()), 
                convertToNative((List<DynamicBytes>) results.get(2).getValue()), 
                convertToNative((List<Bytes32>) results.get(3).getValue())
                );
    }

    public Tuple2<Boolean, String> getCreateAccountWithSignOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_CREATEACCOUNTWITHSIGN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}, new TypeReference<Address>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<Boolean, String>(

                (Boolean) results.get(0).getValue(), 
                (String) results.get(1).getValue()
                );
    }

    public TransactionReceipt cancel(String externalAccount) {
        final Function function = new Function(
                FUNC_CANCEL, 
                Arrays.<Type>asList(new Address(externalAccount)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void cancel(String externalAccount, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_CANCEL, 
                Arrays.<Type>asList(new Address(externalAccount)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForCancel(String externalAccount) {
        final Function function = new Function(
                FUNC_CANCEL, 
                Arrays.<Type>asList(new Address(externalAccount)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<String> getCancelInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_CANCEL, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>(

                (String) results.get(0).getValue()
                );
    }

    public Tuple1<Boolean> getCancelOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_CANCEL, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<Boolean>(

                (Boolean) results.get(0).getValue()
                );
    }

    public TransactionReceipt cancelWithSign(String externalAccount, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_CANCELWITHSIGN, 
                Arrays.<Type>asList(new Address(externalAccount),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void cancelWithSign(String externalAccount, List<byte[]> sign, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_CANCELWITHSIGN, 
                Arrays.<Type>asList(new Address(externalAccount),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForCancelWithSign(String externalAccount, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_CANCELWITHSIGN, 
                Arrays.<Type>asList(new Address(externalAccount),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple2<String, List<byte[]>> getCancelWithSignInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_CANCELWITHSIGN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<StaticArray4<Bytes32>>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<String, List<byte[]>>(

                (String) results.get(0).getValue(), 
                convertToNative((List<Bytes32>) results.get(1).getValue())
                );
    }

    public Tuple1<Boolean> getCancelWithSignOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_CANCELWITHSIGN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<Boolean>(

                (Boolean) results.get(0).getValue()
                );
    }

    public String getOrg() throws ContractException {
        final Function function = new Function(FUNC_GETORG, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public byte[] MODE_W() throws ContractException {
        final Function function = new Function(FUNC_MODE_W, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public TransactionReceipt remove(byte[] key) {
        final Function function = new Function(
                FUNC_REMOVE, 
                Arrays.<Type>asList(new DynamicBytes(key)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void remove(byte[] key, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_REMOVE, 
                Arrays.<Type>asList(new DynamicBytes(key)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForRemove(byte[] key) {
        final Function function = new Function(
                FUNC_REMOVE, 
                Arrays.<Type>asList(new DynamicBytes(key)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<byte[]> getRemoveInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_REMOVE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<byte[]>(

                (byte[]) results.get(0).getValue()
                );
    }

    public Tuple1<Boolean> getRemoveOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_REMOVE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<Boolean>(

                (Boolean) results.get(0).getValue()
                );
    }

    public String OWNER_ADDR() throws ContractException {
        final Function function = new Function(FUNC_OWNER_ADDR, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public List getAllAssets(Boolean isFungible) throws ContractException {
        final Function function = new Function(FUNC_GETALLASSETS, 
                Arrays.<Type>asList(new Bool(isFungible)),
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Address>>() {}));
        List<Type> result = (List<Type>) executeCallWithSingleValueReturn(function, List.class);
        return convertToNative(result);
    }

    public byte[] ASSETS() throws ContractException {
        final Function function = new Function(FUNC_ASSETS, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public String USER_ADDR() throws ContractException {
        final Function function = new Function(FUNC_USER_ADDR, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public TransactionReceipt unfreezeWithSign(String externalAccount, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_UNFREEZEWITHSIGN, 
                Arrays.<Type>asList(new Address(externalAccount),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void unfreezeWithSign(String externalAccount, List<byte[]> sign, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_UNFREEZEWITHSIGN, 
                Arrays.<Type>asList(new Address(externalAccount),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForUnfreezeWithSign(String externalAccount, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_UNFREEZEWITHSIGN, 
                Arrays.<Type>asList(new Address(externalAccount),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple2<String, List<byte[]>> getUnfreezeWithSignInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_UNFREEZEWITHSIGN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<StaticArray4<Bytes32>>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<String, List<byte[]>>(

                (String) results.get(0).getValue(), 
                convertToNative((List<Bytes32>) results.get(1).getValue())
                );
    }

    public Tuple1<Boolean> getUnfreezeWithSignOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_UNFREEZEWITHSIGN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<Boolean>(

                (Boolean) results.get(0).getValue()
                );
    }

    public TransactionReceipt createAccount(String externalAccount, List<byte[]> keyList, List<byte[]> valueList) {
        final Function function = new Function(
                FUNC_CREATEACCOUNT, 
                Arrays.<Type>asList(new Address(externalAccount),
                keyList.isEmpty()? DynamicArray.empty("bytes[]"):new DynamicArray<DynamicBytes>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(keyList, DynamicBytes.class)),
                valueList.isEmpty()? DynamicArray.empty("bytes[]"):new DynamicArray<DynamicBytes>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(valueList, DynamicBytes.class))),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void createAccount(String externalAccount, List<byte[]> keyList, List<byte[]> valueList, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_CREATEACCOUNT, 
                Arrays.<Type>asList(new Address(externalAccount),
                keyList.isEmpty()? DynamicArray.empty("bytes[]"):new DynamicArray<DynamicBytes>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(keyList, DynamicBytes.class)),
                valueList.isEmpty()? DynamicArray.empty("bytes[]"):new DynamicArray<DynamicBytes>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(valueList, DynamicBytes.class))),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForCreateAccount(String externalAccount, List<byte[]> keyList, List<byte[]> valueList) {
        final Function function = new Function(
                FUNC_CREATEACCOUNT, 
                Arrays.<Type>asList(new Address(externalAccount),
                keyList.isEmpty()? DynamicArray.empty("bytes[]"):new DynamicArray<DynamicBytes>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(keyList, DynamicBytes.class)),
                valueList.isEmpty()? DynamicArray.empty("bytes[]"):new DynamicArray<DynamicBytes>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(valueList, DynamicBytes.class))),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple3<String, List<byte[]>, List<byte[]>> getCreateAccountInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_CREATEACCOUNT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<DynamicArray<DynamicBytes>>() {}, new TypeReference<DynamicArray<DynamicBytes>>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple3<String, List<byte[]>, List<byte[]>>(

                (String) results.get(0).getValue(), 
                convertToNative((List<DynamicBytes>) results.get(1).getValue()), 
                convertToNative((List<DynamicBytes>) results.get(2).getValue())
                );
    }

    public Tuple2<Boolean, String> getCreateAccountOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_CREATEACCOUNT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}, new TypeReference<Address>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<Boolean, String>(

                (Boolean) results.get(0).getValue(), 
                (String) results.get(1).getValue()
                );
    }

    public TransactionReceipt removeWithSign(byte[] key, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_REMOVEWITHSIGN, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void removeWithSign(byte[] key, List<byte[]> sign, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_REMOVEWITHSIGN, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForRemoveWithSign(byte[] key, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_REMOVEWITHSIGN, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple2<byte[], List<byte[]>> getRemoveWithSignInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_REMOVEWITHSIGN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}, new TypeReference<StaticArray4<Bytes32>>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<byte[], List<byte[]>>(

                (byte[]) results.get(0).getValue(), 
                convertToNative((List<Bytes32>) results.get(1).getValue())
                );
    }

    public Tuple1<Boolean> getRemoveWithSignOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_REMOVEWITHSIGN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<Boolean>(

                (Boolean) results.get(0).getValue()
                );
    }

    public TransactionReceipt upgradeAsset(String externalAccount, String assetName, Boolean isFungible, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_UPGRADEASSET, 
                Arrays.<Type>asList(new Address(externalAccount),
                new Utf8String(assetName),
                new Bool(isFungible),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void upgradeAsset(String externalAccount, String assetName, Boolean isFungible, List<byte[]> sign, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_UPGRADEASSET, 
                Arrays.<Type>asList(new Address(externalAccount),
                new Utf8String(assetName),
                new Bool(isFungible),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForUpgradeAsset(String externalAccount, String assetName, Boolean isFungible, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_UPGRADEASSET, 
                Arrays.<Type>asList(new Address(externalAccount),
                new Utf8String(assetName),
                new Bool(isFungible),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple4<String, String, Boolean, List<byte[]>> getUpgradeAssetInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_UPGRADEASSET, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Bool>() {}, new TypeReference<StaticArray4<Bytes32>>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple4<String, String, Boolean, List<byte[]>>(

                (String) results.get(0).getValue(), 
                (String) results.get(1).getValue(), 
                (Boolean) results.get(2).getValue(), 
                convertToNative((List<Bytes32>) results.get(3).getValue())
                );
    }

    public Tuple2<String, Boolean> getUpgradeAssetOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_UPGRADEASSET, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Bool>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<String, Boolean>(

                (String) results.get(0).getValue(), 
                (Boolean) results.get(1).getValue()
                );
    }

    public byte[] USER() throws ContractException {
        final Function function = new Function(FUNC_USER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public byte[] getWithSign(byte[] key, List<byte[]> sign) throws ContractException {
        final Function function = new Function(FUNC_GETWITHSIGN, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public TransactionReceipt freeze(String externalAccount) {
        final Function function = new Function(
                FUNC_FREEZE, 
                Arrays.<Type>asList(new Address(externalAccount)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void freeze(String externalAccount, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_FREEZE, 
                Arrays.<Type>asList(new Address(externalAccount)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForFreeze(String externalAccount) {
        final Function function = new Function(
                FUNC_FREEZE, 
                Arrays.<Type>asList(new Address(externalAccount)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<String> getFreezeInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_FREEZE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>(

                (String) results.get(0).getValue()
                );
    }

    public Tuple1<Boolean> getFreezeOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_FREEZE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<Boolean>(

                (Boolean) results.get(0).getValue()
                );
    }

    public TransactionReceipt addAdmin(String externalAccount, byte[] role) {
        final Function function = new Function(
                FUNC_ADDADMIN, 
                Arrays.<Type>asList(new Address(externalAccount),
                new DynamicBytes(role)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void addAdmin(String externalAccount, byte[] role, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_ADDADMIN, 
                Arrays.<Type>asList(new Address(externalAccount),
                new DynamicBytes(role)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForAddAdmin(String externalAccount, byte[] role) {
        final Function function = new Function(
                FUNC_ADDADMIN, 
                Arrays.<Type>asList(new Address(externalAccount),
                new DynamicBytes(role)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple2<String, byte[]> getAddAdminInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_ADDADMIN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<DynamicBytes>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<String, byte[]>(

                (String) results.get(0).getValue(), 
                (byte[]) results.get(1).getValue()
                );
    }

    public Tuple1<Boolean> getAddAdminOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_ADDADMIN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<Boolean>(

                (Boolean) results.get(0).getValue()
                );
    }

    public TransactionReceipt addAdminWithSign(String externalAccount, byte[] role, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_ADDADMINWITHSIGN, 
                Arrays.<Type>asList(new Address(externalAccount),
                new DynamicBytes(role),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void addAdminWithSign(String externalAccount, byte[] role, List<byte[]> sign, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_ADDADMINWITHSIGN, 
                Arrays.<Type>asList(new Address(externalAccount),
                new DynamicBytes(role),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForAddAdminWithSign(String externalAccount, byte[] role, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_ADDADMINWITHSIGN, 
                Arrays.<Type>asList(new Address(externalAccount),
                new DynamicBytes(role),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple3<String, byte[], List<byte[]>> getAddAdminWithSignInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_ADDADMINWITHSIGN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<DynamicBytes>() {}, new TypeReference<StaticArray4<Bytes32>>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple3<String, byte[], List<byte[]>>(

                (String) results.get(0).getValue(), 
                (byte[]) results.get(1).getValue(), 
                convertToNative((List<Bytes32>) results.get(2).getValue())
                );
    }

    public Tuple1<Boolean> getAddAdminWithSignOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_ADDADMINWITHSIGN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<Boolean>(

                (Boolean) results.get(0).getValue()
                );
    }

    public BigInteger size() throws ContractException {
        final Function function = new Function(FUNC_SIZE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeCallWithSingleValueReturn(function, BigInteger.class);
    }

    public byte[] OPERATOR() throws ContractException {
        final Function function = new Function(FUNC_OPERATOR, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public TransactionReceipt getAssetPools() {
        final Function function = new Function(
                FUNC_GETASSETPOOLS, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void getAssetPools(TransactionCallback callback) {
        final Function function = new Function(
                FUNC_GETASSETPOOLS, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForGetAssetPools() {
        final Function function = new Function(
                FUNC_GETASSETPOOLS, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<List<String>> getGetAssetPoolsOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_GETASSETPOOLS, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Address>>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<List<String>>(

                convertToNative((List<Address>) results.get(0).getValue())
                );
    }

    public TransactionReceipt removeAdminWithSign(String externalAccount, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_REMOVEADMINWITHSIGN, 
                Arrays.<Type>asList(new Address(externalAccount),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void removeAdminWithSign(String externalAccount, List<byte[]> sign, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_REMOVEADMINWITHSIGN, 
                Arrays.<Type>asList(new Address(externalAccount),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForRemoveAdminWithSign(String externalAccount, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_REMOVEADMINWITHSIGN, 
                Arrays.<Type>asList(new Address(externalAccount),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple2<String, List<byte[]>> getRemoveAdminWithSignInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_REMOVEADMINWITHSIGN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<StaticArray4<Bytes32>>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<String, List<byte[]>>(

                (String) results.get(0).getValue(), 
                convertToNative((List<Bytes32>) results.get(1).getValue())
                );
    }

    public Tuple1<Boolean> getRemoveAdminWithSignOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_REMOVEADMINWITHSIGN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<Boolean>(

                (Boolean) results.get(0).getValue()
                );
    }

    public byte[] ROLE() throws ContractException {
        final Function function = new Function(FUNC_ROLE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public TransactionReceipt changeExternalAccount(String oldAccount, String newAccount) {
        final Function function = new Function(
                FUNC_CHANGEEXTERNALACCOUNT, 
                Arrays.<Type>asList(new Address(oldAccount),
                new Address(newAccount)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void changeExternalAccount(String oldAccount, String newAccount, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_CHANGEEXTERNALACCOUNT, 
                Arrays.<Type>asList(new Address(oldAccount),
                new Address(newAccount)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForChangeExternalAccount(String oldAccount, String newAccount) {
        final Function function = new Function(
                FUNC_CHANGEEXTERNALACCOUNT, 
                Arrays.<Type>asList(new Address(oldAccount),
                new Address(newAccount)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple2<String, String> getChangeExternalAccountInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_CHANGEEXTERNALACCOUNT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Address>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<String, String>(

                (String) results.get(0).getValue(), 
                (String) results.get(1).getValue()
                );
    }

    public Tuple1<Boolean> getChangeExternalAccountOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_CHANGEEXTERNALACCOUNT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<Boolean>(

                (Boolean) results.get(0).getValue()
                );
    }

    public TransactionReceipt set(byte[] key, byte[] value) {
        final Function function = new Function(
                FUNC_SET, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new DynamicBytes(value)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void set(byte[] key, byte[] value, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_SET, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new DynamicBytes(value)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForSet(byte[] key, byte[] value) {
        final Function function = new Function(
                FUNC_SET, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new DynamicBytes(value)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple2<byte[], byte[]> getSetInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_SET, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}, new TypeReference<DynamicBytes>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<byte[], byte[]>(

                (byte[]) results.get(0).getValue(), 
                (byte[]) results.get(1).getValue()
                );
    }

    public Tuple1<Boolean> getSetOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_SET, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<Boolean>(

                (Boolean) results.get(0).getValue()
                );
    }

    public TransactionReceipt getInnerAccount(String account) {
        final Function function = new Function(
                FUNC_GETINNERACCOUNT, 
                Arrays.<Type>asList(new Address(account)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void getInnerAccount(String account, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_GETINNERACCOUNT, 
                Arrays.<Type>asList(new Address(account)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForGetInnerAccount(String account) {
        final Function function = new Function(
                FUNC_GETINNERACCOUNT, 
                Arrays.<Type>asList(new Address(account)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<String> getGetInnerAccountInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_GETINNERACCOUNT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>(

                (String) results.get(0).getValue()
                );
    }

    public Tuple1<String> getGetInnerAccountOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_GETINNERACCOUNT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>(

                (String) results.get(0).getValue()
                );
    }

    public Tuple3<List<String>, List<byte[]>, BigInteger> listAdmins() throws ContractException {
        final Function function = new Function(FUNC_LISTADMINS, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Address>>() {}, new TypeReference<DynamicArray<DynamicBytes>>() {}, new TypeReference<Uint256>() {}));
        List<Type> results = executeCallWithMultipleValueReturn(function);
        return new Tuple3<List<String>, List<byte[]>, BigInteger>(
                convertToNative((List<Address>) results.get(0).getValue()), 
                convertToNative((List<DynamicBytes>) results.get(1).getValue()), 
                (BigInteger) results.get(2).getValue());
    }

    public TransactionReceipt addWithSign(byte[] key, byte[] value, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_ADDWITHSIGN, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new DynamicBytes(value),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void addWithSign(byte[] key, byte[] value, List<byte[]> sign, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_ADDWITHSIGN, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new DynamicBytes(value),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForAddWithSign(byte[] key, byte[] value, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_ADDWITHSIGN, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new DynamicBytes(value),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple3<byte[], byte[], List<byte[]>> getAddWithSignInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_ADDWITHSIGN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}, new TypeReference<DynamicBytes>() {}, new TypeReference<StaticArray4<Bytes32>>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple3<byte[], byte[], List<byte[]>>(

                (byte[]) results.get(0).getValue(), 
                (byte[]) results.get(1).getValue(), 
                convertToNative((List<Bytes32>) results.get(2).getValue())
                );
    }

    public Tuple1<Boolean> getAddWithSignOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_ADDWITHSIGN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<Boolean>(

                (Boolean) results.get(0).getValue()
                );
    }

    public String getProjectTerm() throws ContractException {
        final Function function = new Function(FUNC_GETPROJECTTERM, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public TransactionReceipt createAssetWithSign(String externalAccount, String assetName, Boolean isFungible, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_CREATEASSETWITHSIGN, 
                Arrays.<Type>asList(new Address(externalAccount),
                new Utf8String(assetName),
                new Bool(isFungible),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void createAssetWithSign(String externalAccount, String assetName, Boolean isFungible, List<byte[]> sign, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_CREATEASSETWITHSIGN, 
                Arrays.<Type>asList(new Address(externalAccount),
                new Utf8String(assetName),
                new Bool(isFungible),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForCreateAssetWithSign(String externalAccount, String assetName, Boolean isFungible, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_CREATEASSETWITHSIGN, 
                Arrays.<Type>asList(new Address(externalAccount),
                new Utf8String(assetName),
                new Bool(isFungible),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple4<String, String, Boolean, List<byte[]>> getCreateAssetWithSignInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_CREATEASSETWITHSIGN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Bool>() {}, new TypeReference<StaticArray4<Bytes32>>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple4<String, String, Boolean, List<byte[]>>(

                (String) results.get(0).getValue(), 
                (String) results.get(1).getValue(), 
                (Boolean) results.get(2).getValue(), 
                convertToNative((List<Bytes32>) results.get(3).getValue())
                );
    }

    public Tuple2<String, Boolean> getCreateAssetWithSignOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_CREATEASSETWITHSIGN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Bool>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<String, Boolean>(

                (String) results.get(0).getValue(), 
                (Boolean) results.get(1).getValue()
                );
    }

    public String ADMIN_ADDR() throws ContractException {
        final Function function = new Function(FUNC_ADMIN_ADDR, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public String getAccountManager() throws ContractException {
        final Function function = new Function(FUNC_GETACCOUNTMANAGER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public byte[] ID() throws ContractException {
        final Function function = new Function(FUNC_ID, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public byte[] ADDR() throws ContractException {
        final Function function = new Function(FUNC_ADDR, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public byte[] TYPE_PUBLIC() throws ContractException {
        final Function function = new Function(FUNC_TYPE_PUBLIC, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public String OPERATOR_ADDR() throws ContractException {
        final Function function = new Function(FUNC_OPERATOR_ADDR, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public byte[] TYPE() throws ContractException {
        final Function function = new Function(FUNC_TYPE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public String getAuthCenter() throws ContractException {
        final Function function = new Function(FUNC_GETAUTHCENTER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public String getAuthManager() throws ContractException {
        final Function function = new Function(FUNC_GETAUTHMANAGER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public TransactionReceipt insertWithSign(byte[] key, byte[] value, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_INSERTWITHSIGN, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new DynamicBytes(value),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void insertWithSign(byte[] key, byte[] value, List<byte[]> sign, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_INSERTWITHSIGN, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new DynamicBytes(value),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForInsertWithSign(byte[] key, byte[] value, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_INSERTWITHSIGN, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new DynamicBytes(value),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple3<byte[], byte[], List<byte[]>> getInsertWithSignInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_INSERTWITHSIGN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}, new TypeReference<DynamicBytes>() {}, new TypeReference<StaticArray4<Bytes32>>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple3<byte[], byte[], List<byte[]>>(

                (byte[]) results.get(0).getValue(), 
                (byte[]) results.get(1).getValue(), 
                convertToNative((List<Bytes32>) results.get(2).getValue())
                );
    }

    public Tuple1<Boolean> getInsertWithSignOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_INSERTWITHSIGN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<Boolean>(

                (Boolean) results.get(0).getValue()
                );
    }

    public BigInteger getNonce() throws ContractException {
        final Function function = new Function(FUNC_GETNONCE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeCallWithSingleValueReturn(function, BigInteger.class);
    }

    public byte[] get(byte[] key) throws ContractException {
        final Function function = new Function(FUNC_GET, 
                Arrays.<Type>asList(new DynamicBytes(key)),
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public TransactionReceipt setWithSign(byte[] key, byte[] value, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_SETWITHSIGN, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new DynamicBytes(value),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void setWithSign(byte[] key, byte[] value, List<byte[]> sign, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_SETWITHSIGN, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new DynamicBytes(value),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForSetWithSign(byte[] key, byte[] value, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_SETWITHSIGN, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new DynamicBytes(value),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple3<byte[], byte[], List<byte[]>> getSetWithSignInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_SETWITHSIGN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}, new TypeReference<DynamicBytes>() {}, new TypeReference<StaticArray4<Bytes32>>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple3<byte[], byte[], List<byte[]>>(

                (byte[]) results.get(0).getValue(), 
                (byte[]) results.get(1).getValue(), 
                convertToNative((List<Bytes32>) results.get(2).getValue())
                );
    }

    public Tuple1<Boolean> getSetWithSignOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_SETWITHSIGN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<Boolean>(

                (Boolean) results.get(0).getValue()
                );
    }

    public TransactionReceipt createCurrency(String currencyName, String currencySymbol, BigInteger decimals) {
        final Function function = new Function(
                FUNC_CREATECURRENCY, 
                Arrays.<Type>asList(new Utf8String(currencyName),
                new Utf8String(currencySymbol),
                new Uint8(decimals)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void createCurrency(String currencyName, String currencySymbol, BigInteger decimals, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_CREATECURRENCY, 
                Arrays.<Type>asList(new Utf8String(currencyName),
                new Utf8String(currencySymbol),
                new Uint8(decimals)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForCreateCurrency(String currencyName, String currencySymbol, BigInteger decimals) {
        final Function function = new Function(
                FUNC_CREATECURRENCY, 
                Arrays.<Type>asList(new Utf8String(currencyName),
                new Utf8String(currencySymbol),
                new Uint8(decimals)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple3<String, String, BigInteger> getCreateCurrencyInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_CREATECURRENCY, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint8>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple3<String, String, BigInteger>(

                (String) results.get(0).getValue(), 
                (String) results.get(1).getValue(), 
                (BigInteger) results.get(2).getValue()
                );
    }

    public Tuple1<String> getCreateCurrencyOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_CREATECURRENCY, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>(

                (String) results.get(0).getValue()
                );
    }

    public byte[] KEY_ALL() throws ContractException {
        final Function function = new Function(FUNC_KEY_ALL, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public TransactionReceipt createAssetPool() {
        final Function function = new Function(
                FUNC_CREATEASSETPOOL, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void createAssetPool(TransactionCallback callback) {
        final Function function = new Function(
                FUNC_CREATEASSETPOOL, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForCreateAssetPool() {
        final Function function = new Function(
                FUNC_CREATEASSETPOOL, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<String> getCreateAssetPoolOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_CREATEASSETPOOL, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>(

                (String) results.get(0).getValue()
                );
    }

    public TransactionReceipt getAccount(String account) {
        final Function function = new Function(
                FUNC_GETACCOUNT, 
                Arrays.<Type>asList(new Address(account)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void getAccount(String account, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_GETACCOUNT, 
                Arrays.<Type>asList(new Address(account)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForGetAccount(String account) {
        final Function function = new Function(
                FUNC_GETACCOUNT, 
                Arrays.<Type>asList(new Address(account)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<String> getGetAccountInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_GETACCOUNT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>(

                (String) results.get(0).getValue()
                );
    }

    public Tuple1<String> getGetAccountOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_GETACCOUNT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>(

                (String) results.get(0).getValue()
                );
    }

    public static Organization load(String contractAddress, Client client, CryptoKeyPair credential) {
        return new Organization(contractAddress, client, credential);
    }

    public static Organization deploy(Client client, CryptoKeyPair credential, String projectAddress, String authCenterAddress) throws ContractException {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new Address(projectAddress),
                new Address(authCenterAddress)));
        return deploy(Organization.class, client, credential, getBinary(client.getCryptoSuite()), encodedConstructor);
    }
}
