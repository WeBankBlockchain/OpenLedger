/*
 *   Copyright (C) @2021 Webank Group Holding Limited
 *   <p>
 *   Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 *  in compliance with the License. You may obtain a copy of the License at
 *  <p>
 *  http://www.apache.org/licenses/LICENSE-2.0
 *   <p>
 *   Unless required by applicable law or agreed to in writing, software distributed under the License
 *   is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 *  or implied. See the License for the specific language governing permissions and limitations under
 *  he License.
 *
 */

package com.webank.openledger.contracts;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import org.fisco.bcos.sdk.abi.FunctionEncoder;
import org.fisco.bcos.sdk.abi.FunctionReturnDecoder;
import org.fisco.bcos.sdk.abi.TypeReference;
import org.fisco.bcos.sdk.abi.datatypes.Address;
import org.fisco.bcos.sdk.abi.datatypes.Bool;
import org.fisco.bcos.sdk.abi.datatypes.DynamicArray;
import org.fisco.bcos.sdk.abi.datatypes.DynamicBytes;
import org.fisco.bcos.sdk.abi.datatypes.Function;
import org.fisco.bcos.sdk.abi.datatypes.Type;
import org.fisco.bcos.sdk.abi.datatypes.Utf8String;
import org.fisco.bcos.sdk.abi.datatypes.generated.Bytes32;
import org.fisco.bcos.sdk.abi.datatypes.generated.StaticArray4;
import org.fisco.bcos.sdk.abi.datatypes.generated.Uint256;
import org.fisco.bcos.sdk.abi.datatypes.generated.Uint8;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple1;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple2;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple3;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple4;
import org.fisco.bcos.sdk.client.Client;
import org.fisco.bcos.sdk.contract.Contract;
import org.fisco.bcos.sdk.crypto.CryptoSuite;
import org.fisco.bcos.sdk.crypto.keypair.CryptoKeyPair;
import org.fisco.bcos.sdk.model.CryptoType;
import org.fisco.bcos.sdk.model.TransactionReceipt;
import org.fisco.bcos.sdk.model.callback.TransactionCallback;
import org.fisco.bcos.sdk.transaction.model.exception.ContractException;

@SuppressWarnings("unchecked")
public class Organization extends Contract {
    public static final String[] BINARY_ARRAY = {"","","","016200189b906200aea7565b60405180910390fd5b601f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fb47e016866040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016200191d91906200a4ad565b602060405180830381600087803b1580156200193857600080fd5b505af11580156200194d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506200197391908101906200955b565b925060008373ffffffffffffffffffffffffffffffffffffffff1614151515620019d4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620019cb906200ae63565b60405180910390fd5b620019ea8360226200771e90919063ffffffff16565b508291508173ffffffffffffffffffffffffffffffffffffffff16633bc5de306040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801562001a5357600080fd5b505af115801562001a68573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062001a8e91908101906200955b565b90508073ffffffffffffffffffffffffffffffffffffffff166358edef4c60096040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040162001ae891906200abdf565b602060405180830381600087803b15801562001b0357600080fd5b505af115801562001b18573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062001b3e919081019062009940565b5060019350505050919050565b6000606060008062001b7b8662001b6c8986620078ef90919063ffffffff16565b620078ef90919063ffffffff16565b9250601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c04d4ef3601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600086896040518563ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040162001c1f94939291906200a80d565b6040805180830381600087803b15801562001c3957600080fd5b505af115801562001c4e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062001c74919081019062009785565b809250819350505080151562001cc1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162001cb8906200aeeb565b60405180910390fd5b601f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c4dad5ce87896040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040162001d3c9291906200a4ca565b602060405180830381600087803b15801562001d5757600080fd5b505af115801562001d6c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062001d92919081019062009940565b93505050509392505050565b6000601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166337258c0d33601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163062001eb660048054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801562001ea15780601f1062001e755761010080835404028352916020019162001ea1565b820191906000526020600020905b81548152906001019060200180831162001e8357829003601f168201915b5050505050896200790f90919063ffffffff16565b6040518563ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040162001ef394939291906200a4f7565b602060405180830381600087803b15801562001f0e57600080fd5b505af115801562001f23573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062001f49919081019062009940565b151562001f8d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162001f84906200ad97565b60405180910390fd5b62001fa58383601b620079259092919063ffffffff16565b905092915050565b60118054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620020475780601f106200201b5761010080835404028352916020019162002047565b820191906000526020600020905b8154815290600101906020018083116200202957829003601f168201915b505050505081565b600a8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620020e95780601f10620020bd57610100808354040283529160200191620020e9565b820191906000526020600020905b815481529060010190602001808311620020cb57829003601f168201915b505050505081565b60128054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156200218b5780601f106200215f576101008083540402835291602001916200218b565b820191906000526020600020905b8154815290600101906020018083116200216d57829003601f168201915b505050505081565b60038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156200222d5780601f1062002201576101008083540402835291602001916200222d565b820191906000526020600020905b8154815290600101906020018083116200220f57829003601f168201915b505050505081565b60006060600080620022518684620078ef90919063ffffffff16565b9250601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c04d4ef3601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600086896040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401620022f594939291906200a6cf565b6040805180830381600087803b1580156200230f57600080fd5b505af115801562002324573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506200234a919081019062009785565b809250819350505080151562002397576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200238e906200aec9565b60405180910390fd5b601f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638428f258876040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016200241091906200a4ad565b602060405180830381600087803b1580156200242b57600080fd5b505af115801562002440573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062002466919081019062009940565b935050505092915050565b6000606060008373ffffffffffffffffffffffffffffffffffffffff1614156200249f5760009150620024d1565b620024b583602262007c9990919063ffffffff16565b9050600081511415620024cc5760009150620024d1565b600191505b50919050565b60028054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620025715780601f10620025455761010080835404028352916020019162002571565b820191906000526020600020905b8154815290600101906020018083116200255357829003601f168201915b505050505081565b60018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620026135780601f10620025e75761010080835404028352916020019162002613565b820191906000526020600020905b815481529060010190602001808311620025f557829003601f168201915b505050505081565b6000601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166337258c0d33601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16306200273360048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156200271e5780601f10620026f2576101008083540402835291602001916200271e565b820191906000526020600020905b8154815290600101906020018083116200270057829003601f168201915b5050505050896200790f90919063ffffffff16565b6040518563ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016200277094939291906200a4f7565b602060405180830381600087803b1580156200278b57600080fd5b505af1158015620027a0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620027c6919081019062009940565b15156200280a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162002801906200af0d565b60405180910390fd5b620028228383601b62007d849092919063ffffffff16565b905092915050565b60003073ffffffffffffffffffffffffffffffffffffffff16634768e049336040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016200288391906200a4ad565b602060405180830381600087","803b1580156200289e57600080fd5b505af1158015620028b3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620028d9919081019062009940565b15156200291d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162002914906200aea7565b60405180910390fd5b601f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663789a0ed5836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016200299691906200a4ad565b602060405180830381600087803b158015620029b157600080fd5b505af1158015620029c6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620029ec919081019062009940565b9050919050565b6000601f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166346438ca0836040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040162002a6e91906200a4ad565b602060405180830381600087803b15801562002a8957600080fd5b505af115801562002a9e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062002ac491908101906200955b565b9050919050565b600080601f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fb47e016846040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040162002b4791906200a4ad565b602060405180830381600087803b15801562002b6257600080fd5b505af115801562002b77573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062002b9d91908101906200955b565b905060008173ffffffffffffffffffffffffffffffffffffffff16141562002bc9576000915062002bd7565b62002bd48162002471565b91505b50919050565b6000806060600080600080600089518b5114151562002c33576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162002c2a906200ae41565b60405180910390fd5b62002c488c87620078ef90919063ffffffff16565b9550600094505b8a5185101562002cc55762002c868b8681518110151562002c6c57fe5b90602001906020020151876200790f90919063ffffffff16565b955062002cb58a8681518110151562002c9b57fe5b90602001906020020151876200790f90919063ffffffff16565b9550848060010195505062002c4f565b601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c04d4ef3601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000898d6040518563ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040162002d6794939291906200a739565b6040805180830381600087803b15801562002d8157600080fd5b505af115801562002d96573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062002dbc919081019062009785565b809450819550505082151562002e09576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162002e00906200ad53565b60405180910390fd5b62002e168c8c8c62007f88565b809250819350505060258190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506001819750975050505050505094509492505050565b60003073ffffffffffffffffffffffffffffffffffffffff16634768e049336040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040162002ef391906200a4ad565b602060405180830381600087803b15801562002f0e57600080fd5b505af115801562002f23573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062002f49919081019062009940565b151562002f8d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162002f84906200aea7565b60405180910390fd5b601f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ec17d025836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016200300691906200a4ad565b602060405180830381600087803b1580156200302157600080fd5b505af115801562003036573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506200305c919081019062009940565b9050919050565b600060606000806200307f8684620078ef90919063ffffffff16565b9250601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c04d4ef3601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600086896040518563ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016200312394939291906200a7a3565b6040805180830381600087803b1580156200313d57600080fd5b505af115801562003152573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062003178919081019062009785565b8092508193505050801515620031c5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620031bc906200ad31565b60405180910390fd5b601f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ec17d025876040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016200323e91906200a4ad565b602060405180830381600087803b1580156200325957600080fd5b505af11580156200326e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062003294919081019062009940565b935050505092915050565b6000601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620033635780601f10620033375761010080835404028352916020019162003363565b820191906000526020600020905b8154815290600101906020018083116200334557829003601f168201915b505050505081565b6000601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166337258c0d33601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16306200348360048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156200346e5780601f1062003442576101008083540402835291602001916200346e565b820191906000526020600020905b8154815290600101906020018083116200345057829003601f168201915b5050505050886200790f90919063ffffffff16565b6040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401620034c094939291906200a4f7565b602060405180830381600087803b158015620034db57600080fd5b505af1158015620034f0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062003516919081019062009940565b15156200355a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162003551906200ad0f565b60405180910390fd5b6200357082601b6200820d90919063ffffffff16565b9050919050565b601860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60608115620036375760278054806020026020016040519081016040528092919081815260200182805480156200362a57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311620035df575b50505050509050620036c3565b6028805480602002602001604051908101604052809291908181526020018280548015620036bb57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831162003670575b505050505090505b919050565b600f8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620037625780601f10620037365761010080835404028352916020019162003762565b820191906000526020600020905b8154815290600101906020018083116200374457829003601f168201915b505050505081565b601960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006060600080620037ac8684620078ef90919063ffffffff16565b9250601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c04d4ef3601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600086896040518563ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016200385094939291906200a8e1565b6040805180830381600087803b1580156200386a57600080fd5b505af11580156200387f573d6000803e3d6000fd5b505050506040513d601f19601f820116","82018060405250620038a5919081019062009785565b8092508193505050801515620038f2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620038e9906200adb9565b60405180910390fd5b601f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663789a0ed5876040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016200396b91906200a4ad565b602060405180830381600087803b1580156200398657600080fd5b505af11580156200399b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620039c1919081019062009940565b935050505092915050565b6000806000806000809050620039e23362002acb565b8062003a3b5750602660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b8062003b335750602660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663893d20e86040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801562003ac957600080fd5b505af115801562003ade573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062003b0491908101906200955b565b73ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff16145b1562003b3e57600190505b80151562003b83576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162003b7a906200adfd565b60405180910390fd5b62003b9088888862007f88565b809350819450505060258290806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505060018294509450505050935093915050565b6000606060008062003c2c86846200790f90919063ffffffff16565b9250601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c04d4ef3601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163062003d4360048054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801562003d2e5780601f1062003d025761010080835404028352916020019162003d2e565b820191906000526020600020905b81548152906001019060200180831162003d1057829003601f168201915b50505050508b6200790f90919063ffffffff16565b878a6040518663ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040162003d839594939291906200a9a5565b6040805180830381600087803b15801562003d9d57600080fd5b505af115801562003db2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062003dd8919081019062009785565b809250819350505080151562003e25576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162003e1c906200ad0f565b60405180910390fd5b62003e3b86601b6200820d90919063ffffffff16565b935050505092915050565b60158054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801562003ee05780601f1062003eb45761010080835404028352916020019162003ee0565b820191906000526020600020905b81548152906001019060200180831162003ec257829003601f168201915b505050505081565b60608060008062003f0386846200790f90919063ffffffff16565b9250601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c04d4ef3601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16306200401a60038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620040055780601f1062003fd95761010080835404028352916020019162004005565b820191906000526020600020905b81548152906001019060200180831162003fe757829003601f168201915b50505050508b6200790f90919063ffffffff16565b878a6040518663ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016200405a9594939291906200a9a5565b6040805180830381600087803b1580156200407457600080fd5b505af115801562004089573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620040af919081019062009785565b8092508193505050801515620040fc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620040f3906200ad75565b60405180910390fd5b6200411286601b6200846c90919063ffffffff16565b935050505092915050565b60003073ffffffffffffffffffffffffffffffffffffffff16634768e049336040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016200417691906200a4ad565b602060405180830381600087803b1580156200419157600080fd5b505af1158015620041a6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620041cc919081019062009940565b151562004210576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162004207906200aea7565b60405180910390fd5b601f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638428f258836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016200428991906200a4ad565b602060405180830381600087803b158015620042a457600080fd5b505af1158015620042b9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620042df919081019062009940565b9050919050565b6000806000806000809050620042fc3362002acb565b80620043555750602660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b806200444d5750602660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663893d20e86040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015620043e357600080fd5b505af1158015620043f8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506200441e91908101906200955b565b73ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff16145b156200445857600190505b8015156200449d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162004494906200adfd565b60405180910390fd5b601f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fb47e016886040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016200451691906200a4ad565b602060405180830381600087803b1580156200453157600080fd5b505af115801562004546573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506200456c91908101906200955b565b935060008473ffffffffffffffffffffffffffffffffffffffff1614151515620045cd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620045c4906200ae63565b60405180910390fd5b620045e584876022620085859092919063ffffffff16565b508392508273ffffffffffffffffffffffffffffffffffffffff16633bc5de306040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156200464e57600080fd5b505af115801562004663573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506200468991908101906200955b565b91508173ffffffffffffffffffffffffffffffffffffffff166320ba5b606009886040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401620046e59291906200ac03565b602060405180830381600087803b1580156200470057600080fd5b505af115801562004715573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506200473b919081019062009940565b50600194505050505092915050565b6000606060008060008060006200477f89620047708c89620078ef90919063ffffffff16565b6200790f90919063ffffffff16565b9550601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c04d4ef3601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000898c6040518563ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016200482394939291906200a877565b6040805180830381600087803b1580156200483d57600080fd5b505af115801562004852573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062004878919081019062009785565b8095508196505050831515620048c5576040517f08c379","a0000000000000000000000000000000000000000000000000000000008152600401620048bc906200accb565b60405180910390fd5b601f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fb47e0168b6040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016200493e91906200a4ad565b602060405180830381600087803b1580156200495957600080fd5b505af11580156200496e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506200499491908101906200955b565b925060008373ffffffffffffffffffffffffffffffffffffffff1614151515620049f5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620049ec906200ae63565b60405180910390fd5b62004a0d838a6022620085859092919063ffffffff16565b508291508173ffffffffffffffffffffffffffffffffffffffff16633bc5de306040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801562004a7657600080fd5b505af115801562004a8b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062004ab191908101906200955b565b90508073ffffffffffffffffffffffffffffffffffffffff166320ba5b6060098b6040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040162004b0d9291906200ac03565b602060405180830381600087803b15801562004b2857600080fd5b505af115801562004b3d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062004b63919081019062009940565b50600196505050505050509392505050565b600062004b83601b62008837565b905090565b60138054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801562004c225780601f1062004bf65761010080835404028352916020019162004c22565b820191906000526020600020905b81548152906001019060200180831162004c0457829003601f168201915b505050505081565b6060600080905062004c3c3362002acb565b8062004c955750602660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b8062004d8d5750602660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663893d20e86040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801562004d2357600080fd5b505af115801562004d38573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062004d5e91908101906200955b565b73ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff16145b1562004d9857600190505b80151562004ddd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162004dd4906200adfd565b60405180910390fd5b602980548060200260200160405190810160405280929190818152602001828054801562004e6157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831162004e16575b505050505091505090565b6000606060008060008060003073ffffffffffffffffffffffffffffffffffffffff16634768e049336040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040162004ecf91906200a4ad565b602060405180830381600087803b15801562004eea57600080fd5b505af115801562004eff573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062004f25919081019062009940565b151562004f69576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162004f60906200aea7565b60405180910390fd5b62004f7e8987620078ef90919063ffffffff16565b9550601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c04d4ef3601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000898c6040518563ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016200502294939291906200a665565b6040805180830381600087803b1580156200503c57600080fd5b505af115801562005051573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062005077919081019062009785565b8095508196505050831515620050c4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620050bb906200ae1f565b60405180910390fd5b601f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fb47e0168a6040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016200513d91906200a4ad565b602060405180830381600087803b1580156200515857600080fd5b505af11580156200516d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506200519391908101906200955b565b925060008373ffffffffffffffffffffffffffffffffffffffff1614151515620051f4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620051eb906200ae63565b60405180910390fd5b6200520a8360226200771e90919063ffffffff16565b508291508173ffffffffffffffffffffffffffffffffffffffff16633bc5de306040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156200527357600080fd5b505af115801562005288573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620052ae91908101906200955b565b90508073ffffffffffffffffffffffffffffffffffffffff166358edef4c60096040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016200530891906200abdf565b602060405180830381600087803b1580156200532357600080fd5b505af115801562005338573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506200535e919081019062009940565b506001965050505050505092915050565b60098054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620054095780601f10620053dd5761010080835404028352916020019162005409565b820191906000526020600020905b815481529060010190602001808311620053eb57829003601f168201915b505050505081565b60003073ffffffffffffffffffffffffffffffffffffffff16634768e049336040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016200546a91906200a4ad565b602060405180830381600087803b1580156200548557600080fd5b505af11580156200549a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620054c0919081019062009940565b151562005504576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620054fb906200aea7565b60405180910390fd5b601f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c4dad5ce83856040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016200557f9291906200a4ca565b602060405180830381600087803b1580156200559a57600080fd5b505af1158015620055af573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620055d5919081019062009940565b905092915050565b6000601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166337258c0d33601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1630620056f560048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620056e05780601f10620056b457610100808354040283529160200191620056e0565b820191906000526020600020905b815481529060010190602001808311620056c257829003601f168201915b5050505050896200790f90919063ffffffff16565b6040518563ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016200573294939291906200a4f7565b602060405180830381600087803b1580156200574d57600080fd5b505af115801562005762573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062005788919081019062009940565b1515620057cc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620057c3906200aca9565b60405180910390fd5b620057e48383601b620088459092919063ffffffff16565b905092915050565b6000806000601f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fb47e016856040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016200586a91906200a4ad565b602060405180830381600087803b1580156200588557600080fd5b505af11580156200589a","573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620058c091908101906200955b565b915060008273ffffffffffffffffffffffffffffffffffffffff161415620058ec5760009250620058f3565b8190508092505b5050919050565b60608060006200590b602262008a4e565b925092509250909192565b6000606060008062005946866200593789866200790f90919063ffffffff16565b6200790f90919063ffffffff16565b9250601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c04d4ef3601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163062005a5d60048054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801562005a485780601f1062005a1c5761010080835404028352916020019162005a48565b820191906000526020600020905b81548152906001019060200180831162005a2a57829003601f168201915b50505050508c6200790f90919063ffffffff16565b878a6040518663ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040162005a9d9594939291906200a9a5565b6040805180830381600087803b15801562005ab757600080fd5b505af115801562005acc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062005af2919081019062009785565b809250819350505080151562005b3f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162005b36906200af0d565b60405180910390fd5b62005b578787601b62007d849092919063ffffffff16565b93505050509392505050565b6000602660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663124b65b46040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801562005bec57600080fd5b505af115801562005c01573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062005c2791908101906200955b565b905090565b600080600080851562005de857602a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bdbeafa0898988601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16306040518663ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040162005cdc9594939291906200aa3e565b6040805180830381600087803b15801562005cf657600080fd5b505af115801562005d0b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062005d3191908101906200996c565b80935081925050508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff16141562005d7c57600080935093506200606e565b60278290806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062005f92565b602b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bdbeafa0898988601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16306040518663ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040162005e8b9594939291906200aa3e565b6040805180830381600087803b15801562005ea557600080fd5b505af115801562005eba573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062005ee091908101906200996c565b80935081925050508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff16141562005f2b57600080935093506200606e565b60288290806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b602660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b1a8b94b8330896040518463ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016200600f939291906200a54b565b602060405180830381600087803b1580156200602a57600080fd5b505af11580156200603f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062006065919081019062009940565b50816001935093505b505094509492505050565b601660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b3032be86040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156200612857600080fd5b505af11580156200613d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506200616391908101906200955b565b905090565b60068054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620062025780601f10620061d65761010080835404028352916020019162006202565b820191906000526020600020905b815481529060010190602001808311620061e457829003601f168201915b505050505081565b60078054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620062a45780601f106200627857610100808354040283529160200191620062a4565b820191906000526020600020905b8154815290600101906020018083116200628657829003601f168201915b505050505081565b60008054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620063465780601f106200631a5761010080835404028352916020019162006346565b820191906000526020600020905b8154815290600101906020018083116200632857829003601f168201915b505050505081565b601760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60088054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156200640e5780601f10620063e2576101008083540402835291602001916200640e565b820191906000526020600020905b815481529060010190602001808311620063f057829003601f168201915b505050505081565b6000601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c55fc52d6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015620064c957600080fd5b505af1158015620064de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506200650491908101906200955b565b905090565b6000606060008062006539866200652a89866200790f90919063ffffffff16565b6200790f90919063ffffffff16565b9250601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c04d4ef3601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16306200665060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156200663b5780601f106200660f576101008083540402835291602001916200663b565b820191906000526020600020905b8154815290600101906020018083116200661d57829003601f168201915b50505050508c6200790f90919063ffffffff16565b878a6040518663ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401620066909594939291906200a9a5565b6040805180830381600087803b158015620066aa57600080fd5b505af1158015620066bf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620066e5919081019062009785565b809250819350505080151562006732576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162006729906200ad97565b60405180910390fd5b6200674a8787601b620079259092919063ffffffff16565b93505050509392505050565b6000602154905090565b6060601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166337258c0d33601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16306200687860038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620068635780601f10620068375761010080835404028352916020019162006863565b820191906000526020600020905b8154815290600101906020018083116200684557829003601f168201915b5050505050886200790f90919063ffffffff16565b6040518563ffffffff167c010000000000000000000000","0000000000000000000000000000000000028152600401620068b594939291906200a4f7565b602060405180830381600087803b158015620068d057600080fd5b505af1158015620068e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506200690b919081019062009940565b15156200694f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162006946906200ad75565b60405180910390fd5b6200696582601b6200846c90919063ffffffff16565b9050919050565b600060606000806200699c866200698d89866200790f90919063ffffffff16565b6200790f90919063ffffffff16565b9250601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c04d4ef3601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163062006ab360048054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801562006a9e5780601f1062006a725761010080835404028352916020019162006a9e565b820191906000526020600020905b81548152906001019060200180831162006a8057829003601f168201915b50505050508c6200790f90919063ffffffff16565b878a6040518663ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040162006af39594939291906200a9a5565b6040805180830381600087803b15801562006b0d57600080fd5b505af115801562006b22573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062006b48919081019062009785565b809250819350505080151562006b95576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162006b8c906200aca9565b60405180910390fd5b62006bad8787601b620088459092919063ffffffff16565b93505050509392505050565b6000806000809050602660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663893d20e86040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801562006c4857600080fd5b505af115801562006c5d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062006c8391908101906200955b565b73ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff16148062006d0a5750602660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b1562006d1557600190505b80151562006d5a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162006d51906200adfd565b60405180910390fd5b602660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635a3298946040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801562006de157600080fd5b505af115801562006df6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062006e1c91908101906200955b565b73ffffffffffffffffffffffffffffffffffffffff1663c6e8631b878787601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16306040518663ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040162006e9c9594939291906200ac3e565b602060405180830381600087803b15801562006eb757600080fd5b505af115801562006ecc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062006ef291908101906200955b565b91508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff161415151562006f69576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162006f60906200addb565b60405180910390fd5b602660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632f84c391836040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040162006fe291906200a4ad565b602060405180830381600087803b15801562006ffd57600080fd5b505af115801562007012573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062007038919081019062009940565b5081925050509392505050565b60058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620070df5780601f10620070b357610100808354040283529160200191620070df565b820191906000526020600020905b815481529060010190602001808311620070c157829003601f168201915b505050505081565b6000806000809050620070fa3362002acb565b80620071535750602660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b806200724b5750602660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663893d20e86040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015620071e157600080fd5b505af1158015620071f6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506200721c91908101906200955b565b73ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff16145b156200725657600190505b8015156200729b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162007292906200adfd565b60405180910390fd5b602660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635de2d1926040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156200732257600080fd5b505af115801562007337573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506200735d91908101906200955b565b73ffffffffffffffffffffffffffffffffffffffff166376a39282601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16306040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401620073d79291906200a4ca565b602060405180830381600087803b158015620073f257600080fd5b505af115801562007407573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506200742d91908101906200955b565b91508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff1614151515620074a4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200749b906200ae85565b60405180910390fd5b60298290806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050819250505090565b600080600080601f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fb47e016866040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016200759191906200a4ad565b602060405180830381600087803b158015620075ac57600080fd5b505af1158015620075c1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620075e791908101906200955b565b925060008373ffffffffffffffffffffffffffffffffffffffff161415620076135760009350620076bc565b8291508173ffffffffffffffffffffffffffffffffffffffff16633bc5de306040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156200767b57600080fd5b505af115801562007690573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620076b691908101906200955b565b90508093505b505050919050565b600080828401905083811015151562007714576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200770b906200aced565b60405180910390fd5b8091505092915050565b6000808360000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905060008114156200777c5760009150620078e8565b7ffac780c176150c8e1c66f7fcc3c6d4b281e261e2e08c26ae23375f55203534d032336040805190810160405280600681526020017f44454c4554450000000000000000000000000000000000000000000000000000815250868860000160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016040516200782d9594939291906200a588565b60405180910390a18360000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000808201600090556001820160006200789191906200907d","","80198251168184511680821785525050505050509050019150509081526020016040518091039020600001549050600081111562008a41577f77da9cffaff6366f6be90a928ae84ae14a77d3138ce236f9481aa71d15a9c47c32336040805190810160405280600681526020017f4d4f4449465900000000000000000000000000000000000000000000000000008152508789600001896040518082805190602001908083835b6020831015156200895d578051825260208201915060208101905060208303925062008936565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600101604051620089a69594939291906200a5f3565b60405180910390a18285600001856040518082805190602001908083835b602083101515620089eb5780518252602082019150602081019050602083039250620089c4565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600101908051906020019062008a36929190620090c9565b506001915062008a46565b600091505b509392505050565b6060806000806000905062008a7085600062008a6a8862008d46565b62008d54565b80945081955082965083975050505050509193909250565b6060600080836c0100000000000000000000000002915060146040519080825280601f01601f19166020018201604052801562008ad45781602001602082028038833980820191505090505b509250600090505b601481101562008b6557818160148110151562008af557fe5b1a7f010000000000000000000000000000000000000000000000000000000000000002838281518110151562008b2757fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505062008adc565b5050919050565b606080606080606060008088955087945084518651016040519080825280601f01601f19166020018201604052801562008bb55781602001602082028038833980820191505090505b50935083925060009150600090505b855181101562008c7b57858181518110151562008bdd57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002838380600101945081518110151562008c3d57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505062008bc4565b600090505b845181101562008d3757848181518110151562008c9957fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002838380600101945081518110151562008cf957fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505062008c80565b83965050505050505092915050565b600081600201549050919050565b606080600080600080600060608860405190808252806020026020018201604052801562008d915781602001602082028038833980820191505090505b5097508860405190808252806020026020018201604052801562008dca57816020015b606081526020019060019003908162008db45790505b509650600093506000925060009550600094508993505b62008ded8b8562008ed1565b1562008ec45762008dff8b8562008ee5565b9150915081888481518110151562008e1357fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505080878481518110151562008e5f57fe5b906020019060200201819052506001830192508580600101965050888610151562008eb05762008e908b8562009015565b945062008e9e8b8662008ed1565b151562008eaa57600094505b62008ec4565b62008ebc8b8562009015565b935062008de1565b5050505093509350935093565b600082600101805490508210905092915050565b60006060836001018381548110151562008efb57fe5b9060005260206000200160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691508360000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620090075780601f1062008fdb5761010080835404028352916020019162009007565b820191906000526020600020905b81548152906001019060200180831162008fe957829003601f168201915b505050505090509250929050565b600081806001019250505b82600101805490508210801562009060575082600101828154811015156200904457fe5b9060005260206000200160000160149054906101000a900460ff165b156200907457818060010192505062009020565b81905092915050565b50805460018160011615610100020316600290046000825580601f10620090a55750620090c6565b601f016020900490600052602060002090810190620090c59190620091c5565b5b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200910c57805160ff19168380011785556200913d565b828001600101855582156200913d579182015b828111156200913c5782518255916020019190600101906200911f565b5b5090506200914c9190620091c5565b5090565b81548183558181111562009180576002028160020283600052602060002091820191016200917f9190620091ed565b5b505050565b604051616ddf806200b20f83390190565b815481835581811115620091c057818360005260206000209182019101620091bf919062009235565b5b505050565b620091ea91905b80821115620091e6576000816000905550600101620091cc565b5090565b90565b6200923291905b808211156200922e57600080820160006200921091906200907d565b6001820160006101000a81549060ff021916905550600201620091f4565b5090565b90565b6200928f91905b808211156200928b57600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000820160146101000a81549060ff0219169055506001016200923c565b5090565b90565b6000620092a082356200b139565b905092915050565b6000620092b682516200b139565b905092915050565b600082601f8301121515620092d257600080fd5b6004620092e9620092e3826200af7a565b6200af4c565b915081838560208402820111156200930057600080fd5b60005b83811015620093345781620093198882620093e9565b84526020840193506020830192505060018101905062009303565b5050505092915050565b600082601f83011215156200935257600080fd5b81356200936962009363826200af9d565b6200af4c565b9150818183526020840193506020810190508360005b83811015620093b35781358601620093988882620093ff565b8452602084019350602083019250506001810190506200937f565b5050505092915050565b6000620093cb82356200b159565b905092915050565b6000620093e182516200b159565b905092915050565b6000620093f782356200b165565b905092915050565b600082601f83011215156200941357600080fd5b81356200942a62009424826200afc6565b6200af4c565b915080825260208301602083018583830111156200944757600080fd5b620094548382846200b1b8565b50505092915050565b600082601f83011215156200947157600080fd5b81356200948862009482826200aff3565b6200af4c565b91508082526020830160208301858383011115620094a557600080fd5b620094b28382846200b1b8565b50505092915050565b600082601f8301121515620094cf57600080fd5b8135620094e6620094e0826200b020565b6200af4c565b915080825260208301602083018583830111156200950357600080fd5b620095108382846200b1b8565b50505092915050565b60006200952782356200b16f565b905092915050565b6000602082840312156200954257600080fd5b6000620095528482850162009292565b91505092915050565b6000602082840312156200956e57600080fd5b60006200957e84828501620092a8565b91505092915050565b600080604083850312156200959b57600080fd5b6000620095ab8582860162009292565b9250506020620095be8582860162009292565b9150509250929050565b600080600060c08486031215620095de57600080fd5b6000620095ee8682870162009292565b9350506020620096018682870162009292565b92505060406200961486828701620092be565b9150509250925092565b60008060a083850312156200963257600080fd5b6000620096428582860162009292565b92505060206200965585828601620092be565b9150509250929050565b6000806000606084860312156200967557600080fd5b6000620096858682870162009292565b935050602084013567ffffffffffffffff811115620096a357600080fd5b620096b1868287016200933e565b925050604084013567ffffffffffffffff811115620096cf57600080fd5b620096dd868287016200933e565b9150509250925092565b60008060008060e08587031215620096fe57600080fd5b60006200970e8782880162009292565b945050602085013567ffffffffffffffff8111156200972c57600080fd5b6200973a878288016200933e565b935050604085013567ffffffffffffffff8111156200975857600080fd5b62009766878288016200933e565b92505060606200977987828801620092be565b91505092959194509250565b600080604083850312156200979957600080fd5b6000620097a985828601620092a8565b9250506020620097bc85828601620093d3565b9150509250929050565b60008060408385031215620097da57600080fd5b6000620097ea8582860162009292565b925050602083013567ffffffffffffffff8111156200980857600080fd5b62009816858286016200945d565b9150509250929050565b600080600060c084860312156200983657600080fd5b6000620098468682870162009292565b935050602084013567ffffffffffffffff8111156200986457600080fd5b62009872868287016200945d565b92505060406200988586828701620092be565b9150509250925092565b","","","","","","","","019150602081019050602083039250614146565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206001016040516141b2959493929190615233565b60405180910390a18285600001856040518082805190602001908083835b6020831015156141f557805182526020820191506020810190506020830392506141d0565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600101908051906020019061423e9291906146f0565b506001915061424d565b600091505b509392505050565b606080606080606060008088955087945084518651016040519080825280601f01601f19166020018201604052801561429d5781602001602082028038833980820191505090505b50935083925060009150600090505b855181101561435f5785818151811015156142c357fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002838380600101945081518110151561432257fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506142ac565b600090505b845181101561441757848181518110151561437b57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f01000000000000000000000000000000000000000000000000000000000000000283838060010194508151811015156143da57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050614364565b83965050505050505092915050565b600081600201549050919050565b6060806000806000806000808860405190808252806020026020018201604052801561446f5781602001602082028038833980820191505090505b509750886040519080825280602002602001820160405280156144a15781602001602082028038833980820191505090505b509650600093506000925060009550600094508993505b6144c28b856145c6565b156145b9576144d18b856145da565b915091508188848151811015156144e457fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505080878481518110151561452f57fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600183019250858060010196505088861015156145a85761458c8b8561468c565b94506145988b866145c6565b15156145a357600094505b6145b9565b6145b28b8561468c565b93506144b8565b5050505093509350935093565b600082600101805490508210905092915050565b60008083600101838154811015156145ee57fe5b9060005260206000200160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691508360000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690509250929050565b600081806001019250505b8260010180549050821080156146d5575082600101828154811015156146b957fe5b9060005260206000200160000160149054906101000a900460ff165b156146e7578180600101925050614697565b81905092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061473157805160ff191683800117855561475f565b8280016001018555821561475f579182015b8281111561475e578251825591602001919060010190614743565b5b50905061476c9190614816565b5090565b81548183558181111561479d5760020281600202836000526020600020918201910161479c919061483b565b5b505050565b50805460018160011615610100020316600290046000825580601f106147c857506147e7565b601f0160209004906000526020600020908101906147e69190614816565b5b50565b81548183558181111561481157818360005260206000209182019101614810919061487e565b5b505050565b61483891905b8082111561483457600081600090555060010161481c565b5090565b90565b61487b91905b80821115614877576000808201600061485a91906147a2565b6001820160006101000a81549060ff021916905550600201614841565b5090565b90565b6148d591905b808211156148d157600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000820160146101000a81549060ff021916905550600101614884565b5090565b90565b60006148e482356156f0565b905092915050565b60006148f882516156f0565b905092915050565b600082601f830112151561491357600080fd5b6004614926614921826155f3565b6155c6565b9150818385602084028201111561493c57600080fd5b60005b8381101561496c5781614952888261499e565b84526020840193506020830192505060018101905061493f565b5050505092915050565b60006149828235615710565b905092915050565b60006149968251615710565b905092915050565b60006149aa823561571c565b905092915050565b600082601f83011215156149c557600080fd5b81356149d86149d382615615565b6155c6565b915080825260208301602083018583830111156149f457600080fd5b6149ff83828461574a565b50505092915050565b600060208284031215614a1a57600080fd5b6000614a28848285016148ec565b91505092915050565b600080600060608486031215614a4657600080fd5b6000614a54868287016148d8565b9350506020614a65868287016148d8565b9250506040614a7686828701614976565b9150509250925092565b60008060008060006101008688031215614a9957600080fd5b6000614aa7888289016148d8565b9550506020614ab8888289016148d8565b9450506040614ac988828901614976565b935050606086013567ffffffffffffffff811115614ae657600080fd5b614af2888289016149b2565b9250506080614b0388828901614900565b9150509295509295909350565b60008060408385031215614b2357600080fd5b6000614b31858286016148ec565b9250506020614b428582860161498a565b9150509250929050565b600060208284031215614b5e57600080fd5b6000614b6c84828501614976565b91505092915050565b600060208284031215614b8757600080fd5b6000614b958482850161498a565b91505092915050565b60008060a08385031215614bb157600080fd5b6000614bbf85828601614976565b9250506020614bd085828601614900565b9150509250929050565b600060208284031215614bec57600080fd5b600082013567ffffffffffffffff811115614c0657600080fd5b614c12848285016149b2565b91505092915050565b60008060a08385031215614c2e57600080fd5b600083013567ffffffffffffffff811115614c4857600080fd5b614c54858286016149b2565b9250506020614c6585828601614900565b9150509250929050565b60008060408385031215614c8257600080fd5b600083013567ffffffffffffffff811115614c9c57600080fd5b614ca8858286016149b2565b925050602083013567ffffffffffffffff811115614cc557600080fd5b614cd1858286016149b2565b9150509250929050565b600080600060c08486031215614cf057600080fd5b600084013567ffffffffffffffff811115614d0a57600080fd5b614d16868287016149b2565b935050602084013567ffffffffffffffff811115614d3357600080fd5b614d3f868287016149b2565b9250506040614d5086828701614900565b9150509250925092565b614d63816156b0565b82525050565b6000614d748261566a565b808452602084019350614d8683615641565b60005b82811015614db857614d9c868351614d5a565b614da582615696565b9150602086019550600181019050614d89565b50849250505092915050565b614dcd81615675565b614dd68261564e565b60005b82811015614e0857614dec858351614e1e565b614df5826156a3565b9150602085019450600181019050614dd9565b5050505050565b614e18816156d0565b82525050565b614e27816156dc565b82525050565b6000614e388261568b565b808452614e4c816020860160208601615759565b614e558161578c565b602085010191505092915050565b6000614e6e82615680565b808452614e82816020860160208601615759565b614e8b8161578c565b602085010191505092915050565b600081546001811660008114614eb65760018114614ed657614f17565b607f600283041680865260ff198316602087015260408601935050614f17565b60028204808652602086019550614eec85615658565b60005b82811015614f0e57815481890152600182019150602081019050614eef565b80880195505050505b505092915050565b614f2881615726565b82525050565b614f3781615738565b82525050565b6000601782527f676574416c6c41737365747320466f7262696464656e210000000000000000006020830152604082019050919050565b6000600e82527f73657420466f7262696464656e210000000000000000000000000000000000006020830152604082019050919050565b6000601b82527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006020830152604082019050919050565b6000601182527f72656d6f766520466f7262696464656e210000000000000000000000000000006020830152604082019050919050565b6000600e82527f67657420466f7262696464656e210000000000000000000000000000000000006020830152604082019050919050565b6000601382527f616464417373657420466f7262696464656e21000000000000000000000000006020830152604082019050919050565b6000601182527f696e7365727420466f7262696464656e210000000000000000000000000000006020830152604082019050919050565b6000600882527f61646441737365740000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600e82527f61646420466f7262696464656e210000000000000000000000000000000000006020830152604082019050919050565b6000600c82527f676574416c6c417373657473000000000000000000000000000000000000000060208301","52604082019050919050565b61516c816156e6565b82525050565b60006020820190506151876000830184614d5a565b92915050565b60006080820190506151a26000830187614d5a565b6151af6020830186614d5a565b6151bc6040830185614d5a565b81810360608301526151ce8184614e2d565b905095945050505050565b600060a0820190506151ee6000830188614d5a565b6151fb6020830187614d5a565b818103604083015261520d8186614e63565b905061521c6060830185614d5a565b6152296080830184614d5a565b9695505050505050565b600060a0820190506152486000830188614d5a565b6152556020830187614d5a565b81810360408301526152678186614e63565b9050818103606083015261527b8185614e2d565b9050818103608083015261528f8184614e99565b90509695505050505050565b60006080820190506152b06000830186614d5a565b6152bd6020830185614d5a565b6152ca6040830184614f1f565b81810360608301526152db8161512c565b9050949350505050565b6000610100820190506152fb6000830187614d5a565b6153086020830186614f1f565b8181036040830152615319816150be565b9050818103606083015261532d8185614e2d565b905061533c6080830184614dc4565b95945050505050565b60006101008201905061535b6000830187614d5a565b6153686020830186614f1f565b81810360408301526153798161512c565b9050818103606083015261538d8185614e2d565b905061539c6080830184614dc4565b95945050505050565b6000610100820190506153bb6000830188614d5a565b6153c86020830187614f2e565b81810360408301526153da8186614e2d565b905081810360608301526153ee8185614e2d565b90506153fd6080830184614dc4565b9695505050505050565b600060608201905081810360008301526154218186614d69565b905081810360208301526154358185614d69565b90506154446040830184615163565b949350505050565b60006020820190506154616000830184614e0f565b92915050565b600060208201905081810360008301526154818184614e63565b905092915050565b600060208201905081810360008301526154a38184614e2d565b905092915050565b600060208201905081810360008301526154c481614f3d565b9050919050565b600060208201905081810360008301526154e481614f74565b9050919050565b6000602082019050818103600083015261550481614fab565b9050919050565b6000602082019050818103600083015261552481614fe2565b9050919050565b6000602082019050818103600083015261554481615019565b9050919050565b6000602082019050818103600083015261556481615050565b9050919050565b6000602082019050818103600083015261558481615087565b9050919050565b600060208201905081810360008301526155a4816150f5565b9050919050565b60006020820190506155c06000830184615163565b92915050565b6000604051905081810181811067ffffffffffffffff821117156155e957600080fd5b8060405250919050565b600067ffffffffffffffff82111561560a57600080fd5b602082029050919050565b600067ffffffffffffffff82111561562c57600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b6000819050919050565b60008160005260206000209050919050565b600081519050919050565b600060049050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b6000615731826156b0565b9050919050565b6000615743826156b0565b9050919050565b82818337600083830152505050565b60005b8381101561577757808201518184015260208101905061575c565b83811115615786576000848401525b50505050565b6000601f19601f8301169050919050565b6060600080836c0100000000000000000000000002915060146040519080825280601f01601f1916602001820160405280156157e85781602001602082028038833980820191505090505b509250600090505b601481101561587557818160148110151561580757fe5b1a7f010000000000000000000000000000000000000000000000000000000000000002838281518110151561583857fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506157f0565b50509190505600a265627a7a72305820d0b2b251f85b095513340652b3c99ad1badf8a819b280d5082d28aa0021b02e66c6578706572696d656e74616cf50037a265627a7a723058204a7456650da7248e00722175a59da59204ea0de772f53cd5a611249655b3b29e6c6578706572696d656e74616cf50037"};

    public static final String BINARY = String.join("", BINARY_ARRAY);

    public static final String[] SM_BINARY_ARRAY = {"","","","00526020600020905b8154815290600101906020018083116200189857829003601f168201915b505050505081565b6000601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631500025a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156200194757600080fd5b505af11580156200195c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506200198291908101906200955b565b905090565b60158054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801562001a215780601f10620019f55761010080835404028352916020019162001a21565b820191906000526020600020905b81548152906001019060200180831162001a0357829003601f168201915b505050505081565b600080600080600080905062001a3f33620066ec565b8062001a985750602660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b8062001b905750602660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c624d5346040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801562001b2657600080fd5b505af115801562001b3b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062001b6191908101906200955b565b73ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff16145b1562001b9b57600190505b80151562001be0576040517fc703cb1200000000000000000000000000000000000000000000000000000000815260040162001bd7906200ae85565b60405180910390fd5b601f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a5d51f74886040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040162001c5991906200a4ad565b602060405180830381600087803b15801562001c7457600080fd5b505af115801562001c89573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062001caf91908101906200955b565b935060008473ffffffffffffffffffffffffffffffffffffffff161415151562001d10576040517fc703cb1200000000000000000000000000000000000000000000000000000000815260040162001d07906200ae63565b60405180910390fd5b62001d2884876022620076fa9092919063ffffffff16565b508392508273ffffffffffffffffffffffffffffffffffffffff1663e211e0c16040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801562001d9157600080fd5b505af115801562001da6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062001dcc91908101906200955b565b91508173ffffffffffffffffffffffffffffffffffffffff166361e020cb6009886040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040162001e289291906200ac03565b602060405180830381600087803b15801562001e4357600080fd5b505af115801562001e58573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062001e7e919081019062009940565b50600194505050505092915050565b600080600080601f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a5d51f74866040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040162001f0c91906200a4ad565b602060405180830381600087803b15801562001f2757600080fd5b505af115801562001f3c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062001f6291908101906200955b565b925060008373ffffffffffffffffffffffffffffffffffffffff16141562001f8e576000935062002037565b8291508173ffffffffffffffffffffffffffffffffffffffff1663e211e0c16040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801562001ff657600080fd5b505af11580156200200b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506200203191908101906200955b565b90508093505b505050919050565b6000806060600080600080600089518b5114151562002095576040517fc703cb120000000000000000000000000000000000000000000000000000000081526004016200208c906200ad53565b60405180910390fd5b620020aa8c87620076c490919063ffffffff16565b9550600094505b8a518510156200212757620020e88b86815181101515620020ce57fe5b9060200190602002015187620076e490919063ffffffff16565b9550620021178a86815181101515620020fd57fe5b9060200190602002015187620076e490919063ffffffff16565b95508480600101955050620020b1565b601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cfe3b125601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000898d6040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401620021c994939291906200a80d565b6040805180830381600087803b158015620021e357600080fd5b505af1158015620021f8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506200221e919081019062009785565b80945081955050508215156200226b576040517fc703cb1200000000000000000000000000000000000000000000000000000000815260040162002262906200aea7565b60405180910390fd5b620022788c8c8c620079ac565b809250819350505060258190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506001819750975050505050505094509492505050565b60008060008060008090506200231233620066ec565b806200236b5750602660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b80620024635750602660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c624d5346040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015620023f957600080fd5b505af11580156200240e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506200243491908101906200955b565b73ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff16145b156200246e57600190505b801515620024b3576040517fc703cb12000000000000000000000000000000000000000000000000000000008152600401620024aa906200ae85565b60405180910390fd5b620024c0888888620079ac565b809350819450505060258290806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505060018294509450505050935093915050565b6060601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638d478f2933601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16306200265860038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620026435780601f10620026175761010080835404028352916020019162002643565b820191906000526020600020905b8154815290600101906020018083116200262557829003601f168201915b505050505088620076e490919063ffffffff16565b6040518563ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016200269594939291906200a4f7565b602060405180830381600087803b158015620026b057600080fd5b505af1158015620026c5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620026eb919081019062009940565b15156200272f576040517fc703cb1200000000000000000000000000000000000000000000000000000000815260040162002726906200ad97565b60405180910390fd5b6200274582601b62007c3190919063ffffffff16565b9050919050565b6000806000803073ffffffffffffffffffffffffffffffffffffffff1663d2eef3a1336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401620027a991906200a4ad565b602060405180830381600087803b158015620027c457600080fd5b505af1158015620027d9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620027ff919081019062009940565b151562002843576040517fc703cb120000000000000000000000000000000000000000000000000000000081526004016200283a906200ae41565b60405180910390fd5b601f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a5d51f74866040518263ffffffff167c0100","000000000000000000000000000000000000000000000000000000028152600401620028bc91906200a4ad565b602060405180830381600087803b158015620028d757600080fd5b505af1158015620028ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506200291291908101906200955b565b925060008373ffffffffffffffffffffffffffffffffffffffff161415151562002973576040517fc703cb120000000000000000000000000000000000000000000000000000000081526004016200296a906200ae63565b60405180910390fd5b6200298983602262007d4a90919063ffffffff16565b508291508173ffffffffffffffffffffffffffffffffffffffff1663e211e0c16040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015620029f257600080fd5b505af115801562002a07573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062002a2d91908101906200955b565b90508073ffffffffffffffffffffffffffffffffffffffff16637e6f287c60096040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040162002a8791906200abdf565b602060405180830381600087803b15801562002aa257600080fd5b505af115801562002ab7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062002add919081019062009940565b5060019350505050919050565b6060600080905062002afc33620066ec565b8062002b555750602660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b8062002c4d5750602660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c624d5346040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801562002be357600080fd5b505af115801562002bf8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062002c1e91908101906200955b565b73ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff16145b1562002c5857600190505b80151562002c9d576040517fc703cb1200000000000000000000000000000000000000000000000000000000815260040162002c94906200ae85565b60405180910390fd5b602980548060200260200160405190810160405280929190818152602001828054801562002d2157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831162002cd6575b505050505091505090565b6000606060008062002d488684620076c490919063ffffffff16565b9250601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cfe3b125601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600086896040518563ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040162002dec94939291906200a6cf565b6040805180830381600087803b15801562002e0657600080fd5b505af115801562002e1b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062002e41919081019062009785565b809250819350505080151562002e8e576040517fc703cb1200000000000000000000000000000000000000000000000000000000815260040162002e85906200aec9565b60405180910390fd5b601f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ef0c4a1c876040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040162002f0791906200a4ad565b602060405180830381600087803b15801562002f2257600080fd5b505af115801562002f37573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062002f5d919081019062009940565b935050505092915050565b600080600080905062002f7b33620066ec565b8062002fd45750602660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b80620030cc5750602660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c624d5346040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156200306257600080fd5b505af115801562003077573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506200309d91908101906200955b565b73ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff16145b15620030d757600190505b8015156200311c576040517fc703cb1200000000000000000000000000000000000000000000000000000000815260040162003113906200ae85565b60405180910390fd5b602660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630efa13016040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015620031a357600080fd5b505af1158015620031b8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620031de91908101906200955b565b73ffffffffffffffffffffffffffffffffffffffff16633fe4bd49601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16306040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401620032589291906200a4ca565b602060405180830381600087803b1580156200327357600080fd5b505af115801562003288573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620032ae91908101906200955b565b91508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff161415151562003325576040517fc703cb120000000000000000000000000000000000000000000000000000000081526004016200331c906200addb565b60405180910390fd5b60298290806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050819250505090565b6060806000620033a4602262007f1b565b925092509250909192565b60006060600080620033df86620033d08986620076c490919063ffffffff16565b620076c490919063ffffffff16565b9250601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cfe3b125601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600086896040518563ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016200348394939291906200a877565b6040805180830381600087803b1580156200349d57600080fd5b505af1158015620034b2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620034d8919081019062009785565b809250819350505080151562003525576040517fc703cb120000000000000000000000000000000000000000000000000000000081526004016200351c906200ad31565b60405180910390fd5b601f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639e57312e87896040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401620035a09291906200a4ca565b602060405180830381600087803b158015620035bb57600080fd5b505af1158015620035d0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620035f6919081019062009940565b93505050509392505050565b6000606060008373ffffffffffffffffffffffffffffffffffffffff16141562003630576000915062003662565b6200364683602262007f5590919063ffffffff16565b90506000815114156200365d576000915062003662565b600191505b50919050565b60138054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620037025780601f10620036d65761010080835404028352916020019162003702565b820191906000526020600020905b815481529060010190602001808311620036e457829003601f168201915b505050505081565b60006200372460016021546200804090919063ffffffff16565b602181905550602154905090565b600060606000806200376286620037538986620076e490919063ffffffff16565b620076e490919063ffffffff16565b9250601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cfe3b125601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16306200387960048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620038645780601f10620038385761010080835404028352916020019162003864565b820191906000526020600020905b8154815290600101906020018083116200384657829003601f168201915b50505050508c620076e490919063ffffffff16565b878a6040518663ffffffff167c010000000000000000","","","","815290600101906020018083116200688d57829003601f168201915b505050505081565b60108054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156200694d5780601f1062006921576101008083540402835291602001916200694d565b820191906000526020600020905b8154815290600101906020018083116200692f57829003601f168201915b505050505081565b60006060600080620069718684620076e490919063ffffffff16565b9250601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cfe3b125601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163062006a8860048054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801562006a735780601f1062006a475761010080835404028352916020019162006a73565b820191906000526020600020905b81548152906001019060200180831162006a5557829003601f168201915b50505050508b620076e490919063ffffffff16565b878a6040518663ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040162006ac89594939291906200a9a5565b6040805180830381600087803b15801562006ae257600080fd5b505af115801562006af7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062006b1d919081019062009785565b809250819350505080151562006b6a576040517fc703cb1200000000000000000000000000000000000000000000000000000000815260040162006b61906200af0d565b60405180910390fd5b62006b8086601b6200861790919063ffffffff16565b935050505092915050565b6000806000809050602660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c624d5346040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801562006c1a57600080fd5b505af115801562006c2f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062006c5591908101906200955b565b73ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff16148062006cdc5750602660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b1562006ce757600190505b80151562006d2c576040517fc703cb1200000000000000000000000000000000000000000000000000000000815260040162006d23906200ae85565b60405180910390fd5b602660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bc921a8a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801562006db357600080fd5b505af115801562006dc8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062006dee91908101906200955b565b73ffffffffffffffffffffffffffffffffffffffff1663825ca314878787601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16306040518663ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040162006e6e9594939291906200ac3e565b602060405180830381600087803b15801562006e8957600080fd5b505af115801562006e9e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062006ec491908101906200955b565b91508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff161415151562006f3b576040517fc703cb1200000000000000000000000000000000000000000000000000000000815260040162006f32906200ad0f565b60405180910390fd5b602660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338213fc6836040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040162006fb491906200a4ad565b602060405180830381600087803b15801562006fcf57600080fd5b505af115801562006fe4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506200700a919081019062009940565b5081925050509392505050565b6000601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e92139da6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015620070a057600080fd5b505af1158015620070b5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620070db91908101906200955b565b905090565b600f8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156200717a5780601f106200714e576101008083540402835291602001916200717a565b820191906000526020600020905b8154815290600101906020018083116200715c57829003601f168201915b505050505081565b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156200721c5780601f10620071f0576101008083540402835291602001916200721c565b820191906000526020600020905b815481529060010190602001808311620071fe57829003601f168201915b505050505081565b60003073ffffffffffffffffffffffffffffffffffffffff1663d2eef3a1336040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016200727d91906200a4ad565b602060405180830381600087803b1580156200729857600080fd5b505af1158015620072ad573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620072d3919081019062009940565b151562007317576040517fc703cb120000000000000000000000000000000000000000000000000000000081526004016200730e906200ae41565b60405180910390fd5b601f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638b9b8e5c836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016200739091906200a4ad565b602060405180830381600087803b158015620073ab57600080fd5b505af1158015620073c0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620073e6919081019062009940565b9050919050565b600e8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620074875780601f106200745b5761010080835404028352916020019162007487565b820191906000526020600020905b8154815290600101906020018083116200746957829003601f168201915b505050505081565b606080600080620074aa8684620076e490919063ffffffff16565b9250601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cfe3b125601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1630620075c160038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620075ac5780601f106200758057610100808354040283529160200191620075ac565b820191906000526020600020905b8154815290600101906020018083116200758e57829003601f168201915b50505050508b620076e490919063ffffffff16565b878a6040518663ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401620076019594939291906200a9a5565b6040805180830381600087803b1580156200761b57600080fd5b505af115801562007630573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062007656919081019062009785565b8092508193505050801515620076a3576040517fc703cb120000000000000000000000000000000000000000000000000000000081526004016200769a906200ad97565b60405180910390fd5b620076b986601b62007c3190919063ffffffff16565b935050505092915050565b6060620076dc83620076d68462008a88565b62008b6c565b905092915050565b6060620076f2838362008b6c565b905092915050565b6000808460000160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905060008111156200786c577fde7bfb2ec9d489d20ec2a1e43e3bce0b0c89c17611aa8c2e7ff127b514cbf29232336040805190810160405280600681526020017f4d4f444946590000000000000000000000000000000000000000000000000000815250878960000160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101604051620077ff9594939291906200a588565b60405180910390a1828560000160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001019080519060200190620078619291906200907d565b5060019150620079a4565b828560000160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffff","","2083101515620088b557805182526020820191506020810190506020830392506200888e565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600001549050600081111562008902576000915062008a72565b8285600001856040518082805190602001908083835b6020831015156200893f578051825260208201915060208101905060208303925062008918565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060010190805190602001906200898a9291906200907d565b50846001018054809190600101620089a3919062009190565b90506001810185600001856040518082805190602001908083835b602083101515620089e55780518252602082019150602081019050602083039250620089be565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206000018190555083856001018281548110151562008a3257fe5b9060005260206000209060020201600001908051906020019062008a589291906200907d565b508460020160008154809291906001019190505550600191505b509392505050565b600081600201549050919050565b6060600080836c0100000000000000000000000002915060146040519080825280601f01601f19166020018201604052801562008ad45781602001602082028038833980820191505090505b509250600090505b601481101562008b6557818160148110151562008af557fe5b1a7f010000000000000000000000000000000000000000000000000000000000000002838281518110151562008b2757fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505062008adc565b5050919050565b606080606080606060008088955087945084518651016040519080825280601f01601f19166020018201604052801562008bb55781602001602082028038833980820191505090505b50935083925060009150600090505b855181101562008c7b57858181518110151562008bdd57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002838380600101945081518110151562008c3d57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505062008bc4565b600090505b845181101562008d3757848181518110151562008c9957fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002838380600101945081518110151562008cf957fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505062008c80565b83965050505050505092915050565b600081600201549050919050565b606080600080600080600060608860405190808252806020026020018201604052801562008d915781602001602082028038833980820191505090505b5097508860405190808252806020026020018201604052801562008dca57816020015b606081526020019060019003908162008db45790505b509650600093506000925060009550600094508993505b62008ded8b8562008ed1565b1562008ec45762008dff8b8562008ee5565b9150915081888481518110151562008e1357fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505080878481518110151562008e5f57fe5b906020019060200201819052506001830192508580600101965050888610151562008eb05762008e908b8562009015565b945062008e9e8b8662008ed1565b151562008eaa57600094505b62008ec4565b62008ebc8b8562009015565b935062008de1565b5050505093509350935093565b600082600101805490508210905092915050565b60006060836001018381548110151562008efb57fe5b9060005260206000200160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691508360000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620090075780601f1062008fdb5761010080835404028352916020019162009007565b820191906000526020600020905b81548152906001019060200180831162008fe957829003601f168201915b505050505090509250929050565b600081806001019250505b82600101805490508210801562009060575082600101828154811015156200904457fe5b9060005260206000200160000160149054906101000a900460ff165b156200907457818060010192505062009020565b81905092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620090c057805160ff1916838001178555620090f1565b82800160010185558215620090f1579182015b82811115620090f0578251825591602001919060010190620090d3565b5b509050620091009190620091c5565b5090565b8154818355818111156200912e578183600052602060002091820191016200912d9190620091ed565b5b505050565b604051616ddf806200b20f83390190565b50805460018160011615610100020316600290046000825580601f106200916c57506200918d565b601f0160209004906000526020600020908101906200918c9190620091c5565b5b50565b815481835581811115620091c057600202816002028360005260206000209182019101620091bf91906200924a565b5b505050565b620091ea91905b80821115620091e6576000816000905550600101620091cc565b5090565b90565b6200924791905b808211156200924357600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000820160146101000a81549060ff021916905550600101620091f4565b5090565b90565b6200928f91905b808211156200928b57600080820160006200926d919062009144565b6001820160006101000a81549060ff02191690555060020162009251565b5090565b90565b6000620092a082356200b139565b905092915050565b6000620092b682516200b139565b905092915050565b600082601f8301121515620092d257600080fd5b6004620092e9620092e3826200af7a565b6200af4c565b915081838560208402820111156200930057600080fd5b60005b83811015620093345781620093198882620093e9565b84526020840193506020830192505060018101905062009303565b5050505092915050565b600082601f83011215156200935257600080fd5b81356200936962009363826200af9d565b6200af4c565b9150818183526020840193506020810190508360005b83811015620093b35781358601620093988882620093ff565b8452602084019350602083019250506001810190506200937f565b5050505092915050565b6000620093cb82356200b159565b905092915050565b6000620093e182516200b159565b905092915050565b6000620093f782356200b165565b905092915050565b600082601f83011215156200941357600080fd5b81356200942a62009424826200afc6565b6200af4c565b915080825260208301602083018583830111156200944757600080fd5b620094548382846200b1b8565b50505092915050565b600082601f83011215156200947157600080fd5b81356200948862009482826200aff3565b6200af4c565b91508082526020830160208301858383011115620094a557600080fd5b620094b28382846200b1b8565b50505092915050565b600082601f8301121515620094cf57600080fd5b8135620094e6620094e0826200b020565b6200af4c565b915080825260208301602083018583830111156200950357600080fd5b620095108382846200b1b8565b50505092915050565b60006200952782356200b16f565b905092915050565b6000602082840312156200954257600080fd5b6000620095528482850162009292565b91505092915050565b6000602082840312156200956e57600080fd5b60006200957e84828501620092a8565b91505092915050565b600080604083850312156200959b57600080fd5b6000620095ab8582860162009292565b9250506020620095be8582860162009292565b9150509250929050565b600080600060c08486031215620095de57600080fd5b6000620095ee8682870162009292565b9350506020620096018682870162009292565b92505060406200961486828701620092be565b9150509250925092565b60008060a083850312156200963257600080fd5b6000620096428582860162009292565b92505060206200965585828601620092be565b9150509250929050565b6000806000606084860312156200967557600080fd5b6000620096858682870162009292565b935050602084013567ffffffffffffffff811115620096a357600080fd5b620096b1868287016200933e565b925050604084013567ffffffffffffffff811115620096cf57600080fd5b620096dd868287016200933e565b9150509250925092565b60008060008060e08587031215620096fe57600080fd5b60006200970e8782880162009292565b945050602085013567ffffffffffffffff8111156200972c57600080fd5b6200973a878288016200933e565b935050604085013567ffffffffffffffff8111156200975857600080fd5b62009766878288016200933e565b92505060606200977987828801620092be565b91505092959194509250565b600080604083850312156200979957600080fd5b6000620097a985828601620092a8565b9250506020620097bc85828601620093d3565b9150509250929050565b60008060408385031215620097da57600080fd5b6000620097ea8582860162009292565b925050602083013567ffffffffffffffff8111156200980857600080fd5b62009816858286016200945d565b9150509250929050565b600080600060c084860312156200983657600080fd5b6000620098468682870162009292565b935050602084013567ffffffffffffffff8111156200986457600080fd5b62009872868287016200945d565b92505060406200988586828701620092be565b9150509250925092565b","","","","","8091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111d25780601f106111a7576101008083540402835291602001916111d2565b820191906000526020600020905b8154815290600101906020018083116111b557829003601f168201915b50505050508c6133d690919063ffffffff16565b878a6040518663ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016112249594939291906153a5565b6040805180830381600087803b15801561123d57600080fd5b505af1158015611251573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506112759190810190614b10565b80925081935050508015156112bf576040517fc703cb120000000000000000000000000000000000000000000000000000000081526004016112b69061552b565b60405180910390fd5b6112d58787601b6135549092919063ffffffff16565b93505050509392505050565b6000606060008061130d866112ff89866133d690919063ffffffff16565b6133d690919063ffffffff16565b9250601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cfe3b125601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163061141e60048054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561140a5780601f106113df5761010080835404028352916020019161140a565b820191906000526020600020905b8154815290600101906020018083116113ed57829003601f168201915b50505050508c6133d690919063ffffffff16565b878a6040518663ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161145c9594939291906153a5565b6040805180830381600087803b15801561147557600080fd5b505af1158015611489573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506114ad9190810190614b10565b80925081935050508015156114f7576040517fc703cb120000000000000000000000000000000000000000000000000000000081526004016114ee9061556b565b60405180910390fd5b61150d8787601b6137519092919063ffffffff16565b93505050509392505050565b60608060007ff2b3d6f00be579b67419fa36ef89b4d8bb8cf9877e7c4ec33bcd52f165fe7ddb33611548611665565b306040516115589392919061529b565b60405180910390a1831561157b576115706022613aae565b92509250925061158c565b6115856025613aae565b9250925092505b9193909250565b6000602154905090565b6000601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600b8054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561165d5780601f106116325761010080835404028352916020019161165d565b820191906000526020600020905b81548152906001019060200180831161164057829003601f168201915b505050505081565b6000601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638d478f2933601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16306117a160048054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561178d5780601f106117625761010080835404028352916020019161178d565b820191906000526020600020905b81548152906001019060200180831161177057829003601f168201915b5050505050896133d690919063ffffffff16565b6040518563ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016117dc949392919061518d565b602060405180830381600087803b1580156117f657600080fd5b505af115801561180a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061182e9190810190614b75565b151561186f576040517fc703cb120000000000000000000000000000000000000000000000000000000081526004016118669061556b565b60405180910390fd5b6118858383601b6137519092919063ffffffff16565b905092915050565b600a8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156119235780601f106118f857610100808354040283529160200191611923565b820191906000526020600020905b81548152906001019060200180831161190657829003601f168201915b505050505081565b601760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600d8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156119e75780601f106119bc576101008083540402835291602001916119e7565b820191906000526020600020905b8154815290600101906020018083116119ca57829003601f168201915b505050505081565b60018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611a855780601f10611a5a57610100808354040283529160200191611a85565b820191906000526020600020905b815481529060010190602001808311611a6857829003601f168201915b505050505081565b6000601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638d478f2933601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1630611b9f60048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611b8b5780601f10611b6057610100808354040283529160200191611b8b565b820191906000526020600020905b815481529060010190602001808311611b6e57829003601f168201915b5050505050886133d690919063ffffffff16565b6040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611bda949392919061518d565b602060405180830381600087803b158015611bf457600080fd5b505af1158015611c08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611c2c9190810190614b75565b1515611c6d576040517fc703cb12000000000000000000000000000000000000000000000000000000008152600401611c649061558b565b60405180910390fd5b611c8182601b613ae490919063ffffffff16565b9050919050565b60088054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611d1e5780601f10611cf357610100808354040283529160200191611d1e565b820191906000526020600020905b815481529060010190602001808311611d0157829003601f168201915b505050505081565b601860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006060600080611d7886611d6a89866133d690919063ffffffff16565b6133d690919063ffffffff16565b9250601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cfe3b125601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1630611e8960048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611e755780601f10611e4a57610100808354040283529160200191611e75565b820191906000526020600020905b815481529060010190602001808311611e5857829003601f168201915b50505050508c6133d690919063ffffffff16565b878a6040518663ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611ec79594939291906153a5565b6040805180830381600087803b158015611ee057600080fd5b505af1158015611ef4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611f189190810190614b10565b8092508193505050801515611f62576040517fc703cb12000000000000000000000000000000000000000000000000000000008152600401611f59906154cb565b60405180910390fd5b611f788787601b613d369092919063ffffffff16565b93505050509392505050565b60078054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561201a5780601f10611fef5761010080835404028352916020019161201a565b820191906000526020600020905b815481529060010190602001808311611ffd57829003601f168201915b505050505081565b6000601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638d478f2933601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163061213460048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156121205780601f106120f557610100808354040283529160200191612120565b820191906000526020600020905b81548152906001019060200180831161210357829003601f168201915b5050505050896133d690919063ffffffff16565b6040518563ffffffff167c010000000000000000000000000000000000000000000000","","","","52604082019050919050565b61516c816156e6565b82525050565b60006020820190506151876000830184614d5a565b92915050565b60006080820190506151a26000830187614d5a565b6151af6020830186614d5a565b6151bc6040830185614d5a565b81810360608301526151ce8184614e2d565b905095945050505050565b600060a0820190506151ee6000830188614d5a565b6151fb6020830187614d5a565b818103604083015261520d8186614e63565b905061521c6060830185614d5a565b6152296080830184614d5a565b9695505050505050565b600060a0820190506152486000830188614d5a565b6152556020830187614d5a565b81810360408301526152678186614e63565b9050818103606083015261527b8185614e2d565b9050818103608083015261528f8184614e99565b90509695505050505050565b60006080820190506152b06000830186614d5a565b6152bd6020830185614d5a565b6152ca6040830184614f1f565b81810360608301526152db81614fab565b9050949350505050565b6000610100820190506152fb6000830187614d5a565b6153086020830186614f1f565b818103604083015261531981614f74565b9050818103606083015261532d8185614e2d565b905061533c6080830184614dc4565b95945050505050565b60006101008201905061535b6000830187614d5a565b6153686020830186614f1f565b818103604083015261537981614fab565b9050818103606083015261538d8185614e2d565b905061539c6080830184614dc4565b95945050505050565b6000610100820190506153bb6000830188614d5a565b6153c86020830187614f2e565b81810360408301526153da8186614e2d565b905081810360608301526153ee8185614e2d565b90506153fd6080830184614dc4565b9695505050505050565b600060608201905081810360008301526154218186614d69565b905081810360208301526154358185614d69565b90506154446040830184615163565b949350505050565b60006020820190506154616000830184614e0f565b92915050565b600060208201905081810360008301526154818184614e63565b905092915050565b600060208201905081810360008301526154a38184614e2d565b905092915050565b600060208201905081810360008301526154c481614f3d565b9050919050565b600060208201905081810360008301526154e481614fe2565b9050919050565b6000602082019050818103600083015261550481615019565b9050919050565b6000602082019050818103600083015261552481615050565b9050919050565b6000602082019050818103600083015261554481615087565b9050919050565b60006020820190508181036000830152615564816150be565b9050919050565b60006020820190508181036000830152615584816150f5565b9050919050565b600060208201905081810360008301526155a48161512c565b9050919050565b60006020820190506155c06000830184615163565b92915050565b6000604051905081810181811067ffffffffffffffff821117156155e957600080fd5b8060405250919050565b600067ffffffffffffffff82111561560a57600080fd5b602082029050919050565b600067ffffffffffffffff82111561562c57600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b6000819050919050565b60008160005260206000209050919050565b600081519050919050565b600060049050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b6000615731826156b0565b9050919050565b6000615743826156b0565b9050919050565b82818337600083830152505050565b60005b8381101561577757808201518184015260208101905061575c565b83811115615786576000848401525b50505050565b6000601f19601f8301169050919050565b6060600080836c0100000000000000000000000002915060146040519080825280601f01601f1916602001820160405280156157e85781602001602082028038833980820191505090505b509250600090505b601481101561587557818160148110151561580757fe5b1a7f010000000000000000000000000000000000000000000000000000000000000002838281518110151561583857fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506157f0565b50509190505600a265627a7a7230582067c0c22dd56c5e579b631abca06ae57eba5f8435d59babd9b42692c850dd717f6c6578706572696d656e74616cf50037a265627a7a72305820cae3c0c608facaa6a8a8575660617a762c62aaf98a75bf338b12bd29609917fc6c6578706572696d656e74616cf50037"};

    public static final String SM_BINARY = String.join("", SM_BINARY_ARRAY);

    public static final String[] ABI_ARRAY = {"[{\"constant\":true,\"inputs\":[],\"name\":\"ROLE_R\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"OPENING_BANK\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ROLE_W\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAllAccounts\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DATA\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"updateNonce\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"OWNER\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BALANCE\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"externalAccount\",\"type\":\"address\"}],\"name\":\"removeAdmin\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"oldAccount\",\"type\":\"address\"},{\"name\":\"newAccount\",\"type\":\"address\"},{\"name\":\"sign\",\"type\":\"bytes32[4]\"}],\"name\":\"changeExternalAccountWithSign\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"key\",\"type\":\"bytes\"},{\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"insert\",\"outputs\":[{\"name\":\"replaced\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RECORD\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PUB_KEY\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ADMIN\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MODE_R\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"externalAccount\",\"type\":\"address\"},{\"name\":\"sign\",\"type\":\"bytes32[4]\"}],\"name\":\"freezeWithSign\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"internalAccount\",\"type\":\"address\"}],\"name\":\"isInternalAccountAdmin\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TYPE_ADMIN\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TYPE_OWNER\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"key\",\"type\":\"bytes\"},{\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"add\",\"outputs\":[{\"name\":\"replaced\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"externalAccount\",\"type\":\"address\"}],\"name\":\"unfreeze\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getExternalAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"externalAccount\",\"type\":\"address\"}],\"name\":\"isExternalAccountAdmin\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"externalAccount\",\"type\":\"address\"},{\"name\":\"keyList\",\"type\":\"bytes[]\"},{\"name\":\"valueList\",\"type\":\"bytes[]\"},{\"name\":\"sign\",\"type\":\"bytes32[4]\"}],\"name\":\"createAccountWithSign\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"externalAccount\",\"type\":\"address\"}],\"name\":\"cancel\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"externalAccount\",\"type\":\"address\"},{\"name\":\"sign\",\"type\":\"bytes32[4]\"}],\"name\":\"cancelWithSign\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOrg\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MODE_W\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"key\",\"type\":\"bytes\"}],\"name\":\"remove\",\"outputs\":[{\"name\":\"replaced\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"OWNER_ADDR\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"isFungible\",\"type\":\"bool\"}],\"name\":\"getAllAssets\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ASSETS\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"USER_ADDR\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"externalAccount\",\"type\":\"address\"},{\"name\":\"sign\",\"type\":\"bytes32[4]\"}],\"name\":\"unfreezeWithSign\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"externalAccount\",\"type\":\"address\"},{\"name\":\"keyList\",\"type\":\"bytes[]\"},{\"name\":\"valueList\",\"type\":\"bytes[]\"}],\"name\":\"createAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"key\",\"type\":\"bytes\"},{\"name\":\"sign\",\"type\":\"bytes32[4]\"}],\"name\":\"removeWithSign\",\"outputs\":[{\"name\":\"replaced\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"USER\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"key\",\"type\":\"bytes\"},{\"name\":\"sign\",\"type\":\"bytes32[4]\"}],\"name\":\"getWithSign\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"externalAccount\",\"type\":\"address\"}],\"name\":\"freeze\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"externalAccount\",\"type\":\"address\"},{\"name\":\"role\",\"type\":\"bytes\"}],\"name\":\"addAdmin\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"externalAccount\",\"type\":\"address\"},{\"name\":\"role\",\"type\":\"bytes\"},{\"name\":\"sign\",\"type\":\"bytes32[4]\"}],\"name\":\"addAdminWithSign\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"size\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"OPERATOR\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getAssetPools\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{","\"name\":\"externalAccount\",\"type\":\"address\"},{\"name\":\"sign\",\"type\":\"bytes32[4]\"}],\"name\":\"removeAdminWithSign\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ROLE\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"oldAccount\",\"type\":\"address\"},{\"name\":\"newAccount\",\"type\":\"address\"}],\"name\":\"changeExternalAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"key\",\"type\":\"bytes\"},{\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"set\",\"outputs\":[{\"name\":\"replaced\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getInnerAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"listAdmins\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"},{\"name\":\"\",\"type\":\"bytes[]\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"key\",\"type\":\"bytes\"},{\"name\":\"value\",\"type\":\"bytes\"},{\"name\":\"sign\",\"type\":\"bytes32[4]\"}],\"name\":\"addWithSign\",\"outputs\":[{\"name\":\"replaced\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getProjectTerm\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"externalAccount\",\"type\":\"address\"},{\"name\":\"assetName\",\"type\":\"string\"},{\"name\":\"isFungible\",\"type\":\"bool\"},{\"name\":\"sign\",\"type\":\"bytes32[4]\"}],\"name\":\"createAssetWithSign\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ADMIN_ADDR\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAccountManager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ID\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ADDR\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TYPE_PUBLIC\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"OPERATOR_ADDR\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TYPE\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAuthCenter\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAuthManager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"key\",\"type\":\"bytes\"},{\"name\":\"value\",\"type\":\"bytes\"},{\"name\":\"sign\",\"type\":\"bytes32[4]\"}],\"name\":\"insertWithSign\",\"outputs\":[{\"name\":\"replaced\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getNonce\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"key\",\"type\":\"bytes\"}],\"name\":\"get\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"key\",\"type\":\"bytes\"},{\"name\":\"value\",\"type\":\"bytes\"},{\"name\":\"sign\",\"type\":\"bytes32[4]\"}],\"name\":\"setWithSign\",\"outputs\":[{\"name\":\"replaced\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"currencyName\",\"type\":\"string\"},{\"name\":\"currencySymbol\",\"type\":\"string\"},{\"name\":\"decimals\",\"type\":\"uint8\"}],\"name\":\"createCurrency\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"KEY_ALL\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"createAssetPool\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"projectAddress\",\"type\":\"address\"},{\"name\":\"authCenterAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]"};

    public static final String ABI = String.join("", ABI_ARRAY);

    public static final String FUNC_ROLE_R = "ROLE_R";

    public static final String FUNC_OPENING_BANK = "OPENING_BANK";

    public static final String FUNC_ROLE_W = "ROLE_W";

    public static final String FUNC_GETALLACCOUNTS = "getAllAccounts";

    public static final String FUNC_DATA = "DATA";

    public static final String FUNC_UPDATENONCE = "updateNonce";

    public static final String FUNC_OWNER = "OWNER";

    public static final String FUNC_BALANCE = "BALANCE";

    public static final String FUNC_REMOVEADMIN = "removeAdmin";

    public static final String FUNC_CHANGEEXTERNALACCOUNTWITHSIGN = "changeExternalAccountWithSign";

    public static final String FUNC_INSERT = "insert";

    public static final String FUNC_RECORD = "RECORD";

    public static final String FUNC_PUB_KEY = "PUB_KEY";

    public static final String FUNC_ADMIN = "ADMIN";

    public static final String FUNC_MODE_R = "MODE_R";

    public static final String FUNC_FREEZEWITHSIGN = "freezeWithSign";

    public static final String FUNC_ISINTERNALACCOUNTADMIN = "isInternalAccountAdmin";

    public static final String FUNC_TYPE_ADMIN = "TYPE_ADMIN";

    public static final String FUNC_TYPE_OWNER = "TYPE_OWNER";

    public static final String FUNC_ADD = "add";

    public static final String FUNC_UNFREEZE = "unfreeze";

    public static final String FUNC_GETEXTERNALACCOUNT = "getExternalAccount";

    public static final String FUNC_ISEXTERNALACCOUNTADMIN = "isExternalAccountAdmin";

    public static final String FUNC_CREATEACCOUNTWITHSIGN = "createAccountWithSign";

    public static final String FUNC_CANCEL = "cancel";

    public static final String FUNC_CANCELWITHSIGN = "cancelWithSign";

    public static final String FUNC_GETORG = "getOrg";

    public static final String FUNC_MODE_W = "MODE_W";

    public static final String FUNC_REMOVE = "remove";

    public static final String FUNC_OWNER_ADDR = "OWNER_ADDR";

    public static final String FUNC_GETALLASSETS = "getAllAssets";

    public static final String FUNC_ASSETS = "ASSETS";

    public static final String FUNC_USER_ADDR = "USER_ADDR";

    public static final String FUNC_UNFREEZEWITHSIGN = "unfreezeWithSign";

    public static final String FUNC_CREATEACCOUNT = "createAccount";

    public static final String FUNC_REMOVEWITHSIGN = "removeWithSign";

    public static final String FUNC_USER = "USER";

    public static final String FUNC_GETWITHSIGN = "getWithSign";

    public static final String FUNC_FREEZE = "freeze";

    public static final String FUNC_ADDADMIN = "addAdmin";

    public static final String FUNC_ADDADMINWITHSIGN = "addAdminWithSign";

    public static final String FUNC_SIZE = "size";

    public static final String FUNC_OPERATOR = "OPERATOR";

    public static final String FUNC_GETASSETPOOLS = "getAssetPools";

    public static final String FUNC_REMOVEADMINWITHSIGN = "removeAdminWithSign";

    public static final String FUNC_ROLE = "ROLE";

    public static final String FUNC_CHANGEEXTERNALACCOUNT = "changeExternalAccount";

    public static final String FUNC_SET = "set";

    public static final String FUNC_GETINNERACCOUNT = "getInnerAccount";

    public static final String FUNC_LISTADMINS = "listAdmins";

    public static final String FUNC_ADDWITHSIGN = "addWithSign";

    public static final String FUNC_GETPROJECTTERM = "getProjectTerm";

    public static final String FUNC_CREATEASSETWITHSIGN = "createAssetWithSign";

    public static final String FUNC_ADMIN_ADDR = "ADMIN_ADDR";

    public static final String FUNC_GETACCOUNTMANAGER = "getAccountManager";

    public static final String FUNC_ID = "ID";

    public static final String FUNC_ADDR = "ADDR";

    public static final String FUNC_TYPE_PUBLIC = "TYPE_PUBLIC";

    public static final String FUNC_OPERATOR_ADDR = "OPERATOR_ADDR";

    public static final String FUNC_TYPE = "TYPE";

    public static final String FUNC_GETAUTHCENTER = "getAuthCenter";

    public static final String FUNC_GETAUTHMANAGER = "getAuthManager";

    public static final String FUNC_INSERTWITHSIGN = "insertWithSign";

    public static final String FUNC_GETNONCE = "getNonce";

    public static final String FUNC_GET = "get";

    public static final String FUNC_SETWITHSIGN = "setWithSign";

    public static final String FUNC_CREATECURRENCY = "createCurrency";

    public static final String FUNC_KEY_ALL = "KEY_ALL";

    public static final String FUNC_CREATEASSETPOOL = "createAssetPool";

    public static final String FUNC_GETACCOUNT = "getAccount";

    protected Organization(String contractAddress, Client client, CryptoKeyPair credential) {
        super(getBinary(client.getCryptoSuite()), contractAddress, client, credential);
    }

    public static String getBinary(CryptoSuite cryptoSuite) {
        return (cryptoSuite.getCryptoTypeConfig() == CryptoType.ECDSA_TYPE ? BINARY : SM_BINARY);
    }

    public byte[] ROLE_R() throws ContractException {
        final Function function = new Function(FUNC_ROLE_R, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public byte[] OPENING_BANK() throws ContractException {
        final Function function = new Function(FUNC_OPENING_BANK, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public byte[] ROLE_W() throws ContractException {
        final Function function = new Function(FUNC_ROLE_W, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public List getAllAccounts() throws ContractException {
        final Function function = new Function(FUNC_GETALLACCOUNTS, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Address>>() {}));
        List<Type> result = (List<Type>) executeCallWithSingleValueReturn(function, List.class);
        return convertToNative(result);
    }

    public byte[] DATA() throws ContractException {
        final Function function = new Function(FUNC_DATA, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public TransactionReceipt updateNonce() {
        final Function function = new Function(
                FUNC_UPDATENONCE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void updateNonce(TransactionCallback callback) {
        final Function function = new Function(
                FUNC_UPDATENONCE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForUpdateNonce() {
        final Function function = new Function(
                FUNC_UPDATENONCE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<BigInteger> getUpdateNonceOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_UPDATENONCE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public byte[] OWNER() throws ContractException {
        final Function function = new Function(FUNC_OWNER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public byte[] BALANCE() throws ContractException {
        final Function function = new Function(FUNC_BALANCE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public TransactionReceipt removeAdmin(String externalAccount) {
        final Function function = new Function(
                FUNC_REMOVEADMIN, 
                Arrays.<Type>asList(new Address(externalAccount)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void removeAdmin(String externalAccount, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_REMOVEADMIN, 
                Arrays.<Type>asList(new Address(externalAccount)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForRemoveAdmin(String externalAccount) {
        final Function function = new Function(
                FUNC_REMOVEADMIN, 
                Arrays.<Type>asList(new Address(externalAccount)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<String> getRemoveAdminInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_REMOVEADMIN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>(

                (String) results.get(0).getValue()
                );
    }

    public Tuple1<Boolean> getRemoveAdminOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_REMOVEADMIN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<Boolean>(

                (Boolean) results.get(0).getValue()
                );
    }

    public TransactionReceipt changeExternalAccountWithSign(String oldAccount, String newAccount, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_CHANGEEXTERNALACCOUNTWITHSIGN, 
                Arrays.<Type>asList(new Address(oldAccount),
                new Address(newAccount),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void changeExternalAccountWithSign(String oldAccount, String newAccount, List<byte[]> sign, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_CHANGEEXTERNALACCOUNTWITHSIGN, 
                Arrays.<Type>asList(new Address(oldAccount),
                new Address(newAccount),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForChangeExternalAccountWithSign(String oldAccount, String newAccount, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_CHANGEEXTERNALACCOUNTWITHSIGN, 
                Arrays.<Type>asList(new Address(oldAccount),
                new Address(newAccount),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple3<String, String, List<byte[]>> getChangeExternalAccountWithSignInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_CHANGEEXTERNALACCOUNTWITHSIGN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Address>() {}, new TypeReference<StaticArray4<Bytes32>>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple3<String, String, List<byte[]>>(

                (String) results.get(0).getValue(), 
                (String) results.get(1).getValue(), 
                convertToNative((List<Bytes32>) results.get(2).getValue())
                );
    }

    public Tuple1<Boolean> getChangeExternalAccountWithSignOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_CHANGEEXTERNALACCOUNTWITHSIGN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<Boolean>(

                (Boolean) results.get(0).getValue()
                );
    }

    public TransactionReceipt insert(byte[] key, byte[] value) {
        final Function function = new Function(
                FUNC_INSERT, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new DynamicBytes(value)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void insert(byte[] key, byte[] value, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_INSERT, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new DynamicBytes(value)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForInsert(byte[] key, byte[] value) {
        final Function function = new Function(
                FUNC_INSERT, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new DynamicBytes(value)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple2<byte[], byte[]> getInsertInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_INSERT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}, new TypeReference<DynamicBytes>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<byte[], byte[]>(

                (byte[]) results.get(0).getValue(), 
                (byte[]) results.get(1).getValue()
                );
    }

    public Tuple1<Boolean> getInsertOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_INSERT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<Boolean>(

                (Boolean) results.get(0).getValue()
                );
    }

    public byte[] RECORD() throws ContractException {
        final Function function = new Function(FUNC_RECORD, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public byte[] PUB_KEY() throws ContractException {
        final Function function = new Function(FUNC_PUB_KEY, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public byte[] ADMIN() throws ContractException {
        final Function function = new Function(FUNC_ADMIN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public byte[] MODE_R() throws ContractException {
        final Function function = new Function(FUNC_MODE_R, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public TransactionReceipt freezeWithSign(String externalAccount, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_FREEZEWITHSIGN, 
                Arrays.<Type>asList(new Address(externalAccount),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void freezeWithSign(String externalAccount, List<byte[]> sign, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_FREEZEWITHSIGN, 
                Arrays.<Type>asList(new Address(externalAccount),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForFreezeWithSign(String externalAccount, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_FREEZEWITHSIGN, 
                Arrays.<Type>asList(new Address(externalAccount),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple2<String, List<byte[]>> getFreezeWithSignInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_FREEZEWITHSIGN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<StaticArray4<Bytes32>>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<String, List<byte[]>>(

                (String) results.get(0).getValue(), 
                convertToNative((List<Bytes32>) results.get(1).getValue())
                );
    }

    public Tuple1<Boolean> getFreezeWithSignOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_FREEZEWITHSIGN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<Boolean>(

                (Boolean) results.get(0).getValue()
                );
    }

    public Boolean isInternalAccountAdmin(String internalAccount) throws ContractException {
        final Function function = new Function(FUNC_ISINTERNALACCOUNTADMIN, 
                Arrays.<Type>asList(new Address(internalAccount)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeCallWithSingleValueReturn(function, Boolean.class);
    }

    public byte[] TYPE_ADMIN() throws ContractException {
        final Function function = new Function(FUNC_TYPE_ADMIN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public byte[] TYPE_OWNER() throws ContractException {
        final Function function = new Function(FUNC_TYPE_OWNER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public TransactionReceipt add(byte[] key, byte[] value) {
        final Function function = new Function(
                FUNC_ADD, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new DynamicBytes(value)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void add(byte[] key, byte[] value, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_ADD, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new DynamicBytes(value)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForAdd(byte[] key, byte[] value) {
        final Function function = new Function(
                FUNC_ADD, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new DynamicBytes(value)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple2<byte[], byte[]> getAddInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_ADD, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}, new TypeReference<DynamicBytes>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<byte[], byte[]>(

                (byte[]) results.get(0).getValue(), 
                (byte[]) results.get(1).getValue()
                );
    }

    public Tuple1<Boolean> getAddOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_ADD, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<Boolean>(

                (Boolean) results.get(0).getValue()
                );
    }

    public TransactionReceipt unfreeze(String externalAccount) {
        final Function function = new Function(
                FUNC_UNFREEZE, 
                Arrays.<Type>asList(new Address(externalAccount)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void unfreeze(String externalAccount, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_UNFREEZE, 
                Arrays.<Type>asList(new Address(externalAccount)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForUnfreeze(String externalAccount) {
        final Function function = new Function(
                FUNC_UNFREEZE, 
                Arrays.<Type>asList(new Address(externalAccount)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<String> getUnfreezeInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_UNFREEZE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>(

                (String) results.get(0).getValue()
                );
    }

    public Tuple1<Boolean> getUnfreezeOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_UNFREEZE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<Boolean>(

                (Boolean) results.get(0).getValue()
                );
    }

    public String getExternalAccount(String userAddress) throws ContractException {
        final Function function = new Function(FUNC_GETEXTERNALACCOUNT, 
                Arrays.<Type>asList(new Address(userAddress)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public Boolean isExternalAccountAdmin(String externalAccount) throws ContractException {
        final Function function = new Function(FUNC_ISEXTERNALACCOUNTADMIN, 
                Arrays.<Type>asList(new Address(externalAccount)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeCallWithSingleValueReturn(function, Boolean.class);
    }

    public TransactionReceipt createAccountWithSign(String externalAccount, List<byte[]> keyList, List<byte[]> valueList, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_CREATEACCOUNTWITHSIGN, 
                Arrays.<Type>asList(new Address(externalAccount),
                keyList.isEmpty()? DynamicArray.empty("bytes[]"):new DynamicArray<DynamicBytes>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(keyList, DynamicBytes.class)),
                valueList.isEmpty()? DynamicArray.empty("bytes[]"):new DynamicArray<DynamicBytes>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(valueList, DynamicBytes.class)),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void createAccountWithSign(String externalAccount, List<byte[]> keyList, List<byte[]> valueList, List<byte[]> sign, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_CREATEACCOUNTWITHSIGN, 
                Arrays.<Type>asList(new Address(externalAccount),
                keyList.isEmpty()? DynamicArray.empty("bytes[]"):new DynamicArray<DynamicBytes>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(keyList, DynamicBytes.class)),
                valueList.isEmpty()? DynamicArray.empty("bytes[]"):new DynamicArray<DynamicBytes>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(valueList, DynamicBytes.class)),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForCreateAccountWithSign(String externalAccount, List<byte[]> keyList, List<byte[]> valueList, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_CREATEACCOUNTWITHSIGN, 
                Arrays.<Type>asList(new Address(externalAccount),
                keyList.isEmpty()? DynamicArray.empty("bytes[]"):new DynamicArray<DynamicBytes>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(keyList, DynamicBytes.class)),
                valueList.isEmpty()? DynamicArray.empty("bytes[]"):new DynamicArray<DynamicBytes>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(valueList, DynamicBytes.class)),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple4<String, List<byte[]>, List<byte[]>, List<byte[]>> getCreateAccountWithSignInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_CREATEACCOUNTWITHSIGN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<DynamicArray<DynamicBytes>>() {}, new TypeReference<DynamicArray<DynamicBytes>>() {}, new TypeReference<StaticArray4<Bytes32>>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple4<String, List<byte[]>, List<byte[]>, List<byte[]>>(

                (String) results.get(0).getValue(), 
                convertToNative((List<DynamicBytes>) results.get(1).getValue()), 
                convertToNative((List<DynamicBytes>) results.get(2).getValue()), 
                convertToNative((List<Bytes32>) results.get(3).getValue())
                );
    }

    public Tuple2<Boolean, String> getCreateAccountWithSignOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_CREATEACCOUNTWITHSIGN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}, new TypeReference<Address>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<Boolean, String>(

                (Boolean) results.get(0).getValue(), 
                (String) results.get(1).getValue()
                );
    }

    public TransactionReceipt cancel(String externalAccount) {
        final Function function = new Function(
                FUNC_CANCEL, 
                Arrays.<Type>asList(new Address(externalAccount)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void cancel(String externalAccount, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_CANCEL, 
                Arrays.<Type>asList(new Address(externalAccount)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForCancel(String externalAccount) {
        final Function function = new Function(
                FUNC_CANCEL, 
                Arrays.<Type>asList(new Address(externalAccount)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<String> getCancelInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_CANCEL, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>(

                (String) results.get(0).getValue()
                );
    }

    public Tuple1<Boolean> getCancelOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_CANCEL, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<Boolean>(

                (Boolean) results.get(0).getValue()
                );
    }

    public TransactionReceipt cancelWithSign(String externalAccount, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_CANCELWITHSIGN, 
                Arrays.<Type>asList(new Address(externalAccount),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void cancelWithSign(String externalAccount, List<byte[]> sign, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_CANCELWITHSIGN, 
                Arrays.<Type>asList(new Address(externalAccount),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForCancelWithSign(String externalAccount, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_CANCELWITHSIGN, 
                Arrays.<Type>asList(new Address(externalAccount),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple2<String, List<byte[]>> getCancelWithSignInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_CANCELWITHSIGN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<StaticArray4<Bytes32>>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<String, List<byte[]>>(

                (String) results.get(0).getValue(), 
                convertToNative((List<Bytes32>) results.get(1).getValue())
                );
    }

    public Tuple1<Boolean> getCancelWithSignOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_CANCELWITHSIGN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<Boolean>(

                (Boolean) results.get(0).getValue()
                );
    }

    public String getOrg() throws ContractException {
        final Function function = new Function(FUNC_GETORG, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public byte[] MODE_W() throws ContractException {
        final Function function = new Function(FUNC_MODE_W, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public TransactionReceipt remove(byte[] key) {
        final Function function = new Function(
                FUNC_REMOVE, 
                Arrays.<Type>asList(new DynamicBytes(key)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void remove(byte[] key, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_REMOVE, 
                Arrays.<Type>asList(new DynamicBytes(key)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForRemove(byte[] key) {
        final Function function = new Function(
                FUNC_REMOVE, 
                Arrays.<Type>asList(new DynamicBytes(key)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<byte[]> getRemoveInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_REMOVE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<byte[]>(

                (byte[]) results.get(0).getValue()
                );
    }

    public Tuple1<Boolean> getRemoveOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_REMOVE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<Boolean>(

                (Boolean) results.get(0).getValue()
                );
    }

    public String OWNER_ADDR() throws ContractException {
        final Function function = new Function(FUNC_OWNER_ADDR, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public List getAllAssets(Boolean isFungible) throws ContractException {
        final Function function = new Function(FUNC_GETALLASSETS, 
                Arrays.<Type>asList(new Bool(isFungible)),
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Address>>() {}));
        List<Type> result = (List<Type>) executeCallWithSingleValueReturn(function, List.class);
        return convertToNative(result);
    }

    public byte[] ASSETS() throws ContractException {
        final Function function = new Function(FUNC_ASSETS, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public String USER_ADDR() throws ContractException {
        final Function function = new Function(FUNC_USER_ADDR, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public TransactionReceipt unfreezeWithSign(String externalAccount, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_UNFREEZEWITHSIGN, 
                Arrays.<Type>asList(new Address(externalAccount),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void unfreezeWithSign(String externalAccount, List<byte[]> sign, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_UNFREEZEWITHSIGN, 
                Arrays.<Type>asList(new Address(externalAccount),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForUnfreezeWithSign(String externalAccount, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_UNFREEZEWITHSIGN, 
                Arrays.<Type>asList(new Address(externalAccount),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple2<String, List<byte[]>> getUnfreezeWithSignInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_UNFREEZEWITHSIGN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<StaticArray4<Bytes32>>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<String, List<byte[]>>(

                (String) results.get(0).getValue(), 
                convertToNative((List<Bytes32>) results.get(1).getValue())
                );
    }

    public Tuple1<Boolean> getUnfreezeWithSignOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_UNFREEZEWITHSIGN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<Boolean>(

                (Boolean) results.get(0).getValue()
                );
    }

    public TransactionReceipt createAccount(String externalAccount, List<byte[]> keyList, List<byte[]> valueList) {
        final Function function = new Function(
                FUNC_CREATEACCOUNT, 
                Arrays.<Type>asList(new Address(externalAccount),
                keyList.isEmpty()? DynamicArray.empty("bytes[]"):new DynamicArray<DynamicBytes>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(keyList, DynamicBytes.class)),
                valueList.isEmpty()? DynamicArray.empty("bytes[]"):new DynamicArray<DynamicBytes>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(valueList, DynamicBytes.class))),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void createAccount(String externalAccount, List<byte[]> keyList, List<byte[]> valueList, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_CREATEACCOUNT, 
                Arrays.<Type>asList(new Address(externalAccount),
                keyList.isEmpty()? DynamicArray.empty("bytes[]"):new DynamicArray<DynamicBytes>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(keyList, DynamicBytes.class)),
                valueList.isEmpty()? DynamicArray.empty("bytes[]"):new DynamicArray<DynamicBytes>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(valueList, DynamicBytes.class))),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForCreateAccount(String externalAccount, List<byte[]> keyList, List<byte[]> valueList) {
        final Function function = new Function(
                FUNC_CREATEACCOUNT, 
                Arrays.<Type>asList(new Address(externalAccount),
                keyList.isEmpty()? DynamicArray.empty("bytes[]"):new DynamicArray<DynamicBytes>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(keyList, DynamicBytes.class)),
                valueList.isEmpty()? DynamicArray.empty("bytes[]"):new DynamicArray<DynamicBytes>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(valueList, DynamicBytes.class))),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple3<String, List<byte[]>, List<byte[]>> getCreateAccountInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_CREATEACCOUNT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<DynamicArray<DynamicBytes>>() {}, new TypeReference<DynamicArray<DynamicBytes>>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple3<String, List<byte[]>, List<byte[]>>(

                (String) results.get(0).getValue(), 
                convertToNative((List<DynamicBytes>) results.get(1).getValue()), 
                convertToNative((List<DynamicBytes>) results.get(2).getValue())
                );
    }

    public Tuple2<Boolean, String> getCreateAccountOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_CREATEACCOUNT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}, new TypeReference<Address>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<Boolean, String>(

                (Boolean) results.get(0).getValue(), 
                (String) results.get(1).getValue()
                );
    }

    public TransactionReceipt removeWithSign(byte[] key, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_REMOVEWITHSIGN, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void removeWithSign(byte[] key, List<byte[]> sign, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_REMOVEWITHSIGN, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForRemoveWithSign(byte[] key, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_REMOVEWITHSIGN, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple2<byte[], List<byte[]>> getRemoveWithSignInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_REMOVEWITHSIGN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}, new TypeReference<StaticArray4<Bytes32>>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<byte[], List<byte[]>>(

                (byte[]) results.get(0).getValue(), 
                convertToNative((List<Bytes32>) results.get(1).getValue())
                );
    }

    public Tuple1<Boolean> getRemoveWithSignOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_REMOVEWITHSIGN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<Boolean>(

                (Boolean) results.get(0).getValue()
                );
    }

    public byte[] USER() throws ContractException {
        final Function function = new Function(FUNC_USER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public byte[] getWithSign(byte[] key, List<byte[]> sign) throws ContractException {
        final Function function = new Function(FUNC_GETWITHSIGN, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public TransactionReceipt freeze(String externalAccount) {
        final Function function = new Function(
                FUNC_FREEZE, 
                Arrays.<Type>asList(new Address(externalAccount)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void freeze(String externalAccount, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_FREEZE, 
                Arrays.<Type>asList(new Address(externalAccount)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForFreeze(String externalAccount) {
        final Function function = new Function(
                FUNC_FREEZE, 
                Arrays.<Type>asList(new Address(externalAccount)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<String> getFreezeInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_FREEZE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>(

                (String) results.get(0).getValue()
                );
    }

    public Tuple1<Boolean> getFreezeOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_FREEZE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<Boolean>(

                (Boolean) results.get(0).getValue()
                );
    }

    public TransactionReceipt addAdmin(String externalAccount, byte[] role) {
        final Function function = new Function(
                FUNC_ADDADMIN, 
                Arrays.<Type>asList(new Address(externalAccount),
                new DynamicBytes(role)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void addAdmin(String externalAccount, byte[] role, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_ADDADMIN, 
                Arrays.<Type>asList(new Address(externalAccount),
                new DynamicBytes(role)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForAddAdmin(String externalAccount, byte[] role) {
        final Function function = new Function(
                FUNC_ADDADMIN, 
                Arrays.<Type>asList(new Address(externalAccount),
                new DynamicBytes(role)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple2<String, byte[]> getAddAdminInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_ADDADMIN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<DynamicBytes>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<String, byte[]>(

                (String) results.get(0).getValue(), 
                (byte[]) results.get(1).getValue()
                );
    }

    public Tuple1<Boolean> getAddAdminOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_ADDADMIN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<Boolean>(

                (Boolean) results.get(0).getValue()
                );
    }

    public TransactionReceipt addAdminWithSign(String externalAccount, byte[] role, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_ADDADMINWITHSIGN, 
                Arrays.<Type>asList(new Address(externalAccount),
                new DynamicBytes(role),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void addAdminWithSign(String externalAccount, byte[] role, List<byte[]> sign, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_ADDADMINWITHSIGN, 
                Arrays.<Type>asList(new Address(externalAccount),
                new DynamicBytes(role),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForAddAdminWithSign(String externalAccount, byte[] role, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_ADDADMINWITHSIGN, 
                Arrays.<Type>asList(new Address(externalAccount),
                new DynamicBytes(role),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple3<String, byte[], List<byte[]>> getAddAdminWithSignInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_ADDADMINWITHSIGN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<DynamicBytes>() {}, new TypeReference<StaticArray4<Bytes32>>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple3<String, byte[], List<byte[]>>(

                (String) results.get(0).getValue(), 
                (byte[]) results.get(1).getValue(), 
                convertToNative((List<Bytes32>) results.get(2).getValue())
                );
    }

    public Tuple1<Boolean> getAddAdminWithSignOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_ADDADMINWITHSIGN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<Boolean>(

                (Boolean) results.get(0).getValue()
                );
    }

    public BigInteger size() throws ContractException {
        final Function function = new Function(FUNC_SIZE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeCallWithSingleValueReturn(function, BigInteger.class);
    }

    public byte[] OPERATOR() throws ContractException {
        final Function function = new Function(FUNC_OPERATOR, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public TransactionReceipt getAssetPools() {
        final Function function = new Function(
                FUNC_GETASSETPOOLS, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void getAssetPools(TransactionCallback callback) {
        final Function function = new Function(
                FUNC_GETASSETPOOLS, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForGetAssetPools() {
        final Function function = new Function(
                FUNC_GETASSETPOOLS, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<List<String>> getGetAssetPoolsOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_GETASSETPOOLS, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Address>>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<List<String>>(

                convertToNative((List<Address>) results.get(0).getValue())
                );
    }

    public TransactionReceipt removeAdminWithSign(String externalAccount, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_REMOVEADMINWITHSIGN, 
                Arrays.<Type>asList(new Address(externalAccount),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void removeAdminWithSign(String externalAccount, List<byte[]> sign, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_REMOVEADMINWITHSIGN, 
                Arrays.<Type>asList(new Address(externalAccount),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForRemoveAdminWithSign(String externalAccount, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_REMOVEADMINWITHSIGN, 
                Arrays.<Type>asList(new Address(externalAccount),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple2<String, List<byte[]>> getRemoveAdminWithSignInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_REMOVEADMINWITHSIGN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<StaticArray4<Bytes32>>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<String, List<byte[]>>(

                (String) results.get(0).getValue(), 
                convertToNative((List<Bytes32>) results.get(1).getValue())
                );
    }

    public Tuple1<Boolean> getRemoveAdminWithSignOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_REMOVEADMINWITHSIGN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<Boolean>(

                (Boolean) results.get(0).getValue()
                );
    }

    public byte[] ROLE() throws ContractException {
        final Function function = new Function(FUNC_ROLE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public TransactionReceipt changeExternalAccount(String oldAccount, String newAccount) {
        final Function function = new Function(
                FUNC_CHANGEEXTERNALACCOUNT, 
                Arrays.<Type>asList(new Address(oldAccount),
                new Address(newAccount)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void changeExternalAccount(String oldAccount, String newAccount, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_CHANGEEXTERNALACCOUNT, 
                Arrays.<Type>asList(new Address(oldAccount),
                new Address(newAccount)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForChangeExternalAccount(String oldAccount, String newAccount) {
        final Function function = new Function(
                FUNC_CHANGEEXTERNALACCOUNT, 
                Arrays.<Type>asList(new Address(oldAccount),
                new Address(newAccount)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple2<String, String> getChangeExternalAccountInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_CHANGEEXTERNALACCOUNT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Address>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<String, String>(

                (String) results.get(0).getValue(), 
                (String) results.get(1).getValue()
                );
    }

    public Tuple1<Boolean> getChangeExternalAccountOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_CHANGEEXTERNALACCOUNT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<Boolean>(

                (Boolean) results.get(0).getValue()
                );
    }

    public TransactionReceipt set(byte[] key, byte[] value) {
        final Function function = new Function(
                FUNC_SET, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new DynamicBytes(value)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void set(byte[] key, byte[] value, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_SET, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new DynamicBytes(value)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForSet(byte[] key, byte[] value) {
        final Function function = new Function(
                FUNC_SET, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new DynamicBytes(value)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple2<byte[], byte[]> getSetInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_SET, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}, new TypeReference<DynamicBytes>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<byte[], byte[]>(

                (byte[]) results.get(0).getValue(), 
                (byte[]) results.get(1).getValue()
                );
    }

    public Tuple1<Boolean> getSetOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_SET, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<Boolean>(

                (Boolean) results.get(0).getValue()
                );
    }

    public TransactionReceipt getInnerAccount(String account) {
        final Function function = new Function(
                FUNC_GETINNERACCOUNT, 
                Arrays.<Type>asList(new Address(account)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void getInnerAccount(String account, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_GETINNERACCOUNT, 
                Arrays.<Type>asList(new Address(account)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForGetInnerAccount(String account) {
        final Function function = new Function(
                FUNC_GETINNERACCOUNT, 
                Arrays.<Type>asList(new Address(account)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<String> getGetInnerAccountInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_GETINNERACCOUNT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>(

                (String) results.get(0).getValue()
                );
    }

    public Tuple1<String> getGetInnerAccountOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_GETINNERACCOUNT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>(

                (String) results.get(0).getValue()
                );
    }

    public Tuple3<List<String>, List<byte[]>, BigInteger> listAdmins() throws ContractException {
        final Function function = new Function(FUNC_LISTADMINS, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Address>>() {}, new TypeReference<DynamicArray<DynamicBytes>>() {}, new TypeReference<Uint256>() {}));
        List<Type> results = executeCallWithMultipleValueReturn(function);
        return new Tuple3<List<String>, List<byte[]>, BigInteger>(
                convertToNative((List<Address>) results.get(0).getValue()), 
                convertToNative((List<DynamicBytes>) results.get(1).getValue()), 
                (BigInteger) results.get(2).getValue());
    }

    public TransactionReceipt addWithSign(byte[] key, byte[] value, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_ADDWITHSIGN, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new DynamicBytes(value),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void addWithSign(byte[] key, byte[] value, List<byte[]> sign, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_ADDWITHSIGN, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new DynamicBytes(value),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForAddWithSign(byte[] key, byte[] value, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_ADDWITHSIGN, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new DynamicBytes(value),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple3<byte[], byte[], List<byte[]>> getAddWithSignInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_ADDWITHSIGN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}, new TypeReference<DynamicBytes>() {}, new TypeReference<StaticArray4<Bytes32>>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple3<byte[], byte[], List<byte[]>>(

                (byte[]) results.get(0).getValue(), 
                (byte[]) results.get(1).getValue(), 
                convertToNative((List<Bytes32>) results.get(2).getValue())
                );
    }

    public Tuple1<Boolean> getAddWithSignOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_ADDWITHSIGN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<Boolean>(

                (Boolean) results.get(0).getValue()
                );
    }

    public String getProjectTerm() throws ContractException {
        final Function function = new Function(FUNC_GETPROJECTTERM, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public TransactionReceipt createAssetWithSign(String externalAccount, String assetName, Boolean isFungible, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_CREATEASSETWITHSIGN, 
                Arrays.<Type>asList(new Address(externalAccount),
                new Utf8String(assetName),
                new Bool(isFungible),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void createAssetWithSign(String externalAccount, String assetName, Boolean isFungible, List<byte[]> sign, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_CREATEASSETWITHSIGN, 
                Arrays.<Type>asList(new Address(externalAccount),
                new Utf8String(assetName),
                new Bool(isFungible),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForCreateAssetWithSign(String externalAccount, String assetName, Boolean isFungible, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_CREATEASSETWITHSIGN, 
                Arrays.<Type>asList(new Address(externalAccount),
                new Utf8String(assetName),
                new Bool(isFungible),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple4<String, String, Boolean, List<byte[]>> getCreateAssetWithSignInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_CREATEASSETWITHSIGN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Bool>() {}, new TypeReference<StaticArray4<Bytes32>>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple4<String, String, Boolean, List<byte[]>>(

                (String) results.get(0).getValue(), 
                (String) results.get(1).getValue(), 
                (Boolean) results.get(2).getValue(), 
                convertToNative((List<Bytes32>) results.get(3).getValue())
                );
    }

    public Tuple2<String, Boolean> getCreateAssetWithSignOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_CREATEASSETWITHSIGN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Bool>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<String, Boolean>(

                (String) results.get(0).getValue(), 
                (Boolean) results.get(1).getValue()
                );
    }

    public String ADMIN_ADDR() throws ContractException {
        final Function function = new Function(FUNC_ADMIN_ADDR, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public String getAccountManager() throws ContractException {
        final Function function = new Function(FUNC_GETACCOUNTMANAGER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public byte[] ID() throws ContractException {
        final Function function = new Function(FUNC_ID, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public byte[] ADDR() throws ContractException {
        final Function function = new Function(FUNC_ADDR, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public byte[] TYPE_PUBLIC() throws ContractException {
        final Function function = new Function(FUNC_TYPE_PUBLIC, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public String OPERATOR_ADDR() throws ContractException {
        final Function function = new Function(FUNC_OPERATOR_ADDR, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public byte[] TYPE() throws ContractException {
        final Function function = new Function(FUNC_TYPE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public String getAuthCenter() throws ContractException {
        final Function function = new Function(FUNC_GETAUTHCENTER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public String getAuthManager() throws ContractException {
        final Function function = new Function(FUNC_GETAUTHMANAGER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public TransactionReceipt insertWithSign(byte[] key, byte[] value, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_INSERTWITHSIGN, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new DynamicBytes(value),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void insertWithSign(byte[] key, byte[] value, List<byte[]> sign, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_INSERTWITHSIGN, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new DynamicBytes(value),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForInsertWithSign(byte[] key, byte[] value, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_INSERTWITHSIGN, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new DynamicBytes(value),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple3<byte[], byte[], List<byte[]>> getInsertWithSignInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_INSERTWITHSIGN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}, new TypeReference<DynamicBytes>() {}, new TypeReference<StaticArray4<Bytes32>>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple3<byte[], byte[], List<byte[]>>(

                (byte[]) results.get(0).getValue(), 
                (byte[]) results.get(1).getValue(), 
                convertToNative((List<Bytes32>) results.get(2).getValue())
                );
    }

    public Tuple1<Boolean> getInsertWithSignOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_INSERTWITHSIGN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<Boolean>(

                (Boolean) results.get(0).getValue()
                );
    }

    public BigInteger getNonce() throws ContractException {
        final Function function = new Function(FUNC_GETNONCE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeCallWithSingleValueReturn(function, BigInteger.class);
    }

    public byte[] get(byte[] key) throws ContractException {
        final Function function = new Function(FUNC_GET, 
                Arrays.<Type>asList(new DynamicBytes(key)),
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public TransactionReceipt setWithSign(byte[] key, byte[] value, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_SETWITHSIGN, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new DynamicBytes(value),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void setWithSign(byte[] key, byte[] value, List<byte[]> sign, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_SETWITHSIGN, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new DynamicBytes(value),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForSetWithSign(byte[] key, byte[] value, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_SETWITHSIGN, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new DynamicBytes(value),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple3<byte[], byte[], List<byte[]>> getSetWithSignInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_SETWITHSIGN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}, new TypeReference<DynamicBytes>() {}, new TypeReference<StaticArray4<Bytes32>>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple3<byte[], byte[], List<byte[]>>(

                (byte[]) results.get(0).getValue(), 
                (byte[]) results.get(1).getValue(), 
                convertToNative((List<Bytes32>) results.get(2).getValue())
                );
    }

    public Tuple1<Boolean> getSetWithSignOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_SETWITHSIGN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<Boolean>(

                (Boolean) results.get(0).getValue()
                );
    }

    public TransactionReceipt createCurrency(String currencyName, String currencySymbol, BigInteger decimals) {
        final Function function = new Function(
                FUNC_CREATECURRENCY, 
                Arrays.<Type>asList(new Utf8String(currencyName),
                new Utf8String(currencySymbol),
                new Uint8(decimals)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void createCurrency(String currencyName, String currencySymbol, BigInteger decimals, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_CREATECURRENCY, 
                Arrays.<Type>asList(new Utf8String(currencyName),
                new Utf8String(currencySymbol),
                new Uint8(decimals)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForCreateCurrency(String currencyName, String currencySymbol, BigInteger decimals) {
        final Function function = new Function(
                FUNC_CREATECURRENCY, 
                Arrays.<Type>asList(new Utf8String(currencyName),
                new Utf8String(currencySymbol),
                new Uint8(decimals)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple3<String, String, BigInteger> getCreateCurrencyInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_CREATECURRENCY, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint8>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple3<String, String, BigInteger>(

                (String) results.get(0).getValue(), 
                (String) results.get(1).getValue(), 
                (BigInteger) results.get(2).getValue()
                );
    }

    public Tuple1<String> getCreateCurrencyOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_CREATECURRENCY, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>(

                (String) results.get(0).getValue()
                );
    }

    public byte[] KEY_ALL() throws ContractException {
        final Function function = new Function(FUNC_KEY_ALL, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public TransactionReceipt createAssetPool() {
        final Function function = new Function(
                FUNC_CREATEASSETPOOL, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void createAssetPool(TransactionCallback callback) {
        final Function function = new Function(
                FUNC_CREATEASSETPOOL, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForCreateAssetPool() {
        final Function function = new Function(
                FUNC_CREATEASSETPOOL, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<String> getCreateAssetPoolOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_CREATEASSETPOOL, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>(

                (String) results.get(0).getValue()
                );
    }

    public TransactionReceipt getAccount(String account) {
        final Function function = new Function(
                FUNC_GETACCOUNT, 
                Arrays.<Type>asList(new Address(account)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void getAccount(String account, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_GETACCOUNT, 
                Arrays.<Type>asList(new Address(account)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForGetAccount(String account) {
        final Function function = new Function(
                FUNC_GETACCOUNT, 
                Arrays.<Type>asList(new Address(account)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<String> getGetAccountInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_GETACCOUNT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>(

                (String) results.get(0).getValue()
                );
    }

    public Tuple1<String> getGetAccountOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_GETACCOUNT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>(

                (String) results.get(0).getValue()
                );
    }

    public static Organization load(String contractAddress, Client client, CryptoKeyPair credential) {
        return new Organization(contractAddress, client, credential);
    }

    public static Organization deploy(Client client, CryptoKeyPair credential, String projectAddress, String authCenterAddress) throws ContractException {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new Address(projectAddress),
                new Address(authCenterAddress)));
        return deploy(Organization.class, client, credential, getBinary(client.getCryptoSuite()), encodedConstructor);
    }
}
