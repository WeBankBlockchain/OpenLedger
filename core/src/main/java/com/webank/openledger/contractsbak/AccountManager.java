package com.webank.openledger.contractsbak;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import org.fisco.bcos.sdk.abi.FunctionReturnDecoder;
import org.fisco.bcos.sdk.abi.TypeReference;
import org.fisco.bcos.sdk.abi.datatypes.Address;
import org.fisco.bcos.sdk.abi.datatypes.Bool;
import org.fisco.bcos.sdk.abi.datatypes.Event;
import org.fisco.bcos.sdk.abi.datatypes.Function;
import org.fisco.bcos.sdk.abi.datatypes.Type;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple1;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple2;
import org.fisco.bcos.sdk.client.Client;
import org.fisco.bcos.sdk.contract.Contract;
import org.fisco.bcos.sdk.crypto.CryptoSuite;
import org.fisco.bcos.sdk.crypto.keypair.CryptoKeyPair;
import org.fisco.bcos.sdk.eventsub.EventCallback;
import org.fisco.bcos.sdk.model.CryptoType;
import org.fisco.bcos.sdk.model.TransactionReceipt;
import org.fisco.bcos.sdk.model.callback.TransactionCallback;
import org.fisco.bcos.sdk.transaction.model.exception.ContractException;

@SuppressWarnings("unchecked")
public class AccountManager extends Contract {
    public static final String[] BINARY_ARRAY = {"6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550616244806100536000396000f300608060405260043610620000c7576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806313af403514620000cc57806345c8b1a61462000112578063582930351462000170578063789a0ed514620002215780638428f258146200027f5780638d1fdf2f14620002dd578063ad0f0244146200033b578063b2bdfa7b146200036d578063b8c1828e14620003c7578063c8e40fbf1462000425578063ec17d0251462000483578063ff86983814620004e1575b600080fd5b348015620000d957600080fd5b5062000110600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506200053f565b005b3480156200011f57600080fd5b5062000156600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620006c7565b604051808215151515815260200191505060405180910390f35b3480156200017d57600080fd5b50620001d4600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062000a1a565b60405180831515151581526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390f35b3480156200022e57600080fd5b5062000265600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062000b47565b604051808215151515815260200191505060405180910390f35b3480156200028c57600080fd5b50620002c3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062001005565b604051808215151515815260200191505060405180910390f35b348015620002ea57600080fd5b5062000321600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620014c3565b604051808215151515815260200191505060405180910390f35b3480156200034857600080fd5b506200035362001816565b604051808215151515815260200191505060405180910390f35b3480156200037a57600080fd5b506200038562001828565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015620003d457600080fd5b506200040b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506200184d565b604051808215151515815260200191505060405180910390f35b3480156200043257600080fd5b5062000469600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506200194c565b604051808215151515815260200191505060405180910390f35b3480156200049057600080fd5b50620004c7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506200196b565b604051808215151515815260200191505060405180910390f35b348015620004ee57600080fd5b5062000525600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062001e29565b604051808215151515815260200191505060405180910390f35b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156200062a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001807f574542617369634163636f756e743a206f6e6c79206f776e657220697320617581526020017f74686f72697a65642e000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fc66d1d23a5b7baf1f496bb19f580d7b12070ad5a08a758c990db97d961fa33a660405160405180910390a350565b600080828073ffffffffffffffffffffffffffffffffffffffff16634da90f34336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1580156200076757600080fd5b505af11580156200077c573d6000803e3d6000fd5b505050506040513d60208110156200079357600080fd5b810190808051906020019092919050505015156200083f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001807f4163636f756e744d616e616765723a207265717569726564206163636f756e7481526020017f2061646d696e210000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b836200085681600162001f0490919063ffffffff16565b1515620008f1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001807f4163636f756e744d616e616765723a2065787465726e616c4163636f756e742081526020017f6e6f7420657869737465642e000000000000000000000000000000000000000081525060400191505060405180910390fd5b8492508473ffffffffffffffffffffffffffffffffffffffff167fc0d78d00cd87c129d30acb1af322bfdda683a26281ce525d9dbbf5223709873230604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a28273ffffffffffffffffffffffffffffffffffffffff16636a28f0006040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015620009d357600080fd5b505af1158015620009e8573d6000803e3d6000fd5b505050506040513d6020811015620009ff57600080fd5b81019080805190602001909291905050509350505050919050565b60008060008484303362000a2d62002583565b808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001945050505050604051809103906000f08015801562000b19573d6000803e3d6000fd5b50905062000b343382600162001f559092919063ffffffff16565b5060018180905092509250509250929050565b600080828073ffffffffffffffffffffffffffffffffffffffff16634da90f34336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801562000be757600080fd5b505af115801562000bfc573d6000803e3d6000fd5b505050506040513d602081101562000c1357600080fd5b8101908080519060200190929190505050151562000cbf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001807f4163636f756e744d616e616765723a207265717569726564206163636f756e7481526020017f2061646d696e210000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8362000cd681600162001f0490919063ffffffff16565b151562000d71576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001807f4163636f756e744d616e616765723a2065787465726e616c4163636f756e742081526020017f6e6f7420657869737465642e000000000000000000000000000000000000000081525060400191505060405180910390fd5b8492503373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1663d195143c6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801562000df057600080fd5b505af115801562000e05573d6000803e3d6000fd5b505050506040513d602081101562000e1c57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1614151562000edf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001807f4163636f756e744d616e616765723a206f6e6c792061646d696e20697320617581526020017f74686f72697a65642e000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8473ffffffffffffffffffffffffffffffffffffffff167fc0d78d00cd87c129d30acb1af322bfdda683a26281ce525d9dbbf5223709873230604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a28273ffffffffffffffffffffffffffffffffffffffff16636a28f0006040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381","600087803b15801562000fbe57600080fd5b505af115801562000fd3573d6000803e3d6000fd5b505050506040513d602081101562000fea57600080fd5b81019080805190602001909291905050509350505050919050565b600080828073ffffffffffffffffffffffffffffffffffffffff16634da90f34336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015620010a557600080fd5b505af1158015620010ba573d6000803e3d6000fd5b505050506040513d6020811015620010d157600080fd5b810190808051906020019092919050505015156200117d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001807f4163636f756e744d616e616765723a207265717569726564206163636f756e7481526020017f2061646d696e210000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b836200119481600162001f0490919063ffffffff16565b15156200122f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001807f4163636f756e744d616e616765723a2065787465726e616c4163636f756e742081526020017f6e6f7420657869737465642e000000000000000000000000000000000000000081525060400191505060405180910390fd5b8492503373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1663d195143c6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015620012ae57600080fd5b505af1158015620012c3573d6000803e3d6000fd5b505050506040513d6020811015620012da57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff161415156200139d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001807f4163636f756e744d616e616765723a206f6e6c792061646d696e20697320617581526020017f74686f72697a65642e000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8473ffffffffffffffffffffffffffffffffffffffff167f244b9baf4950ca2fe1a97e6554bb3d42adcb5176ed4c2cccdcac5ba347083faf30604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a28273ffffffffffffffffffffffffffffffffffffffff166362a5af3b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156200147c57600080fd5b505af115801562001491573d6000803e3d6000fd5b505050506040513d6020811015620014a857600080fd5b81019080805190602001909291905050509350505050919050565b600080828073ffffffffffffffffffffffffffffffffffffffff16634da90f34336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1580156200156357600080fd5b505af115801562001578573d6000803e3d6000fd5b505050506040513d60208110156200158f57600080fd5b810190808051906020019092919050505015156200163b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001807f4163636f756e744d616e616765723a207265717569726564206163636f756e7481526020017f2061646d696e210000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b836200165281600162001f0490919063ffffffff16565b1515620016ed576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001807f4163636f756e744d616e616765723a2065787465726e616c4163636f756e742081526020017f6e6f7420657869737465642e000000000000000000000000000000000000000081525060400191505060405180910390fd5b8492508473ffffffffffffffffffffffffffffffffffffffff167f244b9baf4950ca2fe1a97e6554bb3d42adcb5176ed4c2cccdcac5ba347083faf30604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a28273ffffffffffffffffffffffffffffffffffffffff166362a5af3b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015620017cf57600080fd5b505af1158015620017e4573d6000803e3d6000fd5b505050506040513d6020811015620017fb57600080fd5b81019080805190602001909291905050509350505050919050565b60006200182333620023a6565b905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156200193a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001807f574542617369634163636f756e743a206f6e6c79206f776e657220697320617581526020017f74686f72697a65642e000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b6200194582620023a6565b9050919050565b60006200196482600162001f0490919063ffffffff16565b9050919050565b600080826200198581600162001f0490919063ffffffff16565b151562001a20576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001807f4163636f756e744d616e616765723a2065787465726e616c4163636f756e742081526020017f6e6f7420657869737465642e000000000000000000000000000000000000000081525060400191505060405180910390fd5b838073ffffffffffffffffffffffffffffffffffffffff16634da90f34336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801562001abd57600080fd5b505af115801562001ad2573d6000803e3d6000fd5b505050506040513d602081101562001ae957600080fd5b8101908080519060200190929190505050151562001b95576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001807f4163636f756e744d616e616765723a207265717569726564206163636f756e7481526020017f2061646d696e210000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8492503373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1663d195143c6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801562001c1457600080fd5b505af115801562001c29573d6000803e3d6000fd5b505050506040513d602081101562001c4057600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1614151562001d03576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001807f4163636f756e744d616e616765723a206f6e6c792061646d696e20697320617581526020017f74686f72697a65642e000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8473ffffffffffffffffffffffffffffffffffffffff167f8c10fb30e3dc93f1332bdb81522fd134da355b8188e1aa3e7adb3a2ca90e8e5f30604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a28273ffffffffffffffffffffffffffffffffffffffff1663ea8a1af06040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801562001de257600080fd5b505af115801562001df7573d6000803e3d6000fd5b505050506040513d602081101562001e0e57600080fd5b81019080805190602001909291905050509350505050919050565b60008060008373ffffffffffffffffffffffffffffffffffffffff16141562001e56576000915062001efe565b8290508073ffffffffffffffffffffffffffffffffffffffff16638866eaec6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801562001ebe57600080fd5b505af115801562001ed3573d6000803e3d6000fd5b505050506040513d602081101562001eea57600080fd5b810190808051906020019092919050505091505b50919050565b6000808360000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015411905092915050565b6000808460000160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905060008111156200223e577fffb3","","806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fc66d1d23a5b7baf1f496bb19f580d7b12070ad5a08a758c990db97d961fa33a660405160405180910390a350565b60006060866040805190810160405280600881526020017f7472616e73666572000000000000000000000000000000000000000000000000815250843073ffffffffffffffffffffffffffffffffffffffff1663344f24a08484846040518463ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016106bf939291906131d7565b602060405180830381600087803b1580156106d957600080fd5b505af11580156106ed573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061071191908101906129fc565b610759836040805190810160405280601c81526020017f426173654163636f756e74486f6c6465723a466f7262626964656e2000000000815250611e1990919063ffffffff16565b90151561079c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107939190613333565b60405180910390fd5b50600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dc2d23368b8b8b8b6040518563ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161081a94939291906130bb565b600060405180830381600087803b15801561083457600080fd5b505af1158015610848573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506108719190810190612ad9565b945094505050509550959350505050565b600061088c6120cb565b876040805190810160405280600881526020017f7472616e73666572000000000000000000000000000000000000000000000000815250843073ffffffffffffffffffffffffffffffffffffffff1663344f24a08484846040518463ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161091d939291906131d7565b602060405180830381600087803b15801561093757600080fd5b505af115801561094b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061096f91908101906129fc565b6109b7836040805190810160405280601c81526020017f426173654163636f756e74486f6c6465723a466f7262626964656e2000000000815250611e1990919063ffffffff16565b9015156109fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f19190613333565b60405180910390fd5b50600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bee379d58c8c8c8c8c6040518663ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610a7a959493929190613115565b606060405180830381600087803b158015610a9457600080fd5b505af1158015610aa8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610acc9190810190612a9d565b94509450505050965096945050505050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b6060846040805190810160405280600f81526020017f6765744163636f756e744e6f7465730000000000000000000000000000000000815250833073ffffffffffffffffffffffffffffffffffffffff1663344f24a08484846040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610bcb939291906131d7565b602060405180830381600087803b158015610be557600080fd5b505af1158015610bf9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610c1d91908101906129fc565b610c65836040805190810160405280601c81526020017f426173654163636f756e74486f6c6465723a466f7262626964656e2000000000815250611e1990919063ffffffff16565b901515610ca8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9f9190613333565b60405180910390fd5b50600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631b163d8189308a8a6040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610d269493929190613076565b600060405180830381600087803b158015610d4057600080fd5b505af1158015610d54573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250610d7d91908101906129bb565b9350505050949350505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610e355750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b1515610e76576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6d906133b5565b60405180910390fd5b610e7e6110f8565b1515610ebf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eb690613395565b60405180910390fd5b6001600260146101000a81548160ff021916908360ff1602179055507f667265657a6500000000000000000000000000000000000000000000000000007f7d78a1adf6a29dad801d43ddd0c4478ec0cbf1bd9bfdd2e007d90429959f363e30604051610f2b9190613318565b60405180910390a26001905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610fe55750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b1515611026576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161101d906133b5565b60405180910390fd5b6001600260149054906101000a900460ff1660ff1614151561107d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161107490613395565b60405180910390fd5b6000600260146101000a81548160ff021916908360ff1602179055507f756e667265657a650000000000000000000000000000000000000000000000007f7d78a1adf6a29dad801d43ddd0c4478ec0cbf1bd9bfdd2e007d90429959f363e306040516110e99190613318565b60405180910390a26001905090565b600080600260149054906101000a900460ff1660ff1614905090565b6000836040805190810160405280600f81526020017f6163636f756e74486f6c644e6f74650000000000000000000000000000000000815250833073ffffffffffffffffffffffffffffffffffffffff1663344f24a08484846040518463ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016111a7939291906131d7565b602060405180830381600087803b1580156111c157600080fd5b505af11580156111d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506111f991908101906129fc565b611241836040805190810160405280601c81526020017f426173654163636f756e74486f6c6465723a466f7262626964656e2000000000815250611e1990919063ffffffff16565b901515611284576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161127b9190613333565b60405180910390fd5b50600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634c433cab88886040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016112fe929190613215565b602060405180830381600087803b15801561131857600080fd5b505af115801561132c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061135091908101906129fc565b93505050509392505050565b6060856040805190810160405280600981526020017f7175657279426f6f6b0000000000000000000000000000000000000000000000815250833073ffffffffffffffffffffffffffffffffffffffff1663344f24a08484846040518463ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016113ef939291906131d7565b602060405180830381600087803b15801561140957600080fd5b505af115801561141d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061144191908101906129fc565b611489836040805190810160405280601c81526020017f426173654163636f756e74486f6c6465723a466f7262626964656e2000000000815250611e1990919063ffffffff16565b9015156114cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114c39190613333565b60405180910390fd5b508873ffffffffffffffffffffffffffffffffffffffff16637e45d34c6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561153157600080fd5b505af1158015611545573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061156991908101906129fc565b1561164957600760009054906101000a900473ffffffffffffffffffffffffffffffffff","ffffff1673ffffffffffffffffffffffffffffffffffffffff166314a923358a8a8a8a6040518563ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016115eb949392919061317d565b600060405180830381600087803b15801561160557600080fd5b505af1158015611619573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250611642919081019061297a565b9350611720565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166314a923358a8a8a8a6040518563ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016116c6949392919061317d565b600060405180830381600087803b1580156116e057600080fd5b505af11580156116f4573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525061171d919081019061297a565b93505b50505095945050505050565b6000826040805190810160405280600a81526020017f67657442616c616e636500000000000000000000000000000000000000000000815250833073ffffffffffffffffffffffffffffffffffffffff1663344f24a08484846040518463ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016117bf939291906131d7565b602060405180830381600087803b1580156117d957600080fd5b505af11580156117ed573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061181191908101906129fc565b611859836040805190810160405280601c81526020017f426173654163636f756e74486f6c6465723a466f7262626964656e2000000000815250611e1990919063ffffffff16565b90151561189c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118939190613333565b60405180910390fd5b50600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d4fac45d87306040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161191692919061304d565b602060405180830381600087803b15801561193057600080fd5b505af1158015611944573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506119689190810190612b2d565b935050505092915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480611a935750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b1515611ad4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611acb906133b5565b60405180910390fd5b60028060146101000a81548160ff021916908360ff1602179055507f63616e63656c00000000000000000000000000000000000000000000000000007f7d78a1adf6a29dad801d43ddd0c4478ec0cbf1bd9bfdd2e007d90429959f363e30604051611b3f9190613318565b60405180910390a26001905090565b606060006040805190810160405280601081526020017f6765744163636f756e7441737365747300000000000000000000000000000000815250833073ffffffffffffffffffffffffffffffffffffffff1663344f24a08484846040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611be2939291906131d7565b602060405180830381600087803b158015611bfc57600080fd5b505af1158015611c10573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611c3491908101906129fc565b611c7c836040805190810160405280601c81526020017f426173654163636f756e74486f6c6465723a466f7262626964656e2000000000815250611e1990919063ffffffff16565b901515611cbf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cb69190613333565b60405180910390fd5b508515611cd757611cd06005611fea565b9350611ce4565b611ce16003611fea565b93505b50505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1614151515611d4a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d4190613375565b60405180910390fd5b611d54838361207c565b15611d625760019050611e13565b826001018290806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508360000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600090505b92915050565b606080606080606060008088955087945084518651016040519080825280601f01601f191660200182016040528015611e615781602001602082028038833980820191505090505b50935083925060009150600090505b8551811015611f23578581815181101515611e8757fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000028383806001019450815181101515611ee657fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050611e70565b600090505b8451811015611fdb578481815181101515611f3f57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000028383806001019450815181101515611f9e57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050611f28565b83965050505050505092915050565b60608160010180548060200260200160405190810160405280929190818152602001828054801561207057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612026575b50505050509050919050565b6000808360000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541415905092915050565b6040805190810160405280600290602082028038833980820191505090505090565b60006120f98235613711565b905092915050565b600082601f830112151561211457600080fd5b813561212761212282613438565b61340b565b9150818183526020840193506020810190508385602084028201111561214c57600080fd5b60005b8381101561217c578161216288826120ed565b84526020840193506020830192505060018101905061214f565b5050505092915050565b600082601f830112151561219957600080fd5b60046121ac6121a782613460565b61340b565b915081838560208402820111156121c257600080fd5b60005b838110156121f257816121d88882612515565b8452602084019350602083019250506001810190506121c5565b5050505092915050565b600082601f830112151561220f57600080fd5b813561222261221d82613482565b61340b565b9150818183526020840193506020810190508360005b83811015612268578135860161224e8882612529565b845260208401935060208301925050600181019050612238565b5050505092915050565b600082601f830112151561228557600080fd5b8135612298612293826134aa565b61340b565b915081818352602084019350602081019050838560208402820111156122bd57600080fd5b60005b838110156122ed57816122d3888261257f565b8452602084019350602083019250506001810190506122c0565b5050505092915050565b600082601f830112151561230a57600080fd5b815161231d612318826134d2565b61340b565b9150818183526020840193506020810190508360005b8381101561236357815186016123498882612593565b845260208401935060208301925050600181019050612333565b5050505092915050565b600082601f830112151561238057600080fd5b600261239361238e826134fa565b61340b565b915081838560208402820111156123a957600080fd5b60005b838110156123d957816123bf88826125fd565b8452602084019350602083019250506001810190506123ac565b5050505092915050565b600082601f83011215156123f657600080fd5b81356124096124048261351c565b61340b565b9150818183526020840193506020810190508385602084028201111561242e57600080fd5b60005b8381101561245e578161244488826125e9565b845260208401935060208301925050600181019050612431565b5050505092915050565b600082601f830112151561247b57600080fd5b815161248e6124898261351c565b61340b565b915081818352602084019350602081019050838560208402820111156124b357600080fd5b60005b838110156124e357816124c988826125fd565b8452602084019350602083019250506001810190506124b6565b5050505092915050565b60006124f98235613731565b905092915050565b600061250d8251613731565b905092915050565b6000612521823561373d565b905092915050565b600082601f830112151561253c57600080fd5b813561254f61254a82613544565b61340b565b9150808252602083016020830185838301111561256b57600080fd5b61257683828461376d565b50505092915050565b600061258b8235613747565b9050","","01169050602081019050919050565b6000602082019050919050565b6000819050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000819050919050565b6000602082019050919050565b600081519050919050565b600060049050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600060029050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b6000819050919050565b6000819050919050565b600060ff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b6000819050919050565b6000819050919050565b6000613766826136ba565b9050919050565b82818337600083830152505050565b60005b8381101561379a57808201518184015260208101905061377f565b838111156137a9576000848401525b50505050565b6000601f19601f83011690509190505600a265627a7a72305820ffdfd39db14749e408db0e86d2eab86deb6c324a99b1be8d804eed617d9679f66c6578706572696d656e74616cf50037a165627a7a723058206c5f1477016a5286e02168f5ef1f399d27e0421c3cdc90e9cb3096459ef23c610029"};

    public static final String BINARY = String.join("", BINARY_ARRAY);

    public static final String[] SM_BINARY_ARRAY = {"6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550616244806100536000396000f300608060405260043610620000c7576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806305282c7014620000cc57806328e91489146200011257806361cb24c3146200016c5780638b9b8e5c14620001ca5780639e4ad09b1462000228578063b54ef4a11462000286578063ba01371214620002e4578063c8d83aaf1462000342578063dbe09bdc1462000374578063de1ed2351462000425578063ef0c4a1c1462000483578063f12c66df14620004e1575b600080fd5b348015620000d957600080fd5b5062000110600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506200053f565b005b3480156200011f57600080fd5b506200012a620006c7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156200017957600080fd5b50620001b0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620006ec565b604051808215151515815260200191505060405180910390f35b348015620001d757600080fd5b506200020e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062000a3f565b604051808215151515815260200191505060405180910390f35b3480156200023557600080fd5b506200026c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062000efd565b604051808215151515815260200191505060405180910390f35b3480156200029357600080fd5b50620002ca600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062000f1c565b604051808215151515815260200191505060405180910390f35b348015620002f157600080fd5b5062000328600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506200101b565b604051808215151515815260200191505060405180910390f35b3480156200034f57600080fd5b506200035a620010f6565b604051808215151515815260200191505060405180910390f35b3480156200038157600080fd5b50620003d8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062001108565b60405180831515151581526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390f35b3480156200043257600080fd5b5062000469600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062001235565b604051808215151515815260200191505060405180910390f35b3480156200049057600080fd5b50620004c7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620016f3565b604051808215151515815260200191505060405180910390f35b348015620004ee57600080fd5b5062000525600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062001bb1565b604051808215151515815260200191505060405180910390f35b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156200062a576040517fc703cb120000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001807f574542617369634163636f756e743a206f6e6c79206f776e657220697320617581526020017f74686f72697a65642e000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f480107a875206c9f5ec6e8b65d989106e27d0fc8b130625b25997540ddfc334a60405160405180910390a350565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080828073ffffffffffffffffffffffffffffffffffffffff166344b0736b336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1580156200078c57600080fd5b505af1158015620007a1573d6000803e3d6000fd5b505050506040513d6020811015620007b857600080fd5b8101908080519060200190929190505050151562000864576040517fc703cb120000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001807f4163636f756e744d616e616765723a207265717569726564206163636f756e7481526020017f2061646d696e210000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b836200087b81600162001f0490919063ffffffff16565b151562000916576040517fc703cb1200000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001807f4163636f756e744d616e616765723a2065787465726e616c4163636f756e742081526020017f6e6f7420657869737465642e000000000000000000000000000000000000000081525060400191505060405180910390fd5b8492508473ffffffffffffffffffffffffffffffffffffffff167fff8289a1541a8bd747b4e19602ccecd11a469b14671d7cc3325062c974c3ae6330604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a28273ffffffffffffffffffffffffffffffffffffffff166308165cd66040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015620009f857600080fd5b505af115801562000a0d573d6000803e3d6000fd5b505050506040513d602081101562000a2457600080fd5b81019080805190602001909291905050509350505050919050565b600080828073ffffffffffffffffffffffffffffffffffffffff166344b0736b336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801562000adf57600080fd5b505af115801562000af4573d6000803e3d6000fd5b505050506040513d602081101562000b0b57600080fd5b8101908080519060200190929190505050151562000bb7576040517fc703cb120000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001807f4163636f756e744d616e616765723a207265717569726564206163636f756e7481526020017f2061646d696e210000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8362000bce81600162001f0490919063ffffffff16565b151562000c69576040517fc703cb1200000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001807f4163636f756e744d616e616765723a2065787465726e616c4163636f756e742081526020017f6e6f7420657869737465642e000000000000000000000000000000000000000081525060400191505060405180910390fd5b8492503373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16634292918f6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801562000ce857600080fd5b505af115801562000cfd573d6000803e3d6000fd5b505050506040513d602081101562000d1457600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1614151562000dd7576040517fc703cb120000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001807f4163636f756e744d616e616765723a206f6e6c792061646d696e20697320617581526020017f74686f72697a65642e000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8473ffffffffffffffffffffffffffffffffffffffff167fde9b2f6104fa4abead11e320ea9108a54d8f81193384f019ee98c0bfe5b029ed30604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a28273ffffffffffffffffffffffffffffffffffffffff16638f55e2256040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801562000eb657600080fd5b505af115801562000ecb573d6000803e3d6000fd5b505050506040513d602081101562000ee257600080fd5b81019080805190602001909291905050509350505050919050565b600062000f1582600162001f0490919063ffffffff16565b9050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151562001009576040517fc703cb120000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152","602001807f574542617369634163636f756e743a206f6e6c79206f776e657220697320617581526020017f74686f72697a65642e000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b620010148262001f55565b9050919050565b60008060008373ffffffffffffffffffffffffffffffffffffffff161415620010485760009150620010f0565b8290508073ffffffffffffffffffffffffffffffffffffffff166335968e686040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015620010b057600080fd5b505af1158015620010c5573d6000803e3d6000fd5b505050506040513d6020811015620010dc57600080fd5b810190808051906020019092919050505091505b50919050565b6000620011033362001f55565b905090565b6000806000848430336200111b62002583565b808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001945050505050604051809103906000f08015801562001207573d6000803e3d6000fd5b5090506200122233826001620021329092919063ffffffff16565b5060018180905092509250509250929050565b600080826200124f81600162001f0490919063ffffffff16565b1515620012ea576040517fc703cb1200000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001807f4163636f756e744d616e616765723a2065787465726e616c4163636f756e742081526020017f6e6f7420657869737465642e000000000000000000000000000000000000000081525060400191505060405180910390fd5b838073ffffffffffffffffffffffffffffffffffffffff166344b0736b336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1580156200138757600080fd5b505af11580156200139c573d6000803e3d6000fd5b505050506040513d6020811015620013b357600080fd5b810190808051906020019092919050505015156200145f576040517fc703cb120000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001807f4163636f756e744d616e616765723a207265717569726564206163636f756e7481526020017f2061646d696e210000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8492503373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16634292918f6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015620014de57600080fd5b505af1158015620014f3573d6000803e3d6000fd5b505050506040513d60208110156200150a57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16141515620015cd576040517fc703cb120000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001807f4163636f756e744d616e616765723a206f6e6c792061646d696e20697320617581526020017f74686f72697a65642e000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8473ffffffffffffffffffffffffffffffffffffffff167fb1dbc1be8412705445ee41c620d31c010ba14cd0cb0f28972f45b7f72b41c25d30604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a28273ffffffffffffffffffffffffffffffffffffffff1663df3150aa6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015620016ac57600080fd5b505af1158015620016c1573d6000803e3d6000fd5b505050506040513d6020811015620016d857600080fd5b81019080805190602001909291905050509350505050919050565b600080828073ffffffffffffffffffffffffffffffffffffffff166344b0736b336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1580156200179357600080fd5b505af1158015620017a8573d6000803e3d6000fd5b505050506040513d6020811015620017bf57600080fd5b810190808051906020019092919050505015156200186b576040517fc703cb120000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001807f4163636f756e744d616e616765723a207265717569726564206163636f756e7481526020017f2061646d696e210000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b836200188281600162001f0490919063ffffffff16565b15156200191d576040517fc703cb1200000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001807f4163636f756e744d616e616765723a2065787465726e616c4163636f756e742081526020017f6e6f7420657869737465642e000000000000000000000000000000000000000081525060400191505060405180910390fd5b8492503373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16634292918f6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156200199c57600080fd5b505af1158015620019b1573d6000803e3d6000fd5b505050506040513d6020811015620019c857600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1614151562001a8b576040517fc703cb120000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001807f4163636f756e744d616e616765723a206f6e6c792061646d696e20697320617581526020017f74686f72697a65642e000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8473ffffffffffffffffffffffffffffffffffffffff167fff8289a1541a8bd747b4e19602ccecd11a469b14671d7cc3325062c974c3ae6330604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a28273ffffffffffffffffffffffffffffffffffffffff166308165cd66040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801562001b6a57600080fd5b505af115801562001b7f573d6000803e3d6000fd5b505050506040513d602081101562001b9657600080fd5b81019080805190602001909291905050509350505050919050565b600080828073ffffffffffffffffffffffffffffffffffffffff166344b0736b336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801562001c5157600080fd5b505af115801562001c66573d6000803e3d6000fd5b505050506040513d602081101562001c7d57600080fd5b8101908080519060200190929190505050151562001d29576040517fc703cb120000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001807f4163636f756e744d616e616765723a207265717569726564206163636f756e7481526020017f2061646d696e210000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8362001d4081600162001f0490919063ffffffff16565b151562001ddb576040517fc703cb1200000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001807f4163636f756e744d616e616765723a2065787465726e616c4163636f756e742081526020017f6e6f7420657869737465642e000000000000000000000000000000000000000081525060400191505060405180910390fd5b8492508473ffffffffffffffffffffffffffffffffffffffff167fde9b2f6104fa4abead11e320ea9108a54d8f81193384f019ee98c0bfe5b029ed30604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a28273ffffffffffffffffffffffffffffffffffffffff16638f55e2256040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801562001ebd57600080fd5b505af115801562001ed2573d6000803e3d6000fd5b505050506040513d602081101562001ee957600080fd5b81019080805190602001909291905050509350505050919050565b6000808360000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015411905092915050565b6000808262001f6f81600162001f0490919063ffffffff16565b15156200200a576040517fc703cb1200000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c81","52602001807f4163636f756e744d616e616765723a2065787465726e616c4163636f756e742081526020017f6e6f7420657869737465642e000000000000000000000000000000000000000081525060400191505060405180910390fd5b8391508373ffffffffffffffffffffffffffffffffffffffff167fb1dbc1be8412705445ee41c620d31c010ba14cd0cb0f28972f45b7f72b41c25d30604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a28173ffffffffffffffffffffffffffffffffffffffff1663df3150aa6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015620020ec57600080fd5b505af115801562002101573d6000803e3d6000fd5b505050506040513d60208110156200211857600080fd5b810190808051906020019092919050505092505050919050565b6000808460000160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905060008111156200241b577fb878ca1044fc99f4084dda56da543f24ec9f652ef40a3cb97d5837c695ef47b132336040805190810160405280600681526020017f4d4f444946590000000000000000000000000000000000000000000000000000815250878960000160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825285818151815260200191508051906020019080838360005b838110156200234f57808201518184015260208101905062002332565b50505050905090810190601f1680156200237d5780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390a1828560000160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600191506200257b565b828560000160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550846001018054809190600101620024b6919062002594565b9050600181018560000160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055508385600101828154811015156200251757fe5b9060005260206000200160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508460020160008154809291906001019190505550600091505b509392505050565b604051613bf8806200262183390190565b815481835581811115620025be57818360005260206000209182019101620025bd9190620025c3565b5b505050565b6200261d91905b808211156200261957600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000820160146101000a81549060ff021916905550600101620025ca565b5090565b90560060806040526000600260146101000a81548160ff021916908360ff1602179055503480156200002d57600080fd5b5060405160808062003bf883398101806040526200004f919081019062000362565b8181336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050508373ffffffffffffffffffffffffffffffffffffffff16639b3cd8cc6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156200017a57600080fd5b505af11580156200018f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620001b5919081019062000336565b600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508373ffffffffffffffffffffffffffffffffffffffff1663059b6ea66040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156200025a57600080fd5b505af11580156200026f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062000295919081019062000336565b600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050620003ee565b60006200032e8251620003ce565b905092915050565b6000602082840312156200034957600080fd5b6000620003598482850162000320565b91505092915050565b600080600080608085870312156200037957600080fd5b6000620003898782880162000320565b94505060206200039c8782880162000320565b9350506040620003af8782880162000320565b9250506060620003c28782880162000320565b91505092959194509250565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6137fa80620003fe6000396000f3006080604052600436106100fc576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063048be6a11461010157806305282c701461013e57806308165cd61461016757806328e91489146101925780632fe7f81a146101bd57806335968e68146101fa578063398fc781146102255780634292918f1461025057806344b0736b1461027b5780638e714457146102b85780638f55e225146102f6578063aed3d64b14610321578063be46a48c1461035e578063c89ca67a1461039c578063df3150aa146103d9578063ede7ddf614610404578063fd442d051461042f578063fe3847e41461046c575b600080fd5b34801561010d57600080fd5b5061012860048036036101239190810190612a61565b6104a9565b604051610135919061323e565b60405180910390f35b34801561014a57600080fd5b5061016560048036036101609190810190612611565b610648565b005b34801561017357600080fd5b5061017c610776565b60405161018991906132a4565b60405180910390f35b34801561019e57600080fd5b506101a7610934565b6040516101b49190613032565b60405180910390f35b3480156101c957600080fd5b506101e460048036036101df91908101906127cc565b610959565b6040516101f191906133d5565b60405180910390f35b34801561020657600080fd5b5061020f610ba0565b60405161021c91906132a4565b60405180910390f35b34801561023157600080fd5b5061023a610bbc565b6040516102479190613032565b60405180910390f35b34801561025c57600080fd5b50610265610be2565b6040516102729190613032565b60405180910390f35b34801561028757600080fd5b506102a2600480360361029d9190810190612611565b610c0c565b6040516102af91906132a4565b60405180910390f35b3480156102c457600080fd5b506102df60048036036102da919081019061263a565b610c66565b6040516102ed9291906132e8565b60405180910390f35b34801561030257600080fd5b5061030b610ebe565b60405161031891906132a4565b60405180910390f35b34801561032d57600080fd5b5061034860048036036103439190810190612917565b61106e565b6040516103559190613282565b60405180910390f35b34801561036a57600080fd5b50610385600480360361038091908101906126fa565b6112c0565b6040516103939291906132bf565b60405180910390f35b3480156103a857600080fd5b506103c360048036036103be9190810190612808565b61151c565b6040516103d09190613260565b60405180910390f35b3480156103e557600080fd5b506103ee6118ec565b6040516103fb91906132a4565b60405180910390f35b34801561041057600080fd5b50610419611a52565b60405161042691906133f0565b60405180910390f35b34801561043b57600080fd5b50610456600480360361045191908101906128c8565b611a65565b60405161046391906132a4565b60405180910390f35b34801561047857600080fd5b50610493600480360361048e9190810190612a25565b611cad565b6040516104a091906132a4565b60405180910390f35b606060006040805190810160405280601081526020017f6765744163636f756e7441737365747300000000000000000000000000000000815250833073ffffffffffffffffffffffffffffffffffffffff1663140930ef8484846040518463ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161053d939291906131d7565b602060405180830381600087803b15801561055757600080fd5b505af115801561056b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061058f91908101906129fc","565b6105d7836040805190810160405280601c81526020017f426173654163636f756e74486f6c6465723a466f7262626964656e2000000000815250611ced90919063ffffffff16565b90151561061a576040517fc703cb120000000000000000000000000000000000000000000000000000000081526004016106119190613333565b60405180910390fd5b5085156106325761062b6005611ebe565b935061063f565b61063c6003611ebe565b93505b50505092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156106d9576040517fc703cb120000000000000000000000000000000000000000000000000000000081526004016106d0906133b5565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f480107a875206c9f5ec6e8b65d989106e27d0fc8b130625b25997540ddfc334a60405160405180910390a350565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806108215750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b1515610862576040517fc703cb1200000000000000000000000000000000000000000000000000000000815260040161085990613355565b60405180910390fd5b6001600260149054906101000a900460ff1660ff161415156108b9576040517fc703cb120000000000000000000000000000000000000000000000000000000081526004016108b090613395565b60405180910390fd5b6000600260146101000a81548160ff021916908360ff1602179055507f756e667265657a650000000000000000000000000000000000000000000000007f598b76607bab91793e04db590052049ff4ca46cfc234328da5536f5169790af7306040516109259190613318565b60405180910390a26001905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000826040805190810160405280600a81526020017f67657442616c616e636500000000000000000000000000000000000000000000815250833073ffffffffffffffffffffffffffffffffffffffff1663140930ef8484846040518463ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016109ec939291906131d7565b602060405180830381600087803b158015610a0657600080fd5b505af1158015610a1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610a3e91908101906129fc565b610a86836040805190810160405280601c81526020017f426173654163636f756e74486f6c6465723a466f7262626964656e2000000000815250611ced90919063ffffffff16565b901515610ac9576040517fc703cb12000000000000000000000000000000000000000000000000000000008152600401610ac09190613333565b60405180910390fd5b50600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166325c4079687306040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610b4392919061304d565b602060405180830381600087803b158015610b5d57600080fd5b505af1158015610b71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610b959190810190612b2d565b935050505092915050565b600080600260149054906101000a900460ff1660ff1614905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b60006060866040805190810160405280600881526020017f7472616e73666572000000000000000000000000000000000000000000000000815250843073ffffffffffffffffffffffffffffffffffffffff1663140930ef8484846040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610cfb939291906131d7565b602060405180830381600087803b158015610d1557600080fd5b505af1158015610d29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610d4d91908101906129fc565b610d95836040805190810160405280601c81526020017f426173654163636f756e74486f6c6465723a466f7262626964656e2000000000815250611ced90919063ffffffff16565b901515610dd8576040517fc703cb12000000000000000000000000000000000000000000000000000000008152600401610dcf9190613333565b60405180910390fd5b50600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ba1d32988b8b8b8b6040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610e5694939291906130bb565b600060405180830381600087803b158015610e7057600080fd5b505af1158015610e84573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250610ead9190810190612ad9565b945094505050509550959350505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610f695750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b1515610faa576040517fc703cb12000000000000000000000000000000000000000000000000000000008152600401610fa190613355565b60405180910390fd5b610fb2610ba0565b1515610ff3576040517fc703cb12000000000000000000000000000000000000000000000000000000008152600401610fea90613395565b60405180910390fd5b6001600260146101000a81548160ff021916908360ff1602179055507f667265657a6500000000000000000000000000000000000000000000000000007f598b76607bab91793e04db590052049ff4ca46cfc234328da5536f5169790af73060405161105f9190613318565b60405180910390a26001905090565b6060846040805190810160405280600f81526020017f6765744163636f756e744e6f7465730000000000000000000000000000000000815250833073ffffffffffffffffffffffffffffffffffffffff1663140930ef8484846040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611101939291906131d7565b602060405180830381600087803b15801561111b57600080fd5b505af115801561112f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061115391908101906129fc565b61119b836040805190810160405280601c81526020017f426173654163636f756e74486f6c6465723a466f7262626964656e2000000000815250611ced90919063ffffffff16565b9015156111de576040517fc703cb120000000000000000000000000000000000000000000000000000000081526004016111d59190613333565b60405180910390fd5b50600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c241460689308a8a6040518563ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161125c9493929190613076565b600060405180830381600087803b15801561127657600080fd5b505af115801561128a573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506112b391908101906129bb565b9350505050949350505050565b60006112ca6120cb565b876040805190810160405280600881526020017f7472616e73666572000000000000000000000000000000000000000000000000815250843073ffffffffffffffffffffffffffffffffffffffff1663140930ef8484846040518463ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161135b939291906131d7565b602060405180830381600087803b15801561137557600080fd5b505af1158015611389573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506113ad91908101906129fc565b6113f5836040805190810160405280601c81526020017f426173654163636f756e74486f6c6465723a466f7262626964656e2000000000815250611ced90919063ffffffff16565b901515611438576040517fc703cb1200000000000000000000000000000000000000000000000000000000815260040161142f9190613333565b60405180910390fd5b50600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630a1f84b48c8c8c8c8c6040518663ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016114b8959493929190613115565b606060405180830381600087803b1580156114d257600080fd5b505af11580156114e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061150a9190810190612a9d565b94509450505050965096945050505050565b6060856040805190810160405280600981526020017f7175657279426f6f6b0000000000000000000000000000000000000000000000815250833073ffffffffffffffffffffffffffffffffffffffff1663140930ef8484846040518463ffffffff167c01000000000000000000000000","","92915050565b600082601f83011215156125a657600080fd5b81516125b96125b482613570565b61340b565b915080825260208301602083018583830111156125d557600080fd5b6125e083828461377c565b50505092915050565b60006125f58235613751565b905092915050565b60006126098251613751565b905092915050565b60006020828403121561262357600080fd5b6000612631848285016120ed565b91505092915050565b6000806000806000610100868803121561265357600080fd5b6000612661888289016120ed565b955050602086013567ffffffffffffffff81111561267e57600080fd5b61268a88828901612101565b945050604086013567ffffffffffffffff8111156126a757600080fd5b6126b3888289016123e3565b935050606086013567ffffffffffffffff8111156126d057600080fd5b6126dc888289016121fc565b92505060806126ed88828901612186565b9150509295509295909350565b600080600080600080610120878903121561271457600080fd5b600061272289828a016120ed565b965050602087013567ffffffffffffffff81111561273f57600080fd5b61274b89828a01612101565b955050604061275c89828a016125e9565b945050606087013567ffffffffffffffff81111561277957600080fd5b61278589828a01612272565b935050608087013567ffffffffffffffff8111156127a257600080fd5b6127ae89828a016121fc565b92505060a06127bf89828a01612186565b9150509295509295509295565b60008060a083850312156127df57600080fd5b60006127ed858286016120ed565b92505060206127fe85828601612186565b9150509250929050565b6000806000806000610100868803121561282157600080fd5b600061282f888289016120ed565b955050602086013567ffffffffffffffff81111561284c57600080fd5b612858888289016123e3565b945050604086013567ffffffffffffffff81111561287557600080fd5b61288188828901612101565b935050606086013567ffffffffffffffff81111561289e57600080fd5b6128aa88828901612272565b92505060806128bb88828901612186565b9150509295509295909350565b600080600060c084860312156128dd57600080fd5b60006128eb868287016120ed565b93505060206128fc868287016125e9565b925050604061290d86828701612186565b9150509250925092565b60008060008060e0858703121561292d57600080fd5b600061293b878288016120ed565b945050602061294c878288016125e9565b935050604061295d878288016125e9565b925050606061296e87828801612186565b91505092959194509250565b60006020828403121561298c57600080fd5b600082015167ffffffffffffffff8111156129a657600080fd5b6129b2848285016122f7565b91505092915050565b6000602082840312156129cd57600080fd5b600082015167ffffffffffffffff8111156129e757600080fd5b6129f384828501612468565b91505092915050565b600060208284031215612a0e57600080fd5b6000612a1c84828501612501565b91505092915050565b60008060408385031215612a3857600080fd5b6000612a46858286016124ed565b9250506020612a57858286016120ed565b9150509250929050565b60008060a08385031215612a7457600080fd5b6000612a82858286016124ed565b9250506020612a9385828601612186565b9150509250929050565b60008060608385031215612ab057600080fd5b6000612abe85828601612501565b9250506020612acf8582860161236d565b9150509250929050565b60008060408385031215612aec57600080fd5b6000612afa85828601612501565b925050602083015167ffffffffffffffff811115612b1757600080fd5b612b2385828601612468565b9150509250929050565b600060208284031215612b3f57600080fd5b6000612b4d848285016125fd565b91505092915050565b612b5f816136ba565b82525050565b6000612b70826135f1565b808452602084019350612b828361359c565b60005b82811015612bb457612b98868351612b56565b612ba18261365f565b9150602086019550600181019050612b85565b50849250505092915050565b612bc9816135fc565b612bd2826135a9565b60005b82811015612c0457612be8858351612df7565b612bf18261366c565b9150602085019450600181019050612bd5565b5050505050565b6000612c1682613607565b80845260208401935083602082028501612c2f856135b3565b60005b84811015612c68578383038852612c4a838351612e06565b9250612c5582613679565b9150602088019750600181019050612c32565b508196508694505050505092915050565b6000612c8482613612565b808452602084019350612c96836135c0565b60005b82811015612cc857612cac868351612e4b565b612cb582613686565b9150602086019550600181019050612c99565b50849250505092915050565b6000612cdf8261361d565b80845260208401935083602082028501612cf8856135cd565b60005b84811015612d31578383038852612d13838351612e90565b9250612d1e82613693565b9150602088019750600181019050612cfb565b508196508694505050505092915050565b612d4b81613628565b612d54826135da565b60005b82811015612d8657612d6a858351613014565b612d73826136a0565b9150602085019450600181019050612d57565b5050505050565b6000612d9882613633565b808452602084019350612daa836135e4565b60005b82811015612ddc57612dc0868351613014565b612dc9826136ad565b9150602086019550600181019050612dad565b50849250505092915050565b612df1816136da565b82525050565b612e00816136e6565b82525050565b6000612e118261363e565b808452612e2581602086016020860161377c565b612e2e816137af565b602085010191505092915050565b612e458161375b565b82525050565b612e54816136f0565b82525050565b6000612e6582613654565b808452612e7981602086016020860161377c565b612e82816137af565b602085010191505092915050565b6000612e9b82613649565b808452612eaf81602086016020860161377c565b612eb8816137af565b602085010191505092915050565b6000602282527f426173654163636f756e743a206f6e6c79206163636f756e74206d616e61676560208301527f722e0000000000000000000000000000000000000000000000000000000000006040830152606082019050919050565b6000601d82527f416464726573735365743a204b65792063616e6e6f74206265203078300000006020830152604082019050919050565b6000602b82527f426173654163636f756e743a206f6e6c79206163636f756e742073746174757360208301527f206973206e6f726d616c2e0000000000000000000000000000000000000000006040830152606082019050919050565b6000602982527f574542617369634163636f756e743a206f6e6c79206f776e657220697320617560208301527f74686f72697a65642e00000000000000000000000000000000000000000000006040830152606082019050919050565b61301d816136fa565b82525050565b61302c81613704565b82525050565b60006020820190506130476000830184612b56565b92915050565b60006040820190506130626000830185612b56565b61306f6020830184612b56565b9392505050565b600060808201905061308b6000830187612b56565b6130986020830186612b56565b6130a56040830185613014565b6130b26060830184613014565b95945050505050565b60006080820190506130d06000830187612b56565b81810360208301526130e28186612b65565b905081810360408301526130f68185612d8d565b9050818103606083015261310a8184612c0b565b905095945050505050565b600060a08201905061312a6000830188612b56565b818103602083015261313c8187612b65565b905061314b6040830186613014565b818103606083015261315d8185612c79565b905081810360808301526131718184612c0b565b90509695505050505050565b60006080820190506131926000830187612b56565b81810360208301526131a48186612d8d565b905081810360408301526131b88185612b65565b905081810360608301526131cc8184612c79565b905095945050505050565b600060c0820190506131ec6000830186612b56565b81810360208301526131fe8185612e5a565b905061320d6040830184612bc0565b949350505050565b600060408201905061322a6000830185612b56565b6132376020830184613014565b9392505050565b600060208201905081810360008301526132588184612b65565b905092915050565b6000602082019050818103600083015261327a8184612cd4565b905092915050565b6000602082019050818103600083015261329c8184612d8d565b905092915050565b60006020820190506132b96000830184612de8565b92915050565b60006060820190506132d46000830185612de8565b6132e16020830184612d42565b9392505050565b60006040820190506132fd6000830185612de8565b818103602083015261330f8184612d8d565b90509392505050565b600060208201905061332d6000830184612e3c565b92915050565b6000602082019050818103600083015261334d8184612e5a565b905092915050565b6000602082019050818103600083015261336e81612ec6565b9050919050565b6000602082019050818103600083015261338e81612f23565b9050919050565b600060208201905081810360008301526133ae81612f5a565b9050919050565b600060208201905081810360008301526133ce81612fb7565b9050919050565b60006020820190506133ea6000830184613014565b92915050565b60006020820190506134056000830184613023565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561342e57600080fd5b8060405250919050565b600067ffffffffffffffff82111561344f57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561347757600080fd5b602082029050919050565b600067ffffffffffffffff82111561349957600080fd5b602082029050602081019050919050565b600067ffffffffffffffff8211156134c157600080fd5b602082029050602081019050919050565b600067ffffffffffffffff8211156134e957600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561351157600080fd5b602082029050919050565b600067ffffffffffffffff82111561353357600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561355b57600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561358757600080fd5b601f19601f83","01169050602081019050919050565b6000602082019050919050565b6000819050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000819050919050565b6000602082019050919050565b600081519050919050565b600060049050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600060029050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b6000819050919050565b6000819050919050565b600060ff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b6000819050919050565b6000819050919050565b6000613766826136ba565b9050919050565b82818337600083830152505050565b60005b8381101561379a57808201518184015260208101905061377f565b838111156137a9576000848401525b50505050565b6000601f19601f83011690509190505600a265627a7a72305820637309b401e97ffdf2bf1c2a6ab1ae194d697e5f366d49ed9f027169b901f5cd6c6578706572696d656e74616cf50037a165627a7a723058204bd24c5a8f62023cb8cf54711ef547f5b5ea34c5574d8f27245c06a16da77c9a0029"};

    public static final String SM_BINARY = String.join("", SM_BINARY_ARRAY);

    public static final String[] ABI_ARRAY = {"[{\"constant\":false,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"accountAddr\",\"type\":\"address\"}],\"name\":\"unfreeze\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"project\",\"type\":\"address\"},{\"name\":\"holderId\",\"type\":\"address\"}],\"name\":\"newAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"accountAddr\",\"type\":\"address\"}],\"name\":\"unfreezeByAdmin\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"accountAddr\",\"type\":\"address\"}],\"name\":\"freezeByAdmin\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"accountAddr\",\"type\":\"address\"}],\"name\":\"freeze\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"cancelByUser\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"accountAddr\",\"type\":\"address\"}],\"name\":\"cancelByGovernance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"accountAddr\",\"type\":\"address\"}],\"name\":\"hasAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"accountAddr\",\"type\":\"address\"}],\"name\":\"cancelByAdmin\",\"outputs\":[{\"name\":\"b\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"accountAddr\",\"type\":\"address\"}],\"name\":\"isExternalAccountNormal\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"externalAccount\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"userAccount\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"accountAddrManagerAddress\",\"type\":\"address\"}],\"name\":\"LogManageNewAccount\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"newExternalAccount\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"oldExternalAccount\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"accountAddrManagerAddress\",\"type\":\"address\"}],\"name\":\"LogManageExternalAccount\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"externalAccount\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"accountAddrManagerAddress\",\"type\":\"address\"}],\"name\":\"LogManageFreeze\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"externalAccount\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"accountAddrManagerAddress\",\"type\":\"address\"}],\"name\":\"LogManageUnfreeze\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"externalAccount\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"accountAddrManagerAddress\",\"type\":\"address\"}],\"name\":\"LogManageCancel\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"}]"};

    public static final String ABI = String.join("", ABI_ARRAY);

    public static final String FUNC_SETOWNER = "setOwner";

    public static final String FUNC_UNFREEZE = "unfreeze";

    public static final String FUNC_NEWACCOUNT = "newAccount";

    public static final String FUNC_UNFREEZEBYADMIN = "unfreezeByAdmin";

    public static final String FUNC_FREEZEBYADMIN = "freezeByAdmin";

    public static final String FUNC_FREEZE = "freeze";

    public static final String FUNC_CANCELBYUSER = "cancelByUser";

    public static final String FUNC__OWNER = "_owner";

    public static final String FUNC_CANCELBYGOVERNANCE = "cancelByGovernance";

    public static final String FUNC_HASACCOUNT = "hasAccount";

    public static final String FUNC_CANCELBYADMIN = "cancelByAdmin";

    public static final String FUNC_ISEXTERNALACCOUNTNORMAL = "isExternalAccountNormal";

    public static final Event LOGMANAGENEWACCOUNT_EVENT = new Event("LogManageNewAccount", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}, new TypeReference<Address>() {}));
    ;

    public static final Event LOGMANAGEEXTERNALACCOUNT_EVENT = new Event("LogManageExternalAccount", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}, new TypeReference<Address>() {}));
    ;

    public static final Event LOGMANAGEFREEZE_EVENT = new Event("LogManageFreeze", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Address>() {}));
    ;

    public static final Event LOGMANAGEUNFREEZE_EVENT = new Event("LogManageUnfreeze", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Address>() {}));
    ;

    public static final Event LOGMANAGECANCEL_EVENT = new Event("LogManageCancel", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Address>() {}));
    ;

    public static final Event LOGSETOWNER_EVENT = new Event("LogSetOwner", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}));
    ;

    protected AccountManager(String contractAddress, Client client, CryptoKeyPair credential) {
        super(getBinary(client.getCryptoSuite()), contractAddress, client, credential);
    }

    public static String getBinary(CryptoSuite cryptoSuite) {
        return (cryptoSuite.getCryptoTypeConfig() == CryptoType.ECDSA_TYPE ? BINARY : SM_BINARY);
    }

    public TransactionReceipt setOwner(String owner) {
        final Function function = new Function(
                FUNC_SETOWNER, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(owner)), 
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void setOwner(String owner, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_SETOWNER, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(owner)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForSetOwner(String owner) {
        final Function function = new Function(
                FUNC_SETOWNER, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(owner)), 
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<String> getSetOwnerInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_SETOWNER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>(

                (String) results.get(0).getValue()
                );
    }

    public TransactionReceipt unfreeze(String accountAddr) {
        final Function function = new Function(
                FUNC_UNFREEZE, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(accountAddr)), 
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void unfreeze(String accountAddr, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_UNFREEZE, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(accountAddr)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForUnfreeze(String accountAddr) {
        final Function function = new Function(
                FUNC_UNFREEZE, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(accountAddr)), 
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<String> getUnfreezeInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_UNFREEZE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>(

                (String) results.get(0).getValue()
                );
    }

    public Tuple1<Boolean> getUnfreezeOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_UNFREEZE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<Boolean>(

                (Boolean) results.get(0).getValue()
                );
    }

    public TransactionReceipt newAccount(String project, String holderId) {
        final Function function = new Function(
                FUNC_NEWACCOUNT, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(project), 
                new org.fisco.bcos.sdk.abi.datatypes.Address(holderId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void newAccount(String project, String holderId, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_NEWACCOUNT, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(project), 
                new org.fisco.bcos.sdk.abi.datatypes.Address(holderId)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForNewAccount(String project, String holderId) {
        final Function function = new Function(
                FUNC_NEWACCOUNT, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(project), 
                new org.fisco.bcos.sdk.abi.datatypes.Address(holderId)), 
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple2<String, String> getNewAccountInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_NEWACCOUNT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Address>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<String, String>(

                (String) results.get(0).getValue(), 
                (String) results.get(1).getValue()
                );
    }

    public Tuple2<Boolean, String> getNewAccountOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_NEWACCOUNT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}, new TypeReference<Address>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<Boolean, String>(

                (Boolean) results.get(0).getValue(), 
                (String) results.get(1).getValue()
                );
    }

    public TransactionReceipt unfreezeByAdmin(String accountAddr) {
        final Function function = new Function(
                FUNC_UNFREEZEBYADMIN, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(accountAddr)), 
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void unfreezeByAdmin(String accountAddr, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_UNFREEZEBYADMIN, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(accountAddr)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForUnfreezeByAdmin(String accountAddr) {
        final Function function = new Function(
                FUNC_UNFREEZEBYADMIN, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(accountAddr)), 
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<String> getUnfreezeByAdminInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_UNFREEZEBYADMIN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>(

                (String) results.get(0).getValue()
                );
    }

    public Tuple1<Boolean> getUnfreezeByAdminOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_UNFREEZEBYADMIN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<Boolean>(

                (Boolean) results.get(0).getValue()
                );
    }

    public TransactionReceipt freezeByAdmin(String accountAddr) {
        final Function function = new Function(
                FUNC_FREEZEBYADMIN, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(accountAddr)), 
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void freezeByAdmin(String accountAddr, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_FREEZEBYADMIN, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(accountAddr)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForFreezeByAdmin(String accountAddr) {
        final Function function = new Function(
                FUNC_FREEZEBYADMIN, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(accountAddr)), 
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<String> getFreezeByAdminInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_FREEZEBYADMIN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>(

                (String) results.get(0).getValue()
                );
    }

    public Tuple1<Boolean> getFreezeByAdminOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_FREEZEBYADMIN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<Boolean>(

                (Boolean) results.get(0).getValue()
                );
    }

    public TransactionReceipt freeze(String accountAddr) {
        final Function function = new Function(
                FUNC_FREEZE, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(accountAddr)), 
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void freeze(String accountAddr, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_FREEZE, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(accountAddr)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForFreeze(String accountAddr) {
        final Function function = new Function(
                FUNC_FREEZE, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(accountAddr)), 
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<String> getFreezeInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_FREEZE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>(

                (String) results.get(0).getValue()
                );
    }

    public Tuple1<Boolean> getFreezeOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_FREEZE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<Boolean>(

                (Boolean) results.get(0).getValue()
                );
    }

    public TransactionReceipt cancelByUser() {
        final Function function = new Function(
                FUNC_CANCELBYUSER, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void cancelByUser(TransactionCallback callback) {
        final Function function = new Function(
                FUNC_CANCELBYUSER, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForCancelByUser() {
        final Function function = new Function(
                FUNC_CANCELBYUSER, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<Boolean> getCancelByUserOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_CANCELBYUSER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<Boolean>(

                (Boolean) results.get(0).getValue()
                );
    }

    public String _owner() throws ContractException {
        final Function function = new Function(FUNC__OWNER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public TransactionReceipt cancelByGovernance(String accountAddr) {
        final Function function = new Function(
                FUNC_CANCELBYGOVERNANCE, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(accountAddr)), 
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void cancelByGovernance(String accountAddr, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_CANCELBYGOVERNANCE, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(accountAddr)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForCancelByGovernance(String accountAddr) {
        final Function function = new Function(
                FUNC_CANCELBYGOVERNANCE, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(accountAddr)), 
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<String> getCancelByGovernanceInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_CANCELBYGOVERNANCE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>(

                (String) results.get(0).getValue()
                );
    }

    public Tuple1<Boolean> getCancelByGovernanceOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_CANCELBYGOVERNANCE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<Boolean>(

                (Boolean) results.get(0).getValue()
                );
    }

    public Boolean hasAccount(String accountAddr) throws ContractException {
        final Function function = new Function(FUNC_HASACCOUNT, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(accountAddr)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeCallWithSingleValueReturn(function, Boolean.class);
    }

    public TransactionReceipt cancelByAdmin(String accountAddr) {
        final Function function = new Function(
                FUNC_CANCELBYADMIN, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(accountAddr)), 
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void cancelByAdmin(String accountAddr, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_CANCELBYADMIN, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(accountAddr)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForCancelByAdmin(String accountAddr) {
        final Function function = new Function(
                FUNC_CANCELBYADMIN, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(accountAddr)), 
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<String> getCancelByAdminInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_CANCELBYADMIN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>(

                (String) results.get(0).getValue()
                );
    }

    public Tuple1<Boolean> getCancelByAdminOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_CANCELBYADMIN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<Boolean>(

                (Boolean) results.get(0).getValue()
                );
    }

    public Boolean isExternalAccountNormal(String accountAddr) throws ContractException {
        final Function function = new Function(FUNC_ISEXTERNALACCOUNTNORMAL, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(accountAddr)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeCallWithSingleValueReturn(function, Boolean.class);
    }

    public List<LogManageNewAccountEventResponse> getLogManageNewAccountEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(LOGMANAGENEWACCOUNT_EVENT, transactionReceipt);
        ArrayList<LogManageNewAccountEventResponse> responses = new ArrayList<LogManageNewAccountEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            LogManageNewAccountEventResponse typedResponse = new LogManageNewAccountEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.externalAccount = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.userAccount = (String) eventValues.getIndexedValues().get(1).getValue();
            typedResponse.accountAddrManagerAddress = (String) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeLogManageNewAccountEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(LOGMANAGENEWACCOUNT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeLogManageNewAccountEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(LOGMANAGENEWACCOUNT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public List<LogManageExternalAccountEventResponse> getLogManageExternalAccountEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(LOGMANAGEEXTERNALACCOUNT_EVENT, transactionReceipt);
        ArrayList<LogManageExternalAccountEventResponse> responses = new ArrayList<LogManageExternalAccountEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            LogManageExternalAccountEventResponse typedResponse = new LogManageExternalAccountEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.newExternalAccount = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.oldExternalAccount = (String) eventValues.getIndexedValues().get(1).getValue();
            typedResponse.accountAddrManagerAddress = (String) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeLogManageExternalAccountEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(LOGMANAGEEXTERNALACCOUNT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeLogManageExternalAccountEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(LOGMANAGEEXTERNALACCOUNT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public List<LogManageFreezeEventResponse> getLogManageFreezeEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(LOGMANAGEFREEZE_EVENT, transactionReceipt);
        ArrayList<LogManageFreezeEventResponse> responses = new ArrayList<LogManageFreezeEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            LogManageFreezeEventResponse typedResponse = new LogManageFreezeEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.externalAccount = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.accountAddrManagerAddress = (String) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeLogManageFreezeEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(LOGMANAGEFREEZE_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeLogManageFreezeEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(LOGMANAGEFREEZE_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public List<LogManageUnfreezeEventResponse> getLogManageUnfreezeEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(LOGMANAGEUNFREEZE_EVENT, transactionReceipt);
        ArrayList<LogManageUnfreezeEventResponse> responses = new ArrayList<LogManageUnfreezeEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            LogManageUnfreezeEventResponse typedResponse = new LogManageUnfreezeEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.externalAccount = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.accountAddrManagerAddress = (String) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeLogManageUnfreezeEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(LOGMANAGEUNFREEZE_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeLogManageUnfreezeEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(LOGMANAGEUNFREEZE_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public List<LogManageCancelEventResponse> getLogManageCancelEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(LOGMANAGECANCEL_EVENT, transactionReceipt);
        ArrayList<LogManageCancelEventResponse> responses = new ArrayList<LogManageCancelEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            LogManageCancelEventResponse typedResponse = new LogManageCancelEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.externalAccount = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.accountAddrManagerAddress = (String) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeLogManageCancelEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(LOGMANAGECANCEL_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeLogManageCancelEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(LOGMANAGECANCEL_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public List<LogSetOwnerEventResponse> getLogSetOwnerEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(LOGSETOWNER_EVENT, transactionReceipt);
        ArrayList<LogSetOwnerEventResponse> responses = new ArrayList<LogSetOwnerEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            LogSetOwnerEventResponse typedResponse = new LogSetOwnerEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.owner = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.contractAddress = (String) eventValues.getIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeLogSetOwnerEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(LOGSETOWNER_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeLogSetOwnerEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(LOGSETOWNER_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public static AccountManager load(String contractAddress, Client client, CryptoKeyPair credential) {
        return new AccountManager(contractAddress, client, credential);
    }

    public static AccountManager deploy(Client client, CryptoKeyPair credential) throws ContractException {
        return deploy(AccountManager.class, client, credential, getBinary(client.getCryptoSuite()), "");
    }

    public static class LogManageNewAccountEventResponse {
        public TransactionReceipt.Logs log;

        public String externalAccount;

        public String userAccount;

        public String accountAddrManagerAddress;
    }

    public static class LogManageExternalAccountEventResponse {
        public TransactionReceipt.Logs log;

        public String newExternalAccount;

        public String oldExternalAccount;

        public String accountAddrManagerAddress;
    }

    public static class LogManageFreezeEventResponse {
        public TransactionReceipt.Logs log;

        public String externalAccount;

        public String accountAddrManagerAddress;
    }

    public static class LogManageUnfreezeEventResponse {
        public TransactionReceipt.Logs log;

        public String externalAccount;

        public String accountAddrManagerAddress;
    }

    public static class LogManageCancelEventResponse {
        public TransactionReceipt.Logs log;

        public String externalAccount;

        public String accountAddrManagerAddress;
    }

    public static class LogSetOwnerEventResponse {
        public TransactionReceipt.Logs log;

        public String owner;

        public String contractAddress;
    }
}
