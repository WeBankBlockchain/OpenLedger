package com.webank.openledger.contractsbak;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import com.webank.openledger.core.common.BaseAsset;

import org.fisco.bcos.sdk.abi.FunctionEncoder;
import org.fisco.bcos.sdk.abi.FunctionReturnDecoder;
import org.fisco.bcos.sdk.abi.TypeReference;
import org.fisco.bcos.sdk.abi.datatypes.Address;
import org.fisco.bcos.sdk.abi.datatypes.Bool;
import org.fisco.bcos.sdk.abi.datatypes.DynamicArray;
import org.fisco.bcos.sdk.abi.datatypes.DynamicBytes;
import org.fisco.bcos.sdk.abi.datatypes.Event;
import org.fisco.bcos.sdk.abi.datatypes.Function;
import org.fisco.bcos.sdk.abi.datatypes.Type;
import org.fisco.bcos.sdk.abi.datatypes.Utf8String;
import org.fisco.bcos.sdk.abi.datatypes.generated.Bytes32;
import org.fisco.bcos.sdk.abi.datatypes.generated.Int256;
import org.fisco.bcos.sdk.abi.datatypes.generated.StaticArray2;
import org.fisco.bcos.sdk.abi.datatypes.generated.StaticArray4;
import org.fisco.bcos.sdk.abi.datatypes.generated.Uint256;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple1;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple2;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple3;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple5;
import org.fisco.bcos.sdk.client.Client;
import org.fisco.bcos.sdk.contract.Contract;
import org.fisco.bcos.sdk.crypto.CryptoSuite;
import org.fisco.bcos.sdk.crypto.keypair.CryptoKeyPair;
import org.fisco.bcos.sdk.eventsub.EventCallback;
import org.fisco.bcos.sdk.model.CryptoType;
import org.fisco.bcos.sdk.model.TransactionReceipt;
import org.fisco.bcos.sdk.model.callback.TransactionCallback;
import org.fisco.bcos.sdk.transaction.model.exception.ContractException;

@SuppressWarnings("unchecked")
public class FungibleAsset extends Contract implements BaseAsset {
    public static final String[] BINARY_ARRAY = {"","","","565b151561179d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161179490619cce565b60405180910390fd5b6117b38383601b6166ff9092919063ffffffff16565b905092915050565b60118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156118515780601f1061182657610100808354040283529160200191611851565b820191906000526020600020905b81548152906001019060200180831161183457829003601f168201915b505050505081565b6060806000806000806060600080601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c04d4ef3601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16308b8e6040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611906949392919061976a565b6040805180830381600087803b15801561191f57600080fd5b505af1158015611933573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611957919081019061827f565b80975081985050508515156119a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161199890619b2e565b60405180910390fd5b601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166369921c26886040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611a18919061935e565b602060405180830381600087803b158015611a3257600080fd5b505af1158015611a46573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611a6a91908101906184d1565b1515611aab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611aa290619b8e565b60405180910390fd5b60028b51148015611aeb57508a6001815181101515611ac657fe5b906020019060200201518b6000815181101515611adf57fe5b90602001906020020151125b1515611b2c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b2390619c2e565b60405180910390fd5b60008c511115611ba657600093505b8b51841015611ba5578b84815181101515611b5257fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff161415611b985760019450611ba5565b8380600101945050611b3b565b5b841515611c7957601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634768e049886040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611c24919061935e565b602060405180830381600087803b158015611c3e57600080fd5b505af1158015611c52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611c7691908101906184d1565b94505b841515611cbb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cb290619aae565b60405180910390fd5b60006023805490501415611cd1578298506121a0565b60008c51118015611d275750600073ffffffffffffffffffffffffffffffffffffffff168c6000815181101515611d0457fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1614155b15611ece57601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a3793a618d6000815181101515611d7957fe5b906020019060200201516040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611dbb919061935e565b602060405180830381600087803b158015611dd557600080fd5b505af1158015611de9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611e0d919081019061821a565b9150600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611e81576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e7890619b0e565b60405180910390fd5b818c6000815181101515611e9157fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b60018c51118015611f245750600073ffffffffffffffffffffffffffffffffffffffff168c6001815181101515611f0157fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1614155b156120cb57601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a3793a618d6001815181101515611f7657fe5b906020019060200201516040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611fb8919061935e565b602060405180830381600087803b158015611fd257600080fd5b505af1158015611fe6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061200a919081019061821a565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561207e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161207590619d0e565b60405180910390fd5b808c600181518110151561208e57fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b602260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663521ae5368e8e8e6040518463ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161214693929190619951565b600060405180830381600087803b15801561216057600080fd5b505af1158015612174573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525061219d91908101906183e5565b98505b5050505050505050949350505050565b600a8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156122465780601f1061221b57610100808354040283529160200191612246565b820191906000526020600020905b81548152906001019060200180831161222957829003601f168201915b505050505081565b60128054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156122e45780601f106122b9576101008083540402835291602001916122e4565b820191906000526020600020905b8154815290600101906020018083116122c757829003601f168201915b505050505081565b60285481565b60038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156123885780601f1061235d57610100808354040283529160200191612388565b820191906000526020600020905b81548152906001019060200180831161236b57829003601f168201915b505050505081565b600030905090565b60028054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561242e5780601f106124035761010080835404028352916020019161242e565b820191906000526020600020905b81548152906001019060200180831161241157829003601f168201915b505050505081565b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156124cc5780601f106124a1576101008083540402835291602001916124cc565b820191906000526020600020905b8154815290600101906020018083116124af57829003601f168201915b505050505081565b6000601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166337258c0d33601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16306125e660048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156125d25780601f106125a7576101008083540402835291602001916125d2565b820191906000526020600020905b8154815290600101906020018083116125b557829003601f168201915b5050505050896166eb90919063ffffffff16565b6040518563ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016126219493929190619379565b602060405180830381600087803b15801561263b57600080fd5b505af115801561264f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061267391908101906184d1565b15156126b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126ab90619dce565b60405180910390fd5b6126ca8383601b616a5c9092919063ffffffff16565b905092915050565b60006060600080601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c04d4ef3601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163086896040518563ffffffff167c010000000000000000000000000000000000","0000000000000000000000028152600401612778949392919061970a565b6040805180830381600087803b15801561279157600080fd5b505af11580156127a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506127c9919081019061827f565b8092508193505050801515612813576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161280a90619ace565b60405180910390fd5b601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166369921c26836040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161288a919061935e565b602060405180830381600087803b1580156128a457600080fd5b505af11580156128b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506128dc91908101906184d1565b151561291d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161291490619b8e565b60405180910390fd5b602260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e953d0af6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156129a357600080fd5b505af11580156129b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506129db91908101906186b6565b9350505050919050565b6000601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612aa55780601f10612a7a57610100808354040283529160200191612aa5565b820191906000526020600020905b815481529060010190602001808311612a8857829003601f168201915b505050505081565b6000601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166337258c0d33601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1630612bbf60048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612bab5780601f10612b8057610100808354040283529160200191612bab565b820191906000526020600020905b815481529060010190602001808311612b8e57829003601f168201915b5050505050886166eb90919063ffffffff16565b6040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612bfa9493929190619379565b602060405180830381600087803b158015612c1457600080fd5b505af1158015612c28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612c4c91908101906184d1565b1515612c8d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c8490619bce565b60405180910390fd5b612ca182601b616c5190919063ffffffff16565b9050919050565b601860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600f8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612d645780601f10612d3957610100808354040283529160200191612d64565b820191906000526020600020905b815481529060010190602001808311612d4757829003601f168201915b505050505081565b601960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006060600080612dac8684616ea390919063ffffffff16565b9250601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c04d4ef3601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163086896040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612e4d9493929190619586565b6040805180830381600087803b158015612e6657600080fd5b505af1158015612e7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612e9e919081019061827f565b8092508193505050801515612ee8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612edf90619d8e565b60405180910390fd5b85602781905550602754935050505092915050565b60006060600080612f1786846166eb90919063ffffffff16565b9250601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c04d4ef3601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163061302860048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156130145780601f10612fe957610100808354040283529160200191613014565b820191906000526020600020905b815481529060010190602001808311612ff757829003601f168201915b50505050508b6166eb90919063ffffffff16565b878a6040518663ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016130669594939291906195e6565b6040805180830381600087803b15801561307f57600080fd5b505af1158015613093573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506130b7919081019061827f565b8092508193505050801515613101576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016130f890619bce565b60405180910390fd5b61311586601b616c5190919063ffffffff16565b935050505092915050565b6000606060008061313a8684616ea390919063ffffffff16565b9250601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c04d4ef3601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163086896040518563ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016131db9493929190619526565b6040805180830381600087803b1580156131f457600080fd5b505af1158015613208573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061322c919081019061827f565b8092508193505050801515613276576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161326d90619bae565b60405180910390fd5b85602881905550602854935050505092915050565b60158054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156133215780601f106132f657610100808354040283529160200191613321565b820191906000526020600020905b81548152906001019060200180831161330457829003601f168201915b505050505081565b60608060008061334286846166eb90919063ffffffff16565b9250601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c04d4ef3601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163061345360038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561343f5780601f106134145761010080835404028352916020019161343f565b820191906000526020600020905b81548152906001019060200180831161342257829003601f168201915b50505050508b6166eb90919063ffffffff16565b878a6040518663ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016134919594939291906195e6565b6040805180830381600087803b1580156134aa57600080fd5b505af11580156134be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506134e2919081019061827f565b809250819350505080151561352c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161352390619c6e565b60405180910390fd5b61354086601b616ebf90919063ffffffff16565b935050505092915050565b6000613555617ba1565b600060606000613563617ba1565b6135a68b8b8b8b8b6040805190810160405280600a81526020017f7769746864726177616c000000000000000000000000000000000000000000008152506164de565b9a508a60028151811015156135b757fe5b906020019060200201519350602460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515613651576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161364890619c4e565b60405180910390fd5b6136a38a602560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054616fd290919063ffffffff16565b602560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060026040519080825280602002602001820160405280156137165781602001602082028038833980820191505090505b509250600183600081518110151561372a57fe5b906020019060200201818152505088600081518110151561374757fe5b90602001906020020151836001815181101515","61376057fe5b90602001906020020181815250507fb6e26e54bd578616699ab07efb4c2e322b45a80673803bbb259443d9fecee652848b60405161379f92919061988a565b60405180910390a1602260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318d6f1718c8c8b876040518563ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161382494939291906198d5565b606060405180830381600087803b15801561383e57600080fd5b505af1158015613852573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061387691908101906184fa565b80925081935050507f6acb627e94f15db3e6d10b82668ddd36dc340d2d921352d5e3a166bc08babada8160006002811015156138ae57fe5b60200201518260016002811015156138c257fe5b60200201518d60028151811015156138d657fe5b906020019060200201518e60038151811015156138ef57fe5b906020019060200201518e60405161390b959493929190619e09565b60405180910390a1818195509550505050509550959350505050565b6000613933601b617029565b905090565b60138054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156139ce5780601f106139a3576101008083540402835291602001916139ce565b820191906000526020600020905b8154815290600101906020018083116139b157829003601f168201915b505050505081565b60006139e0617ba1565b606060006139ec617ba1565b613a2f8a8a8a8a8a6040805190810160405280600881526020017f7472616e73666572000000000000000000000000000000000000000000000000815250617037565b9950602460008b6002815181101515613a4457fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515613ad7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613ace90619c4e565b60405180910390fd5b602460008b6003815181101515613aea57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515613b7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613b7490619c4e565b60405180910390fd5b613be789602560008d6002815181101515613b9457fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054616fd290919063ffffffff16565b602560008c6002815181101515613bfa57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550613cac89602560008d6003815181101515613c5957fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461648790919063ffffffff16565b602560008c6003815181101515613cbf57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506002604051908082528060200260200182016040528015613d375781602001602082028038833980820191505090505b5092506002836000815181101515613d4b57fe5b9060200190602002018181525050876000815181101515613d6857fe5b90602001906020020151836001815181101515613d8157fe5b90602001906020020181815250507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8a6002815181101515613dbf57fe5b906020019060200201518b6003815181101515613dd857fe5b906020019060200201518b604051613df2939291906194ef565b60405180910390a1602260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318d6f1718b8b8a876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401613e7794939291906198d5565b606060405180830381600087803b158015613e9157600080fd5b505af1158015613ea5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250613ec991908101906184fa565b80925081935050507f6acb627e94f15db3e6d10b82668ddd36dc340d2d921352d5e3a166bc08babada816000600281101515613f0157fe5b6020020151826001600281101515613f1557fe5b60200201518c6002815181101515613f2957fe5b906020019060200201518d6003815181101515613f4257fe5b906020019060200201518d604051613f5e959493929190619e09565b60405180910390a18181945094505050509550959350505050565b60098054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561400f5780601f10613fe45761010080835404028352916020019161400f565b820191906000526020600020905b815481529060010190602001808311613ff257829003601f168201915b505050505081565b60275481565b6000806060600080601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a3793a61886040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161409c919061935e565b602060405180830381600087803b1580156140b657600080fd5b505af11580156140ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506140ee919081019061821a565b9350602460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561417e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161417590619c4e565b60405180910390fd5b601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c04d4ef3601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1686868a6040518563ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161421d949392919061948f565b6040805180830381600087803b15801561423657600080fd5b505af115801561424a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061426e919081019061827f565b80925081935050508015156142b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016142af90619dae565b60405180910390fd5b601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166369921c26836040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161432f919061935e565b602060405180830381600087803b15801561434957600080fd5b505af115801561435d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061438191908101906184d1565b15156143c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016143b990619b8e565b60405180910390fd5b602560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205494505050505092915050565b6000601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166337258c0d33601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163061452060048054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561450c5780601f106144e15761010080835404028352916020019161450c565b820191906000526020600020905b8154815290600101906020018083116144ef57829003601f168201915b5050505050896166eb90919063ffffffff16565b6040518563ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161455b9493929190619379565b602060405180830381600087803b15801561457557600080fd5b505af1158015614589573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506145ad91908101906184d1565b15156145ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016145e590619aee565b60405180910390fd5b6146048383601b61725c9092919063ffffffff16565b905092915050565b600060606000806146388661462a89866166eb90919063ffffffff16565b6166eb90919063ffffffff16565b9250601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c04d4ef3601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163061474960048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156147355780601f1061470a57610100808354040283529160200191614735565b820191906000526020600020905b81548152906001019060200180831161471857829003601f168201915b50505050508c6166eb90919063ffffffff16565b878a6040518663ffffffff167c01000000","000000000000000000000000000000000000000000000000000281526004016147879594939291906195e6565b6040805180830381600087803b1580156147a057600080fd5b505af11580156147b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506147d8919081019061827f565b8092508193505050801515614822576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161481990619dce565b60405180910390fd5b6148388787601b616a5c9092919063ffffffff16565b93505050509392505050565b601660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006060600080600080601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c04d4ef3601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1630888b6040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401614913949392919061982a565b6040805180830381600087803b15801561492c57600080fd5b505af1158015614940573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250614964919081019061827f565b80945081955050508215156149ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016149a590619cae565b60405180910390fd5b601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166369921c26856040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401614a25919061935e565b602060405180830381600087803b158015614a3f57600080fd5b505af1158015614a53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250614a7791908101906184d1565b1515614ab8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401614aaf90619b8e565b60405180910390fd5b600090505b602380549050811015614b6457614b5560256000602384815481101515614ae057fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548361648790919063ffffffff16565b91508080600101915050614abd565b8195505050505050919050565b6000601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b3032be86040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015614bf957600080fd5b505af1158015614c0d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250614c31919081019061821a565b905090565b60068054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015614ccc5780601f10614ca157610100808354040283529160200191614ccc565b820191906000526020600020905b815481529060010190602001808311614caf57829003601f168201915b505050505081565b60078054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015614d6a5780601f10614d3f57610100808354040283529160200191614d6a565b820191906000526020600020905b815481529060010190602001808311614d4d57829003601f168201915b505050505081565b60008054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015614e085780601f10614ddd57610100808354040283529160200191614e08565b820191906000526020600020905b815481529060010190602001808311614deb57829003601f168201915b505050505081565b601760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60088054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015614ecc5780601f10614ea157610100808354040283529160200191614ecc565b820191906000526020600020905b815481529060010190602001808311614eaf57829003601f168201915b505050505081565b6000601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c55fc52d6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015614f8657600080fd5b505af1158015614f9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250614fbe919081019061821a565b905090565b60006060600080614fef86614fe189866166eb90919063ffffffff16565b6166eb90919063ffffffff16565b9250601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c04d4ef3601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163061510060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156150ec5780601f106150c1576101008083540402835291602001916150ec565b820191906000526020600020905b8154815290600101906020018083116150cf57829003601f168201915b50505050508c6166eb90919063ffffffff16565b878a6040518663ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161513e9594939291906195e6565b6040805180830381600087803b15801561515757600080fd5b505af115801561516b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061518f919081019061827f565b80925081935050508015156151d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016151d090619cce565b60405180910390fd5b6151ef8787601b6166ff9092919063ffffffff16565b93505050509392505050565b6000606080600080600086516040519080825280602002602001820160405280156152355781602001602082028038833980820191505090505b509350600090505b865181101561546f5760018114806152b05750600587511480156152615750600481145b806152af5750868181518110151561527557fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff16145b5b1561531c5786818151811015156152c357fe5b9060200190602002015184828151811015156152db57fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050615462565b601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663accfbdd9888381518110151561536857fe5b906020019060200201516040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016153aa919061935e565b6040805180830381600087803b1580156153c357600080fd5b505af11580156153d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506153fb919081019061827f565b80945081935050508215156154165760008495509550615476565b81848281518110151561542557fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b808060010191505061523d565b8284955095505b50505050915091565b6000602154905090565b6060601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166337258c0d33601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163061559b60038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156155875780601f1061555c57610100808354040283529160200191615587565b820191906000526020600020905b81548152906001019060200180831161556a57829003601f168201915b5050505050886166eb90919063ffffffff16565b6040518563ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016155d69493929190619379565b602060405180830381600087803b1580156155f057600080fd5b505af1158015615604573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061562891908101906184d1565b1515615669576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161566090619c6e565b60405180910390fd5b61567d82601b616ebf90919063ffffffff16565b9050919050565b60608060008060606000601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c04d4ef3601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1630888b6040518563ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161572d94939291906196aa565b6040805180830381600087803b15801561574657600080fd5b505af115801561575a573d6000803e3d6000fd5b","505050506040513d601f19601f8201168201806040525061577e919081019061827f565b80945081955050508215156157c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016157bf90619c8e565b60405180910390fd5b601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166369921c26856040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161583f919061935e565b602060405180830381600087803b15801561585957600080fd5b505af115801561586d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061589191908101906184d1565b15156158d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016158c990619b8e565b60405180910390fd5b6023805490506040519080825280602002602001820160405280156159065781602001602082028038833980820191505090505b509150600090505b602380549050811015615a7457601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166346438ca060238381548110151561596857fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016159cb919061935e565b602060405180830381600087803b1580156159e557600080fd5b505af11580156159f9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250615a1d919081019061821a565b8282815181101515615a2b57fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050808060010191505061590e565b8195505050505050919050565b60006060600080615aad86615a9f89866166eb90919063ffffffff16565b6166eb90919063ffffffff16565b9250601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c04d4ef3601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1630615bbe60048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015615baa5780601f10615b7f57610100808354040283529160200191615baa565b820191906000526020600020905b815481529060010190602001808311615b8d57829003601f168201915b50505050508c6166eb90919063ffffffff16565b878a6040518663ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401615bfc9594939291906195e6565b6040805180830381600087803b158015615c1557600080fd5b505af1158015615c29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250615c4d919081019061827f565b8092508193505050801515615c97576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401615c8e90619aee565b60405180910390fd5b615cad8787601b61725c9092919063ffffffff16565b93505050509392505050565b6000806060600080600087601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166369921c26826040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401615d3b919061935e565b602060405180830381600087803b158015615d5557600080fd5b505af1158015615d69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250615d8d91908101906184d1565b1515615dce576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401615dc590619b8e565b60405180910390fd5b601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a3793a618a6040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401615e45919061935e565b602060405180830381600087803b158015615e5f57600080fd5b505af1158015615e73573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250615e97919081019061821a565b9550602460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151515615f28576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401615f1f90619d2e565b60405180910390fd5b615f3b898661745990919063ffffffff16565b9450601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c04d4ef3601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1630888c6040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401615fdc94939291906197ca565b6040805180830381600087803b158015615ff557600080fd5b505af1158015616009573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061602d919081019061827f565b8094508195505050821515616077576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161606e90619d6e565b60405180910390fd5b601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166369921c26856040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016160ee919061935e565b602060405180830381600087803b15801561610857600080fd5b505af115801561611c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061614091908101906184d1565b1515616181576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161617890619b8e565b60405180910390fd5b601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fbcbc0f18a6040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016161f8919061935e565b602060405180830381600087803b15801561621257600080fd5b505af1158015616226573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061624a919081019061821a565b91508173ffffffffffffffffffffffffffffffffffffffff166395a0c79630601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660016040518463ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016162c893929190619a55565b602060405180830381600087803b1580156162e257600080fd5b505af11580156162f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061631a91908101906184d1565b5060238690806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506001602460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001965050505050505092915050565b60058054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561647f5780601f106164545761010080835404028352916020019161647f565b820191906000526020600020905b81548152906001019060200180831161646257829003601f168201915b505050505081565b60008082840190508381101515156164d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016164cb90619b4e565b60405180910390fd5b8091505092915050565b6060600060606000806164f18a89617475565b506164fe8b8b8b8b6175d6565b92506165098b6151fb565b809c508195505050831515616553576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161654a90619bee565b60405180910390fd5b601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c04d4ef3601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163089878c6040518663ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016165f4959493929190619648565b6040805180830381600087803b15801561660d57600080fd5b505af1158015616621573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250616645919081019061827f565b809250819350505080616696876040805190810160405280600a81526020017f466f7262696464656e20000000000000000000000000000000000000000000008152506176dc90919063ffffffff16565b9015156166d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016166d09190619a8c565b60405180910390fd5b508a9450505050509695505050505050565b60606166f783836178ad565b905092915050565b60008084600001846040518082805190602001908083835b60208310151561673c5780518252602082019150602081019050602083039250616717565b6001836020036101000a0380198251168184511680821785525050505050","","","","","","","6000205403815181101515611eb157fe5b90602001906020020190151590811515815250505b5b60008a51118015611ef1575060008a6000815181101515611ee457fe5b9060200190602002015114155b1561200c57600094505b600360008b6000815181101515611f0e57fe5b9060200190602002015181526020019081526020016000208054905085101561200b57856001600360008d6000815181101515611f4757fe5b90602001906020020151815260200190815260200160002087815481101515611f6c57fe5b906000526020600020015403815181101515611f8457fe5b906020019060200201511515611ffe576001866001600360008e6000815181101515611fac57fe5b90602001906020020151815260200190815260200160002088815481101515611fd157fe5b906000526020600020015403815181101515611fe957fe5b90602001906020020190151590811515815250505b8480600101955050611efb565b5b600089511180156120625750600073ffffffffffffffffffffffffffffffffffffffff1689600081518110151561203f57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1614155b1561220157600093505b600560008a600081518110151561207f57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905084101561220057856001600560008c60008151811015156120e457fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208681548110151561213557fe5b90600052602060002001540381518110151561214d57fe5b9060200190602002015115156121f3576001866001600560008d600081518110151561217557fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020878154811015156121c657fe5b9060005260206000200154038151811015156121de57fe5b90602001906020020190151590811515815250505b838060010194505061206c565b5b600189511180156122575750600073ffffffffffffffffffffffffffffffffffffffff1689600181518110151561223457fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1614155b156123f657600092505b600660008a600181518110151561227457fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508310156123f557856001600660008c60018151811015156122d957fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208581548110151561232a57fe5b90600052602060002001540381518110151561234257fe5b9060200190602002015115156123e8576001866001600660008d600181518110151561236a57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020868154811015156123bb57fe5b9060005260206000200154038151811015156123d357fe5b90602001906020020190151590811515815250505b8280600101935050612261565b5b60009150600090505b855181101561243b57858181518110151561241657fe5b906020019060200201511561242e5781806001019250505b80806001019150506123ff565b8582975097505050505050509250929050565b60606000806000606060008673ffffffffffffffffffffffffffffffffffffffff16945060008514156124b8576040805190810160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525095506125b8565b8493505b6000841415156124e2578280600101935050600a848115156124da57fe5b0493506124bc565b826040519080825280601f01601f1916602001820160405280156125155781602001602082028038833980820191505090505b5091506001830390505b6000851415156125b457600a8581151561253557fe5b066030017f01000000000000000000000000000000000000000000000000000000000000000282828060019003935081518110151561257057fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a858115156125ac57fe5b04945061251f565b8195505b5050505050919050565b6060600080600060606000806000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f23f63c9600a6040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016126489190614a4f565b602060405180830381600087803b15801561266257600080fd5b505af1158015612676573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061269a919081019061421b565b955060009450896040519080825280602002602001820160405280156126cf5781602001602082028038833980820191505090505b50935060009250600091505b8a518210156128b6578a828151811015156126f257fe5b90602001906020020151156128a9578573ffffffffffffffffffffffffffffffffffffffff1663e8434e39612729600185016116b9565b8b6040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016127639291906149ef565b602060405180830381600087803b15801561277d57600080fd5b505af1158015612791573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506127b591908101906141c9565b90508073ffffffffffffffffffffffffffffffffffffffff1663949d225d6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561281b57600080fd5b505af115801561282f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506128539190810190614244565b8501945080848480600101955081518110151561286c57fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b81806001019250506126db565b838597509750505050505050935093915050565b60608060008060008060006060600c890260405190808252806020026020018201604052801561290e57816020015b60608152602001906001900390816128f95790505b509650600095505b895186101561353457898681518110151561292d57fe5b90602001906020020151945060009350600092505b8473ffffffffffffffffffffffffffffffffffffffff1663949d225d6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156129a657600080fd5b505af11580156129ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506129de9190810190614244565b831215613527578473ffffffffffffffffffffffffffffffffffffffff1663846719e0846040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612a3a91906149ab565b602060405180830381600087803b158015612a5457600080fd5b505af1158015612a68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612a8c91908101906141f2565b915060009350612c938273ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612ae890614bd7565b600060405180830381600087803b158015612b0257600080fd5b505af1158015612b16573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250612b3f919081019061426d565b8373ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612b9290614b34565b600060405180830381600087803b158015612bac57600080fd5b505af1158015612bc0573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250612be9919081019061426d565b8473ffffffffffffffffffffffffffffffffffffffff1663bf40fac16040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612c3c90614c2c565b602060405180830381600087803b158015612c5657600080fd5b505af1158015612c6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612c8e9190810190614035565b613544565b905060038151141515612cdb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612cd290614b14565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612d2e90614c7a565b600060405180830381600087803b158015612d4857600080fd5b505af1158015612d5c573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250612d85919081019061426d565b878585600c0201815181101515612d9857fe5b906020019060200201819052508173ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612df890614cef565b600060405180830381600087803b158015612e1257600080fd5b505af1158015612e26573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250612e4f919081019061426d565b878560010195508585600c0201815181101515612e6857fe5b90602001906020020181905250806000815181101515612e8457fe5b90602001906020020151878560010195508585600c02018151811015","","","50565b60006020820190508181036000830152614ebc816148c8565b9050919050565b60006040820190508181036000830152614edc816148c8565b9050614eeb6020830184614420565b92915050565b60006020820190508181036000830152614f0a816148ff565b9050919050565b60006040820190508181036000830152614f2a816148ff565b9050614f396020830184614420565b92915050565b6000602082019050614f546000830184614936565b92915050565b600060a082019050614f6f6000830188614936565b614f7c6020830187614936565b614f89604083018661432b565b614f96606083018561432b565b614fa36080830184614936565b9695505050505050565b6000604051905081810181811067ffffffffffffffff82111715614fd057600080fd5b8060405250919050565b600067ffffffffffffffff821115614ff157600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561501957600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561504157600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561506957600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561509157600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff8211156150bd57600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b6000819050919050565b60008160005260206000209050919050565b600081519050919050565b600060029050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006151ac82615141565b9050919050565b60006151be82615141565b9050919050565b60006151d082615141565b9050919050565b60006151e282615141565b9050919050565b6000819050919050565b6000819050919050565b600061520882615141565b9050919050565b600061521a82615141565b9050919050565b82818337600083830152505050565b60005b8381101561524e578082015181840152602081019050615233565b8381111561525d576000848401525b50505050565b6000601f19601f83011690509190505600a265627a7a723058205c261cad0324348dde7feb7cb637f6054e82cc7aabfc50489df4872406cc7eee6c6578706572696d656e74616cf50037"};

    public static final String BINARY = String.join("", BINARY_ARRAY);

    public static final String[] SM_BINARY_ARRAY = {"","","","16630e628322888381518110151561176e57fe5b906020019060200201516040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016117b0919061935e565b6040805180830381600087803b1580156117c957600080fd5b505af11580156117dd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611801919081019061827f565b809450819350505082151561181c576000849550955061187c565b81848281518110151561182b57fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b8080600101915050611643565b8284955095505b50505050915091565b60028054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561191b5780601f106118f05761010080835404028352916020019161191b565b820191906000526020600020905b8154815290600101906020018083116118fe57829003601f168201915b505050505081565b600030905090565b6000601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631500025a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156119b357600080fd5b505af11580156119c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506119eb919081019061821a565b905090565b60158054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611a865780601f10611a5b57610100808354040283529160200191611a86565b820191906000526020600020905b815481529060010190602001808311611a6957829003601f168201915b505050505081565b60285481565b6000806060600080601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c9f854c0886040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611b13919061935e565b602060405180830381600087803b158015611b2d57600080fd5b505af1158015611b41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611b65919081019061821a565b9350602460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515611bf5576040517fc703cb12000000000000000000000000000000000000000000000000000000008152600401611bec90619d2e565b60405180910390fd5b601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cfe3b125601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1686868a6040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611c94949392919061948f565b6040805180830381600087803b158015611cad57600080fd5b505af1158015611cc1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611ce5919081019061827f565b8092508193505050801515611d2f576040517fc703cb12000000000000000000000000000000000000000000000000000000008152600401611d2690619bae565b60405180910390fd5b601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663520bdf0a836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611da6919061935e565b602060405180830381600087803b158015611dc057600080fd5b505af1158015611dd4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611df891908101906184d1565b1515611e39576040517fc703cb12000000000000000000000000000000000000000000000000000000008152600401611e3090619ace565b60405180910390fd5b602560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205494505050505092915050565b6060601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638d478f2933601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1630611f9760038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611f835780601f10611f5857610100808354040283529160200191611f83565b820191906000526020600020905b815481529060010190602001808311611f6657829003601f168201915b5050505050886164a390919063ffffffff16565b6040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611fd29493929190619379565b602060405180830381600087803b158015611fec57600080fd5b505af1158015612000573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061202491908101906184d1565b1515612065576040517fc703cb1200000000000000000000000000000000000000000000000000000000815260040161205c90619c4e565b60405180910390fd5b61207982601b6164b790919063ffffffff16565b9050919050565b60006060600080600080601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cfe3b125601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1630888b6040518563ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161212994939291906196aa565b6040805180830381600087803b15801561214257600080fd5b505af1158015612156573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061217a919081019061827f565b80945081955050508215156121c4576040517fc703cb120000000000000000000000000000000000000000000000000000000081526004016121bb90619dce565b60405180910390fd5b601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663520bdf0a856040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161223b919061935e565b602060405180830381600087803b15801561225557600080fd5b505af1158015612269573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061228d91908101906184d1565b15156122ce576040517fc703cb120000000000000000000000000000000000000000000000000000000081526004016122c590619ace565b60405180910390fd5b600090505b60238054905081101561237a5761236b602560006023848154811015156122f657fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054836165ca90919063ffffffff16565b915080806001019150506122d3565b8195505050505050919050565b60138054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561241d5780601f106123f25761010080835404028352916020019161241d565b820191906000526020600020905b81548152906001019060200180831161240057829003601f168201915b505050505081565b600061243d60016021546165ca90919063ffffffff16565b602181905550602154905090565b600060606000806124778661246989866164a390919063ffffffff16565b6164a390919063ffffffff16565b9250601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cfe3b125601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163061258860048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156125745780601f1061254957610100808354040283529160200191612574565b820191906000526020600020905b81548152906001019060200180831161255757829003601f168201915b50505050508c6164a390919063ffffffff16565b878a6040518663ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016125c69594939291906195e6565b6040805180830381600087803b1580156125df57600080fd5b505af11580156125f3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612617919081019061827f565b8092508193505050801515612661576040517fc703cb1200000000000000000000000000000000000000000000000000000000815260040161265890619d0e565b60405180910390fd5b6126778787601b6166219092919063ffffffff16565b93505050509392505050565b600060606000806126af866126a189866164a390919063ffffffff16565b6164a390919063ffffffff16565b9250601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cfe3b125601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16306127c060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203","166002900480156127ac5780601f10612781576101008083540402835291602001916127ac565b820191906000526020600020905b81548152906001019060200180831161278f57829003601f168201915b50505050508c6164a390919063ffffffff16565b878a6040518663ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016127fe9594939291906195e6565b6040805180830381600087803b15801561281757600080fd5b505af115801561282b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061284f919081019061827f565b8092508193505050801515612899576040517fc703cb1200000000000000000000000000000000000000000000000000000000815260040161289090619d8e565b60405180910390fd5b6128af8787601b61681e9092919063ffffffff16565b93505050509392505050565b6000602154905090565b6000601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600b8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156129855780601f1061295a57610100808354040283529160200191612985565b820191906000526020600020905b81548152906001019060200180831161296857829003601f168201915b505050505081565b6000601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638d478f2933601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1630612ac960048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612ab55780601f10612a8a57610100808354040283529160200191612ab5565b820191906000526020600020905b815481529060010190602001808311612a9857829003601f168201915b5050505050896164a390919063ffffffff16565b6040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612b049493929190619379565b602060405180830381600087803b158015612b1e57600080fd5b505af1158015612b32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612b5691908101906184d1565b1515612b97576040517fc703cb12000000000000000000000000000000000000000000000000000000008152600401612b8e90619d8e565b60405180910390fd5b612bad8383601b61681e9092919063ffffffff16565b905092915050565b600a8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612c4b5780601f10612c2057610100808354040283529160200191612c4b565b820191906000526020600020905b815481529060010190602001808311612c2e57829003601f168201915b505050505081565b60006060600080612c6d8684616b7b90919063ffffffff16565b9250601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cfe3b125601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163086896040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612d0e9493929190619526565b6040805180830381600087803b158015612d2757600080fd5b505af1158015612d3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612d5f919081019061827f565b8092508193505050801515612da9576040517fc703cb12000000000000000000000000000000000000000000000000000000008152600401612da090619b2e565b60405180910390fd5b85602781905550602754935050505092915050565b601760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600d8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612e7a5780601f10612e4f57610100808354040283529160200191612e7a565b820191906000526020600020905b815481529060010190602001808311612e5d57829003601f168201915b505050505081565b60608060008060606000601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cfe3b125601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1630888b6040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612f2b949392919061970a565b6040805180830381600087803b158015612f4457600080fd5b505af1158015612f58573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612f7c919081019061827f565b8094508195505050821515612fc6576040517fc703cb12000000000000000000000000000000000000000000000000000000008152600401612fbd90619b6e565b60405180910390fd5b601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663520bdf0a856040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161303d919061935e565b602060405180830381600087803b15801561305757600080fd5b505af115801561306b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061308f91908101906184d1565b15156130d0576040517fc703cb120000000000000000000000000000000000000000000000000000000081526004016130c790619ace565b60405180910390fd5b6023805490506040519080825280602002602001820160405280156131045781602001602082028038833980820191505090505b509150600090505b60238054905081101561327257601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c4dcade660238381548110151561316657fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016131c9919061935e565b602060405180830381600087803b1580156131e357600080fd5b505af11580156131f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061321b919081019061821a565b828281518110151561322957fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050808060010191505061310c565b8195505050505050919050565b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156133155780601f106132ea57610100808354040283529160200191613315565b820191906000526020600020905b8154815290600101906020018083116132f857829003601f168201915b505050505081565b6000601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638d478f2933601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163061342f60048054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561341b5780601f106133f05761010080835404028352916020019161341b565b820191906000526020600020905b8154815290600101906020018083116133fe57829003601f168201915b5050505050886164a390919063ffffffff16565b6040518563ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161346a9493929190619379565b602060405180830381600087803b15801561348457600080fd5b505af1158015613498573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506134bc91908101906184d1565b15156134fd576040517fc703cb120000000000000000000000000000000000000000000000000000000081526004016134f490619dae565b60405180910390fd5b61351182601b616b9790919063ffffffff16565b9050919050565b60088054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156135ae5780601f10613583576101008083540402835291602001916135ae565b820191906000526020600020905b81548152906001019060200180831161359157829003601f168201915b505050505081565b60006135c0617ba1565b6000606060006135ce617ba1565b6136118b8b8b8b8b6040805190810160405280600781526020017f6465706f73697400000000000000000000000000000000000000000000000000815250616de9565b9a508a600381518110151561362257fe5b906020019060200201519350602460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156136bc576040517fc703cb120000000000000000000000000000000000000000000000000000000081526004016136b390619d2e565b60405180910390fd5b61370e8a602560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546165ca90919063ffffffff16565b602560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600260405190808252","80602002602001820160405280156137815781602001602082028038833980820191505090505b509250600083600081518110151561379557fe5b90602001906020020181815250508860008151811015156137b257fe5b906020019060200201518360018151811015156137cb57fe5b90602001906020020181815250507fa4039d5990211fad3a15bf41bd09d8f68f647d8c1ab1b8d8500b7d6202087d04848b60405161380a92919061988a565b60405180910390a1602260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318768d1e8c8c8b876040518563ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161388f94939291906198d5565b606060405180830381600087803b1580156138a957600080fd5b505af11580156138bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506138e191908101906184fa565b80925081935050507f370fc1741645a856379d1c2be6c9f567fa67f594a8b02fa03d83b70ebe8958dc81600060028110151561391957fe5b602002015182600160028110151561392d57fe5b60200201518d600281518110151561394157fe5b906020019060200201518e600381518110151561395a57fe5b906020019060200201518e604051613976959493929190619e09565b60405180910390a1818195509550505050509550959350505050565b601860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060606000806139e4866139d689866164a390919063ffffffff16565b6164a390919063ffffffff16565b9250601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cfe3b125601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1630613af560048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015613ae15780601f10613ab657610100808354040283529160200191613ae1565b820191906000526020600020905b815481529060010190602001808311613ac457829003601f168201915b50505050508c6164a390919063ffffffff16565b878a6040518663ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401613b339594939291906195e6565b6040805180830381600087803b158015613b4c57600080fd5b505af1158015613b60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250613b84919081019061827f565b8092508193505050801515613bce576040517fc703cb12000000000000000000000000000000000000000000000000000000008152600401613bc590619b0e565b60405180910390fd5b613be48787601b616ff69092919063ffffffff16565b93505050509392505050565b60078054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015613c865780601f10613c5b57610100808354040283529160200191613c86565b820191906000526020600020905b815481529060010190602001808311613c6957829003601f168201915b505050505081565b6000601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638d478f2933601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1630613da060048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015613d8c5780601f10613d6157610100808354040283529160200191613d8c565b820191906000526020600020905b815481529060010190602001808311613d6f57829003601f168201915b5050505050896164a390919063ffffffff16565b6040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401613ddb9493929190619379565b602060405180830381600087803b158015613df557600080fd5b505af1158015613e09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250613e2d91908101906184d1565b1515613e6e576040517fc703cb12000000000000000000000000000000000000000000000000000000008152600401613e6590619b0e565b60405180910390fd5b613e848383601b616ff69092919063ffffffff16565b905092915050565b6000613e96617ba1565b60606000613ea2617ba1565b613ee58a8a8a8a8a6040805190810160405280600881526020017f7472616e736665720000000000000000000000000000000000000000000000008152506171eb565b9950602460008b6002815181101515613efa57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515613f8d576040517fc703cb12000000000000000000000000000000000000000000000000000000008152600401613f8490619d2e565b60405180910390fd5b602460008b6003815181101515613fa057fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515614033576040517fc703cb1200000000000000000000000000000000000000000000000000000000815260040161402a90619d2e565b60405180910390fd5b61409d89602560008d600281518110151561404a57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461741090919063ffffffff16565b602560008c60028151811015156140b057fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061416289602560008d600381518110151561410f57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546165ca90919063ffffffff16565b602560008c600381518110151561417557fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060026040519080825280602002602001820160405280156141ed5781602001602082028038833980820191505090505b509250600283600081518110151561420157fe5b906020019060200201818152505087600081518110151561421e57fe5b9060200190602002015183600181518110151561423757fe5b90602001906020020181815250507f18f84334255a242551aa98c68047b5da8063eab9fbeaec1eddeea280044b9ff18a600281518110151561427557fe5b906020019060200201518b600381518110151561428e57fe5b906020019060200201518b6040516142a8939291906194ef565b60405180910390a1602260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318768d1e8b8b8a876040518563ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161432d94939291906198d5565b606060405180830381600087803b15801561434757600080fd5b505af115801561435b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061437f91908101906184fa565b80925081935050507f370fc1741645a856379d1c2be6c9f567fa67f594a8b02fa03d83b70ebe8958dc8160006002811015156143b757fe5b60200201518260016002811015156143cb57fe5b60200201518c60028151811015156143df57fe5b906020019060200201518d60038151811015156143f857fe5b906020019060200201518d604051614414959493929190619e09565b60405180910390a18181945094505050509550959350505050565b6000601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638d478f2933601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163061454160048054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561452d5780601f106145025761010080835404028352916020019161452d565b820191906000526020600020905b81548152906001019060200180831161451057829003601f168201915b5050505050896164a390919063ffffffff16565b6040518563ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161457c9493929190619379565b602060405180830381600087803b15801561459657600080fd5b505af11580156145aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506145ce91908101906184d1565b151561460f576040517fc703cb1200000000000000000000000000000000000000000000000000000000815260040161460690619d0e565b60405180910390fd5b6146258383601b6166219092919063ffffffff16565b905092915050565b60068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156146c35780601f10614698576101008083540402835291602001916146c3565b820191906000526020600020905b8154815290600101906020018083116146a657829003601f168201915b505050505081565b60006146d5617ba1565b6000606060006146e3617ba1565b6147268b8b8b8b8b6040805190810160405280600a81526020017f7769746864726177616c00000000000000000000000000000000000000000000815250616de9565b9a508a600281518110151561473757fe5b906020019060200201519350602460008573ffffffffffffffffffffffffffffffffff","ffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156147d1576040517fc703cb120000000000000000000000000000000000000000000000000000000081526004016147c890619d2e565b60405180910390fd5b6148238a602560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461741090919063ffffffff16565b602560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060026040519080825280602002602001820160405280156148965781602001602082028038833980820191505090505b50925060018360008151811015156148aa57fe5b90602001906020020181815250508860008151811015156148c757fe5b906020019060200201518360018151811015156148e057fe5b90602001906020020181815250507f338e424d2d05f70468ec496a5da66a545913d90926ffae6c08c12b9d003ec6cb848b60405161491f92919061988a565b60405180910390a1602260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318768d1e8c8c8b876040518563ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016149a494939291906198d5565b606060405180830381600087803b1580156149be57600080fd5b505af11580156149d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506149f691908101906184fa565b80925081935050507f370fc1741645a856379d1c2be6c9f567fa67f594a8b02fa03d83b70ebe8958dc816000600281101515614a2e57fe5b6020020151826001600281101515614a4257fe5b60200201518d6002815181101515614a5657fe5b906020019060200201518e6003815181101515614a6f57fe5b906020019060200201518e604051614a8b959493929190619e09565b60405180910390a1818195509550505050509550959350505050565b60148054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015614b3d5780601f10614b1257610100808354040283529160200191614b3d565b820191906000526020600020905b815481529060010190602001808311614b2057829003601f168201915b505050505081565b60128054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015614bdb5780601f10614bb057610100808354040283529160200191614bdb565b820191906000526020600020905b815481529060010190602001808311614bbe57829003601f168201915b505050505081565b60118054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015614c795780601f10614c4e57610100808354040283529160200191614c79565b820191906000526020600020905b815481529060010190602001808311614c5c57829003601f168201915b505050505081565b6060806000806000806060600080601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cfe3b125601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16308b8e6040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401614d2e949392919061982a565b6040805180830381600087803b158015614d4757600080fd5b505af1158015614d5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250614d7f919081019061827f565b8097508198505050851515614dc9576040517fc703cb12000000000000000000000000000000000000000000000000000000008152600401614dc090619d6e565b60405180910390fd5b601e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663520bdf0a886040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401614e40919061935e565b602060405180830381600087803b158015614e5a57600080fd5b505af1158015614e6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250614e9291908101906184d1565b1515614ed3576040517fc703cb12000000000000000000000000000000000000000000000000000000008152600401614eca90619ace565b60405180910390fd5b60028b51148015614f1357508a6001815181101515614eee57fe5b906020019060200201518b6000815181101515614f0757fe5b90602001906020020151125b1515614f54576040517fc703cb12000000000000000000000000000000000000000000000000000000008152600401614f4b90619c0e565b60405180910390fd5b60008c511115614fce57600093505b8b51841015614fcd578b84815181101515614f7a57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff161415614fc05760019450614fcd565b8380600101945050614f63565b5b8415156150a157601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d2eef3a1886040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161504c919061935e565b602060405180830381600087803b15801561506657600080fd5b505af115801561507a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061509e91908101906184d1565b94505b8415156150e3576040517fc703cb120000000000000000000000000000000000000000000000000000000081526004016150da90619bce565b60405180910390fd5b600060238054905014156150f9578298506155c8565b60008c5111801561514f5750600073ffffffffffffffffffffffffffffffffffffffff168c600081518110151561512c57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1614155b156152f657601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c9f854c08d60008151811015156151a157fe5b906020019060200201516040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016151e3919061935e565b602060405180830381600087803b1580156151fd57600080fd5b505af1158015615211573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250615235919081019061821a565b9150600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156152a9576040517fc703cb120000000000000000000000000000000000000000000000000000000081526004016152a090619d4e565b60405180910390fd5b818c60008151811015156152b957fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b60018c5111801561534c5750600073ffffffffffffffffffffffffffffffffffffffff168c600181518110151561532957fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1614155b156154f357601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c9f854c08d600181518110151561539e57fe5b906020019060200201516040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016153e0919061935e565b602060405180830381600087803b1580156153fa57600080fd5b505af115801561540e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250615432919081019061821a565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156154a6576040517fc703cb1200000000000000000000000000000000000000000000000000000000815260040161549d90619aee565b60405180910390fd5b808c60018151811015156154b657fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b602260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b32cf81b8e8e8e6040518463ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161556e93929190619951565b600060405180830381600087803b15801561558857600080fd5b505af115801561559c573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506155c591908101906183e5565b98505b5050505050505050949350505050565b60048054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561566e5780601f106156435761010080835404028352916020019161566e565b820191906000526020600020905b81548152906001019060200180831161565157829003601f168201915b505050505081565b601660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156157325780601f1061570757610100808354040283529160200191615732565b820191906000526020600020905b81548152906001019060200180831161571557829003601f168201915b505050505081565b60038054600181600116156101000203166002900480601f0160208091040260","","","","","","","","","15612ea757fe5b90602001906020020181905250806001815181101515612ec357fe5b90602001906020020151878560010195508585600c0201815181101515612ee657fe5b906020019060200201819052508173ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612f4690614c1e565b600060405180830381600087803b158015612f6057600080fd5b505af1158015612f74573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250612f9d919081019061426d565b878560010195508585600c0201815181101515612fb657fe5b906020019060200201819052508173ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161301690614a91565b600060405180830381600087803b15801561303057600080fd5b505af1158015613044573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525061306d919081019061426d565b878560010195508585600c020181518110151561308657fe5b906020019060200201819052506131568273ffffffffffffffffffffffffffffffffffffffff166307afbf3a6040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016130e990614c73565b602060405180830381600087803b15801561310357600080fd5b505af1158015613117573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061313b9190810190614035565b73ffffffffffffffffffffffffffffffffffffffff1661244e565b878560010195508585600c020181518110151561316f57fe5b9060200190602002018190525080600281518110151561318b57fe5b90602001906020020151878560010195508585600c02018151811015156131ae57fe5b906020019060200201819052506132688273ffffffffffffffffffffffffffffffffffffffff16634900862e6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161321190614d8b565b602060405180830381600087803b15801561322b57600080fd5b505af115801561323f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506132639190810190614244565b6116b9565b878560010195508585600c020181518110151561328157fe5b9060200190602002018190525061333b8273ffffffffffffffffffffffffffffffffffffffff16634900862e6040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016132e490614dd9565b602060405180830381600087803b1580156132fe57600080fd5b505af1158015613312573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506133369190810190614244565b6116b9565b878560010195508585600c020181518110151561335457fe5b906020019060200201819052506134248273ffffffffffffffffffffffffffffffffffffffff166307afbf3a6040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016133b790614e27565b602060405180830381600087803b1580156133d157600080fd5b505af11580156133e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506134099190810190614035565b73ffffffffffffffffffffffffffffffffffffffff1661244e565b878560010195508585600c020181518110151561343d57fe5b906020019060200201819052508173ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161349d90614eea565b600060405180830381600087803b1580156134b757600080fd5b505af11580156134cb573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506134f4919081019061426d565b878560010195508585600c020181518110151561350d57fe5b906020019060200201819052508280600101935050612942565b8580600101965050612916565b8697505050505050505092915050565b606080600080600360405190808252806020026020018201604052801561357f57816020015b606081526020019060019003908161356a5790505b50925061358b87613ac9565b73ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff1614151561374557600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c4dcade661360789613ac9565b6040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161363f9190614945565b602060405180830381600087803b15801561365957600080fd5b505af115801561366d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506136919190810190614035565b90508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff1614151515613705576040517fc703cb120000000000000000000000000000000000000000000000000000000081526004016136fc90614cc1565b60405180910390fd5b6137248173ffffffffffffffffffffffffffffffffffffffff1661244e565b83600081518110151561373357fe5b90602001906020020181905250613763565b8683600081518110151561375557fe5b906020019060200201819052505b61376c86613ac9565b73ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff1614151561392657600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c4dcade66137e888613ac9565b6040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016138209190614945565b602060405180830381600087803b15801561383a57600080fd5b505af115801561384e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506138729190810190614035565b90508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff16141515156138e6576040517fc703cb120000000000000000000000000000000000000000000000000000000081526004016138dd90614b34565b60405180910390fd5b6139058173ffffffffffffffffffffffffffffffffffffffff1661244e565b83600181518110151561391457fe5b90602001906020020181905250613944565b8583600181518110151561393657fe5b906020019060200201819052505b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c4dcade6866040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016139bb9190614945565b602060405180830381600087803b1580156139d557600080fd5b505af11580156139e9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250613a0d9190810190614035565b90508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff1614151515613a81576040517fc703cb12000000000000000000000000000000000000000000000000000000008152600401613a7890614e75565b60405180910390fd5b613aa08173ffffffffffffffffffffffffffffffffffffffff1661244e565b836002815181101515613aaf57fe5b906020019060200201819052508293505050509392505050565b6000606060008084925060009150600090505b8251811015613c8f5760308382815181101515613af557fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f0100000000000000000000000000000000000000000000000000000000000000900460ff1610158015613bf3575060398382815181101515613b7f57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f0100000000000000000000000000000000000000000000000000000000000000900460ff1611155b15613c825760308382815181101515613c0857fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f010000000000000000000000000000000000000000000000000000000000000090040360ff16600a83020191505b8080600101915050613adc565b819350505050919050565b6040805190810160405280600290602082028038833980820191505090505090565b6000613cc88235615181565b905092915050565b6000613cdc8251615181565b905092915050565b600082601f8301121515613cf757600080fd5b8135613d0a613d0582614fda565b614fad565b91508181835260208401935060208101905083856020840282011115613d2f57600080fd5b60005b83811015613d5f5781613d458882613cbc565b845260208401935060208301925050600181019050613d32565b5050505092915050565b600082601f8301121515613d7c57600080fd5b8135613d8f613d8a82615002565b614fad565b91508181835260208401935060208101905083856020840282011115613db457600080fd5b60005b83811015613de45781613dca8882613f39565b845260208401935060208301925050600181019050613db7565b5050505092915050565b600082601f8301121515613e0157600080fd5b8135613e14613e0f8261502a565b614fad565b9150818183526020840193506020810190508360005b83811015613e5a5781358601613e408882613f61565b845260208401935060208301925050600181019050613e2a565b5050505092915050565b600082601f8301121515613e7757600080fd5b8135613e8a613e8582615052565b614fad565b91508181835260208401935060208101905083856020","","6000830152614eae816148c8565b9050919050565b60006040820190508181036000830152614ece816148c8565b90508181036020830152614ee2818461442f565b905092915050565b60006020820190508181036000830152614f03816148ff565b9050919050565b60006040820190508181036000830152614f23816148ff565b90508181036020830152614f378184614465565b905092915050565b6000602082019050614f546000830184614936565b92915050565b600060a082019050614f6f6000830188614936565b614f7c6020830187614936565b614f89604083018661432b565b614f96606083018561432b565b614fa36080830184614936565b9695505050505050565b6000604051905081810181811067ffffffffffffffff82111715614fd057600080fd5b8060405250919050565b600067ffffffffffffffff821115614ff157600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561501957600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561504157600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561506957600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561509157600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff8211156150bd57600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b6000819050919050565b60008160005260206000209050919050565b600081519050919050565b600060029050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006151ac82615141565b9050919050565b60006151be82615141565b9050919050565b60006151d082615141565b9050919050565b60006151e282615141565b9050919050565b6000819050919050565b6000819050919050565b600061520882615141565b9050919050565b600061521a82615141565b9050919050565b82818337600083830152505050565b60005b8381101561524e578082015181840152602081019050615233565b8381111561525d576000848401525b50505050565b6000601f19601f83011690509190505600a265627a7a723058206bf1aadad9f064d68ba91f54ce2cf16783267c3ca5863cf00874e115768380276c6578706572696d656e74616cf50037"};

    public static final String SM_BINARY = String.join("", SM_BINARY_ARRAY);

    public static final String[] ABI_ARRAY = {"[{\"constant\":true,\"inputs\":[],\"name\":\"ROLE_R\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"OPENING_BANK\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ROLE_W\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DATA\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"updateNonce\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"OWNER\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BALANCE\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"transactionAddress\",\"type\":\"address[]\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"typeList\",\"type\":\"int256[]\"},{\"name\":\"detailList\",\"type\":\"string[]\"},{\"name\":\"sign\",\"type\":\"bytes32[4]\"}],\"name\":\"deposit\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"uint256[2]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"key\",\"type\":\"bytes\"},{\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"insert\",\"outputs\":[{\"name\":\"replaced\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RECORD\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"uintCondition\",\"type\":\"uint256[]\"},{\"name\":\"addressCondition\",\"type\":\"address[]\"},{\"name\":\"limit\",\"type\":\"int256[]\"},{\"name\":\"sign\",\"type\":\"bytes32[4]\"}],\"name\":\"queryBook\",\"outputs\":[{\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PUB_KEY\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ADMIN\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MODE_R\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TYPE_ADMIN\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TYPE_OWNER\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"key\",\"type\":\"bytes\"},{\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"add\",\"outputs\":[{\"name\":\"replaced\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sign\",\"type\":\"bytes32[4]\"}],\"name\":\"addBook\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOrg\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MODE_W\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"key\",\"type\":\"bytes\"}],\"name\":\"remove\",\"outputs\":[{\"name\":\"replaced\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"OWNER_ADDR\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ASSETS\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"USER_ADDR\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"priceVal\",\"type\":\"uint256\"},{\"name\":\"sign\",\"type\":\"bytes32[4]\"}],\"name\":\"setPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"key\",\"type\":\"bytes\"},{\"name\":\"sign\",\"type\":\"bytes32[4]\"}],\"name\":\"removeWithSign\",\"outputs\":[{\"name\":\"replaced\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"rateVal\",\"type\":\"uint256\"},{\"name\":\"sign\",\"type\":\"bytes32[4]\"}],\"name\":\"setRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"USER\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"key\",\"type\":\"bytes\"},{\"name\":\"sign\",\"type\":\"bytes32[4]\"}],\"name\":\"getWithSign\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"transactionAddress\",\"type\":\"address[]\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"typeList\",\"type\":\"int256[]\"},{\"name\":\"detailList\",\"type\":\"string[]\"},{\"name\":\"sign\",\"type\":\"bytes32[4]\"}],\"name\":\"withdrawal\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"uint256[2]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"size\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"OPERATOR\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"transactionAddress\",\"type\":\"address[]\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"typeList\",\"type\":\"int256[]\"},{\"name\":\"detailList\",\"type\":\"string[]\"},{\"name\":\"sign\",\"type\":\"bytes32[4]\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"uint256[2]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ROLE\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"},{\"name\":\"sign\",\"type\":\"bytes32[4]\"}],\"name\":\"getBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"key\",\"type\":\"bytes\"},{\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"set\",\"outputs\":[{\"name\":\"replaced\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"key\",\"type\":\"bytes\"},{\"name\":\"value\",\"type\":\"bytes\"},{\"name\":\"sign\",\"type\":\"bytes32[4]\"}],\"name\":\"addWithSign\",\"outputs\":[{\"name\":\"replaced\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ADMIN_ADDR\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"sign\",\"type\":\"bytes32[4]\"}],\"name\":\"getTotalBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAccountManager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ID\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ADDR\",\"output","s\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TYPE_PUBLIC\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"OPERATOR_ADDR\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TYPE\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAuthCenter\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAuthManager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"key\",\"type\":\"bytes\"},{\"name\":\"value\",\"type\":\"bytes\"},{\"name\":\"sign\",\"type\":\"bytes32[4]\"}],\"name\":\"insertWithSign\",\"outputs\":[{\"name\":\"replaced\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"transactionAddress\",\"type\":\"address[]\"}],\"name\":\"checkAndHandleTransactionAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getNonce\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"key\",\"type\":\"bytes\"}],\"name\":\"get\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"sign\",\"type\":\"bytes32[4]\"}],\"name\":\"getHolders\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"key\",\"type\":\"bytes\"},{\"name\":\"value\",\"type\":\"bytes\"},{\"name\":\"sign\",\"type\":\"bytes32[4]\"}],\"name\":\"setWithSign\",\"outputs\":[{\"name\":\"replaced\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"},{\"name\":\"sign\",\"type\":\"bytes32[4]\"}],\"name\":\"openAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"KEY_ALL\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"tableName\",\"type\":\"string\"},{\"name\":\"authCenterAddr\",\"type\":\"address\"},{\"name\":\"orgAddr\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithDrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"termNo\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"seqNo\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"InsertResult\",\"type\":\"event\"}]"};

    public static final String ABI = String.join("", ABI_ARRAY);

    public static final String FUNC_ROLE_R = "ROLE_R";

    public static final String FUNC_OPENING_BANK = "OPENING_BANK";

    public static final String FUNC_ROLE_W = "ROLE_W";

    public static final String FUNC_DATA = "DATA";

    public static final String FUNC_UPDATENONCE = "updateNonce";

    public static final String FUNC_OWNER = "OWNER";

    public static final String FUNC_BALANCE = "BALANCE";

    public static final String FUNC_DEPOSIT = "deposit";

    public static final String FUNC_INSERT = "insert";

    public static final String FUNC_RECORD = "RECORD";

    public static final String FUNC_QUERYBOOK = "queryBook";

    public static final String FUNC_PUB_KEY = "PUB_KEY";

    public static final String FUNC_ADMIN = "ADMIN";

    public static final String FUNC_RATE = "rate";

    public static final String FUNC_MODE_R = "MODE_R";

    public static final String FUNC_GETADDRESS = "getAddress";

    public static final String FUNC_TYPE_ADMIN = "TYPE_ADMIN";

    public static final String FUNC_TYPE_OWNER = "TYPE_OWNER";

    public static final String FUNC_ADD = "add";

    public static final String FUNC_ADDBOOK = "addBook";

    public static final String FUNC_GETORG = "getOrg";

    public static final String FUNC_MODE_W = "MODE_W";

    public static final String FUNC_REMOVE = "remove";

    public static final String FUNC_OWNER_ADDR = "OWNER_ADDR";

    public static final String FUNC_ASSETS = "ASSETS";

    public static final String FUNC_USER_ADDR = "USER_ADDR";

    public static final String FUNC_SETPRICE = "setPrice";

    public static final String FUNC_REMOVEWITHSIGN = "removeWithSign";

    public static final String FUNC_SETRATE = "setRate";

    public static final String FUNC_USER = "USER";

    public static final String FUNC_GETWITHSIGN = "getWithSign";

    public static final String FUNC_WITHDRAWAL = "withdrawal";

    public static final String FUNC_SIZE = "size";

    public static final String FUNC_OPERATOR = "OPERATOR";

    public static final String FUNC_TRANSFER = "transfer";

    public static final String FUNC_ROLE = "ROLE";

    public static final String FUNC_PRICE = "price";

    public static final String FUNC_GETBALANCE = "getBalance";

    public static final String FUNC_SET = "set";

    public static final String FUNC_ADDWITHSIGN = "addWithSign";

    public static final String FUNC_ADMIN_ADDR = "ADMIN_ADDR";

    public static final String FUNC_GETTOTALBALANCE = "getTotalBalance";

    public static final String FUNC_GETACCOUNTMANAGER = "getAccountManager";

    public static final String FUNC_ID = "ID";

    public static final String FUNC_ADDR = "ADDR";

    public static final String FUNC_TYPE_PUBLIC = "TYPE_PUBLIC";

    public static final String FUNC_OPERATOR_ADDR = "OPERATOR_ADDR";

    public static final String FUNC_TYPE = "TYPE";

    public static final String FUNC_GETAUTHCENTER = "getAuthCenter";

    public static final String FUNC_GETAUTHMANAGER = "getAuthManager";

    public static final String FUNC_INSERTWITHSIGN = "insertWithSign";

    public static final String FUNC_CHECKANDHANDLETRANSACTIONADDRESS = "checkAndHandleTransactionAddress";

    public static final String FUNC_GETNONCE = "getNonce";

    public static final String FUNC_GET = "get";

    public static final String FUNC_GETHOLDERS = "getHolders";

    public static final String FUNC_SETWITHSIGN = "setWithSign";

    public static final String FUNC_OPENACCOUNT = "openAccount";

    public static final String FUNC_KEY_ALL = "KEY_ALL";

    public static final Event TRANSFER_EVENT = new Event("Transfer", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Address>() {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event DEPOSIT_EVENT = new Event("Deposit", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event WITHDRAWAL_EVENT = new Event("WithDrawal", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event INSERTRESULT_EVENT = new Event("InsertResult", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Address>() {}, new TypeReference<Address>() {}, new TypeReference<Uint256>() {}));
    ;

    protected FungibleAsset(String contractAddress, Client client, CryptoKeyPair credential) {
        super(getBinary(client.getCryptoSuite()), contractAddress, client, credential);
    }

    public static String getBinary(CryptoSuite cryptoSuite) {
        return (cryptoSuite.getCryptoTypeConfig() == CryptoType.ECDSA_TYPE ? BINARY : SM_BINARY);
    }

    public byte[] ROLE_R() throws ContractException {
        final Function function = new Function(FUNC_ROLE_R, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public byte[] OPENING_BANK() throws ContractException {
        final Function function = new Function(FUNC_OPENING_BANK, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public byte[] ROLE_W() throws ContractException {
        final Function function = new Function(FUNC_ROLE_W, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public byte[] DATA() throws ContractException {
        final Function function = new Function(FUNC_DATA, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public TransactionReceipt updateNonce() {
        final Function function = new Function(
                FUNC_UPDATENONCE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void updateNonce(TransactionCallback callback) {
        final Function function = new Function(
                FUNC_UPDATENONCE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForUpdateNonce() {
        final Function function = new Function(
                FUNC_UPDATENONCE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<BigInteger> getUpdateNonceOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_UPDATENONCE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public byte[] OWNER() throws ContractException {
        final Function function = new Function(FUNC_OWNER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public byte[] BALANCE() throws ContractException {
        final Function function = new Function(FUNC_BALANCE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public TransactionReceipt deposit(List<String> transactionAddress, BigInteger amount, List<BigInteger> typeList, List<String> detailList, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_DEPOSIT, 
                Arrays.<Type>asList(transactionAddress.isEmpty()? DynamicArray.empty("address[]"):new DynamicArray<Address>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(transactionAddress, Address.class)),
                new Uint256(amount),
                typeList.isEmpty()? DynamicArray.empty("int256[]"):new DynamicArray<Int256>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(typeList, Int256.class)),
                detailList.isEmpty()? DynamicArray.empty("string[]"):new DynamicArray<Utf8String>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(detailList, Utf8String.class)),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void deposit(List<String> transactionAddress, BigInteger amount, List<BigInteger> typeList, List<String> detailList, List<byte[]> sign, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_DEPOSIT, 
                Arrays.<Type>asList(transactionAddress.isEmpty()? DynamicArray.empty("address[]"):new DynamicArray<Address>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(transactionAddress, Address.class)),
                new Uint256(amount),
                typeList.isEmpty()? DynamicArray.empty("int256[]"):new DynamicArray<Int256>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(typeList, Int256.class)),
                detailList.isEmpty()? DynamicArray.empty("string[]"):new DynamicArray<Utf8String>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(detailList, Utf8String.class)),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForDeposit(List<String> transactionAddress, BigInteger amount, List<BigInteger> typeList, List<String> detailList, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_DEPOSIT, 
                Arrays.<Type>asList(transactionAddress.isEmpty()? DynamicArray.empty("address[]"):new DynamicArray<Address>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(transactionAddress, Address.class)),
                new Uint256(amount),
                typeList.isEmpty()? DynamicArray.empty("int256[]"):new DynamicArray<Int256>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(typeList, Int256.class)),
                detailList.isEmpty()? DynamicArray.empty("string[]"):new DynamicArray<Utf8String>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(detailList, Utf8String.class)),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple5<List<String>, BigInteger, List<BigInteger>, List<String>, List<byte[]>> getDepositInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_DEPOSIT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Address>>() {}, new TypeReference<Uint256>() {}, new TypeReference<DynamicArray<Int256>>() {}, new TypeReference<DynamicArray<Utf8String>>() {}, new TypeReference<StaticArray4<Bytes32>>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple5<List<String>, BigInteger, List<BigInteger>, List<String>, List<byte[]>>(

                convertToNative((List<Address>) results.get(0).getValue()), 
                (BigInteger) results.get(1).getValue(), 
                convertToNative((List<Int256>) results.get(2).getValue()), 
                convertToNative((List<Utf8String>) results.get(3).getValue()), 
                convertToNative((List<Bytes32>) results.get(4).getValue())
                );
    }

    public Tuple2<Boolean, List<BigInteger>> getDepositOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_DEPOSIT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}, new TypeReference<StaticArray2<Uint256>>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<Boolean, List<BigInteger>>(

                (Boolean) results.get(0).getValue(), 
                convertToNative((List<Uint256>) results.get(1).getValue())
                );
    }

    public TransactionReceipt insert(byte[] key, byte[] value) {
        final Function function = new Function(
                FUNC_INSERT, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new DynamicBytes(value)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void insert(byte[] key, byte[] value, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_INSERT, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new DynamicBytes(value)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForInsert(byte[] key, byte[] value) {
        final Function function = new Function(
                FUNC_INSERT, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new DynamicBytes(value)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple2<byte[], byte[]> getInsertInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_INSERT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}, new TypeReference<DynamicBytes>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<byte[], byte[]>(

                (byte[]) results.get(0).getValue(), 
                (byte[]) results.get(1).getValue()
                );
    }

    public Tuple1<Boolean> getInsertOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_INSERT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<Boolean>(

                (Boolean) results.get(0).getValue()
                );
    }

    public byte[] RECORD() throws ContractException {
        final Function function = new Function(FUNC_RECORD, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public List queryBook(List<BigInteger> uintCondition, List<String> addressCondition, List<BigInteger> limit, List<byte[]> sign) throws ContractException {
        final Function function = new Function(FUNC_QUERYBOOK, 
                Arrays.<Type>asList(uintCondition.isEmpty()? DynamicArray.empty("uint256[]"):new DynamicArray<Uint256>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(uintCondition, Uint256.class)),
                addressCondition.isEmpty()? DynamicArray.empty("address[]"):new DynamicArray<Address>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(addressCondition, Address.class)),
                limit.isEmpty()? DynamicArray.empty("int256[]"):new DynamicArray<Int256>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(limit, Int256.class)),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Utf8String>>() {}));
        List<Type> result = (List<Type>) executeCallWithSingleValueReturn(function, List.class);
        return convertToNative(result);
    }

    public byte[] PUB_KEY() throws ContractException {
        final Function function = new Function(FUNC_PUB_KEY, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public byte[] ADMIN() throws ContractException {
        final Function function = new Function(FUNC_ADMIN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public BigInteger rate() throws ContractException {
        final Function function = new Function(FUNC_RATE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeCallWithSingleValueReturn(function, BigInteger.class);
    }

    public byte[] MODE_R() throws ContractException {
        final Function function = new Function(FUNC_MODE_R, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public String getAddress() throws ContractException {
        final Function function = new Function(FUNC_GETADDRESS, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public byte[] TYPE_ADMIN() throws ContractException {
        final Function function = new Function(FUNC_TYPE_ADMIN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public byte[] TYPE_OWNER() throws ContractException {
        final Function function = new Function(FUNC_TYPE_OWNER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public TransactionReceipt add(byte[] key, byte[] value) {
        final Function function = new Function(
                FUNC_ADD, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new DynamicBytes(value)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void add(byte[] key, byte[] value, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_ADD, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new DynamicBytes(value)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForAdd(byte[] key, byte[] value) {
        final Function function = new Function(
                FUNC_ADD, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new DynamicBytes(value)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple2<byte[], byte[]> getAddInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_ADD, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}, new TypeReference<DynamicBytes>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<byte[], byte[]>(

                (byte[]) results.get(0).getValue(), 
                (byte[]) results.get(1).getValue()
                );
    }

    public Tuple1<Boolean> getAddOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_ADD, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<Boolean>(

                (Boolean) results.get(0).getValue()
                );
    }

    public TransactionReceipt addBook(List<byte[]> sign) {
        final Function function = new Function(
                FUNC_ADDBOOK, 
                Arrays.<Type>asList(new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void addBook(List<byte[]> sign, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_ADDBOOK, 
                Arrays.<Type>asList(new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForAddBook(List<byte[]> sign) {
        final Function function = new Function(
                FUNC_ADDBOOK, 
                Arrays.<Type>asList(new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<List<byte[]>> getAddBookInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_ADDBOOK, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<StaticArray4<Bytes32>>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<List<byte[]>>(

                convertToNative((List<Bytes32>) results.get(0).getValue())
                );
    }

    public Tuple1<BigInteger> getAddBookOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_ADDBOOK, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public String getOrg() throws ContractException {
        final Function function = new Function(FUNC_GETORG, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public byte[] MODE_W() throws ContractException {
        final Function function = new Function(FUNC_MODE_W, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public TransactionReceipt remove(byte[] key) {
        final Function function = new Function(
                FUNC_REMOVE, 
                Arrays.<Type>asList(new DynamicBytes(key)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void remove(byte[] key, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_REMOVE, 
                Arrays.<Type>asList(new DynamicBytes(key)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForRemove(byte[] key) {
        final Function function = new Function(
                FUNC_REMOVE, 
                Arrays.<Type>asList(new DynamicBytes(key)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<byte[]> getRemoveInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_REMOVE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<byte[]>(

                (byte[]) results.get(0).getValue()
                );
    }

    public Tuple1<Boolean> getRemoveOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_REMOVE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<Boolean>(

                (Boolean) results.get(0).getValue()
                );
    }

    public String OWNER_ADDR() throws ContractException {
        final Function function = new Function(FUNC_OWNER_ADDR, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public byte[] ASSETS() throws ContractException {
        final Function function = new Function(FUNC_ASSETS, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public String USER_ADDR() throws ContractException {
        final Function function = new Function(FUNC_USER_ADDR, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public TransactionReceipt setPrice(BigInteger priceVal, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_SETPRICE, 
                Arrays.<Type>asList(new Uint256(priceVal),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void setPrice(BigInteger priceVal, List<byte[]> sign, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_SETPRICE, 
                Arrays.<Type>asList(new Uint256(priceVal),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForSetPrice(BigInteger priceVal, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_SETPRICE, 
                Arrays.<Type>asList(new Uint256(priceVal),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple2<BigInteger, List<byte[]>> getSetPriceInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_SETPRICE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<StaticArray4<Bytes32>>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<BigInteger, List<byte[]>>(

                (BigInteger) results.get(0).getValue(), 
                convertToNative((List<Bytes32>) results.get(1).getValue())
                );
    }

    public Tuple1<BigInteger> getSetPriceOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_SETPRICE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public TransactionReceipt removeWithSign(byte[] key, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_REMOVEWITHSIGN, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void removeWithSign(byte[] key, List<byte[]> sign, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_REMOVEWITHSIGN, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForRemoveWithSign(byte[] key, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_REMOVEWITHSIGN, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple2<byte[], List<byte[]>> getRemoveWithSignInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_REMOVEWITHSIGN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}, new TypeReference<StaticArray4<Bytes32>>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<byte[], List<byte[]>>(

                (byte[]) results.get(0).getValue(), 
                convertToNative((List<Bytes32>) results.get(1).getValue())
                );
    }

    public Tuple1<Boolean> getRemoveWithSignOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_REMOVEWITHSIGN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<Boolean>(

                (Boolean) results.get(0).getValue()
                );
    }

    public TransactionReceipt setRate(BigInteger rateVal, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_SETRATE, 
                Arrays.<Type>asList(new Uint256(rateVal),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void setRate(BigInteger rateVal, List<byte[]> sign, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_SETRATE, 
                Arrays.<Type>asList(new Uint256(rateVal),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForSetRate(BigInteger rateVal, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_SETRATE, 
                Arrays.<Type>asList(new Uint256(rateVal),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple2<BigInteger, List<byte[]>> getSetRateInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_SETRATE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<StaticArray4<Bytes32>>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<BigInteger, List<byte[]>>(

                (BigInteger) results.get(0).getValue(), 
                convertToNative((List<Bytes32>) results.get(1).getValue())
                );
    }

    public Tuple1<BigInteger> getSetRateOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_SETRATE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public byte[] USER() throws ContractException {
        final Function function = new Function(FUNC_USER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public byte[] getWithSign(byte[] key, List<byte[]> sign) throws ContractException {
        final Function function = new Function(FUNC_GETWITHSIGN, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public TransactionReceipt withdrawal(List<String> transactionAddress, BigInteger amount, List<BigInteger> typeList, List<String> detailList, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_WITHDRAWAL, 
                Arrays.<Type>asList(transactionAddress.isEmpty()? DynamicArray.empty("address[]"):new DynamicArray<Address>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(transactionAddress, Address.class)),
                new Uint256(amount),
                typeList.isEmpty()? DynamicArray.empty("int256[]"):new DynamicArray<Int256>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(typeList, Int256.class)),
                detailList.isEmpty()? DynamicArray.empty("string[]"):new DynamicArray<Utf8String>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(detailList, Utf8String.class)),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void withdrawal(List<String> transactionAddress, BigInteger amount, List<BigInteger> typeList, List<String> detailList, List<byte[]> sign, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_WITHDRAWAL, 
                Arrays.<Type>asList(transactionAddress.isEmpty()? DynamicArray.empty("address[]"):new DynamicArray<Address>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(transactionAddress, Address.class)),
                new Uint256(amount),
                typeList.isEmpty()? DynamicArray.empty("int256[]"):new DynamicArray<Int256>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(typeList, Int256.class)),
                detailList.isEmpty()? DynamicArray.empty("string[]"):new DynamicArray<Utf8String>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(detailList, Utf8String.class)),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForWithdrawal(List<String> transactionAddress, BigInteger amount, List<BigInteger> typeList, List<String> detailList, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_WITHDRAWAL, 
                Arrays.<Type>asList(transactionAddress.isEmpty()? DynamicArray.empty("address[]"):new DynamicArray<Address>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(transactionAddress, Address.class)),
                new Uint256(amount),
                typeList.isEmpty()? DynamicArray.empty("int256[]"):new DynamicArray<Int256>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(typeList, Int256.class)),
                detailList.isEmpty()? DynamicArray.empty("string[]"):new DynamicArray<Utf8String>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(detailList, Utf8String.class)),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple5<List<String>, BigInteger, List<BigInteger>, List<String>, List<byte[]>> getWithdrawalInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_WITHDRAWAL, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Address>>() {}, new TypeReference<Uint256>() {}, new TypeReference<DynamicArray<Int256>>() {}, new TypeReference<DynamicArray<Utf8String>>() {}, new TypeReference<StaticArray4<Bytes32>>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple5<List<String>, BigInteger, List<BigInteger>, List<String>, List<byte[]>>(

                convertToNative((List<Address>) results.get(0).getValue()), 
                (BigInteger) results.get(1).getValue(), 
                convertToNative((List<Int256>) results.get(2).getValue()), 
                convertToNative((List<Utf8String>) results.get(3).getValue()), 
                convertToNative((List<Bytes32>) results.get(4).getValue())
                );
    }

    public Tuple2<Boolean, List<BigInteger>> getWithdrawalOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_WITHDRAWAL, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}, new TypeReference<StaticArray2<Uint256>>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<Boolean, List<BigInteger>>(

                (Boolean) results.get(0).getValue(), 
                convertToNative((List<Uint256>) results.get(1).getValue())
                );
    }

    public BigInteger size() throws ContractException {
        final Function function = new Function(FUNC_SIZE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeCallWithSingleValueReturn(function, BigInteger.class);
    }

    public byte[] OPERATOR() throws ContractException {
        final Function function = new Function(FUNC_OPERATOR, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public TransactionReceipt transfer(List<String> transactionAddress, BigInteger amount, List<BigInteger> typeList, List<String> detailList, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_TRANSFER, 
                Arrays.<Type>asList(transactionAddress.isEmpty()? DynamicArray.empty("address[]"):new DynamicArray<Address>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(transactionAddress, Address.class)),
                new Uint256(amount),
                typeList.isEmpty()? DynamicArray.empty("int256[]"):new DynamicArray<Int256>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(typeList, Int256.class)),
                detailList.isEmpty()? DynamicArray.empty("string[]"):new DynamicArray<Utf8String>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(detailList, Utf8String.class)),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void transfer(List<String> transactionAddress, BigInteger amount, List<BigInteger> typeList, List<String> detailList, List<byte[]> sign, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_TRANSFER, 
                Arrays.<Type>asList(transactionAddress.isEmpty()? DynamicArray.empty("address[]"):new DynamicArray<Address>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(transactionAddress, Address.class)),
                new Uint256(amount),
                typeList.isEmpty()? DynamicArray.empty("int256[]"):new DynamicArray<Int256>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(typeList, Int256.class)),
                detailList.isEmpty()? DynamicArray.empty("string[]"):new DynamicArray<Utf8String>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(detailList, Utf8String.class)),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForTransfer(List<String> transactionAddress, BigInteger amount, List<BigInteger> typeList, List<String> detailList, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_TRANSFER, 
                Arrays.<Type>asList(transactionAddress.isEmpty()? DynamicArray.empty("address[]"):new DynamicArray<Address>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(transactionAddress, Address.class)),
                new Uint256(amount),
                typeList.isEmpty()? DynamicArray.empty("int256[]"):new DynamicArray<Int256>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(typeList, Int256.class)),
                detailList.isEmpty()? DynamicArray.empty("string[]"):new DynamicArray<Utf8String>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(detailList, Utf8String.class)),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple5<List<String>, BigInteger, List<BigInteger>, List<String>, List<byte[]>> getTransferInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_TRANSFER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Address>>() {}, new TypeReference<Uint256>() {}, new TypeReference<DynamicArray<Int256>>() {}, new TypeReference<DynamicArray<Utf8String>>() {}, new TypeReference<StaticArray4<Bytes32>>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple5<List<String>, BigInteger, List<BigInteger>, List<String>, List<byte[]>>(

                convertToNative((List<Address>) results.get(0).getValue()), 
                (BigInteger) results.get(1).getValue(), 
                convertToNative((List<Int256>) results.get(2).getValue()), 
                convertToNative((List<Utf8String>) results.get(3).getValue()), 
                convertToNative((List<Bytes32>) results.get(4).getValue())
                );
    }

    public Tuple2<Boolean, List<BigInteger>> getTransferOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_TRANSFER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}, new TypeReference<StaticArray2<Uint256>>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<Boolean, List<BigInteger>>(

                (Boolean) results.get(0).getValue(), 
                convertToNative((List<Uint256>) results.get(1).getValue())
                );
    }

    public byte[] ROLE() throws ContractException {
        final Function function = new Function(FUNC_ROLE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public BigInteger price() throws ContractException {
        final Function function = new Function(FUNC_PRICE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeCallWithSingleValueReturn(function, BigInteger.class);
    }

    public BigInteger getBalance(String account, List<byte[]> sign) throws ContractException {
        final Function function = new Function(FUNC_GETBALANCE, 
                Arrays.<Type>asList(new Address(account),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeCallWithSingleValueReturn(function, BigInteger.class);
    }

    public TransactionReceipt set(byte[] key, byte[] value) {
        final Function function = new Function(
                FUNC_SET, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new DynamicBytes(value)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void set(byte[] key, byte[] value, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_SET, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new DynamicBytes(value)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForSet(byte[] key, byte[] value) {
        final Function function = new Function(
                FUNC_SET, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new DynamicBytes(value)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple2<byte[], byte[]> getSetInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_SET, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}, new TypeReference<DynamicBytes>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<byte[], byte[]>(

                (byte[]) results.get(0).getValue(), 
                (byte[]) results.get(1).getValue()
                );
    }

    public Tuple1<Boolean> getSetOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_SET, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<Boolean>(

                (Boolean) results.get(0).getValue()
                );
    }

    public TransactionReceipt addWithSign(byte[] key, byte[] value, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_ADDWITHSIGN, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new DynamicBytes(value),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void addWithSign(byte[] key, byte[] value, List<byte[]> sign, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_ADDWITHSIGN, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new DynamicBytes(value),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForAddWithSign(byte[] key, byte[] value, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_ADDWITHSIGN, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new DynamicBytes(value),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple3<byte[], byte[], List<byte[]>> getAddWithSignInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_ADDWITHSIGN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}, new TypeReference<DynamicBytes>() {}, new TypeReference<StaticArray4<Bytes32>>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple3<byte[], byte[], List<byte[]>>(

                (byte[]) results.get(0).getValue(), 
                (byte[]) results.get(1).getValue(), 
                convertToNative((List<Bytes32>) results.get(2).getValue())
                );
    }

    public Tuple1<Boolean> getAddWithSignOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_ADDWITHSIGN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<Boolean>(

                (Boolean) results.get(0).getValue()
                );
    }

    public String ADMIN_ADDR() throws ContractException {
        final Function function = new Function(FUNC_ADMIN_ADDR, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public BigInteger getTotalBalance(List<byte[]> sign) throws ContractException {
        final Function function = new Function(FUNC_GETTOTALBALANCE, 
                Arrays.<Type>asList(new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeCallWithSingleValueReturn(function, BigInteger.class);
    }

    public String getAccountManager() throws ContractException {
        final Function function = new Function(FUNC_GETACCOUNTMANAGER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public byte[] ID() throws ContractException {
        final Function function = new Function(FUNC_ID, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public byte[] ADDR() throws ContractException {
        final Function function = new Function(FUNC_ADDR, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public byte[] TYPE_PUBLIC() throws ContractException {
        final Function function = new Function(FUNC_TYPE_PUBLIC, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public String OPERATOR_ADDR() throws ContractException {
        final Function function = new Function(FUNC_OPERATOR_ADDR, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public byte[] TYPE() throws ContractException {
        final Function function = new Function(FUNC_TYPE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public String getAuthCenter() throws ContractException {
        final Function function = new Function(FUNC_GETAUTHCENTER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public String getAuthManager() throws ContractException {
        final Function function = new Function(FUNC_GETAUTHMANAGER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public TransactionReceipt insertWithSign(byte[] key, byte[] value, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_INSERTWITHSIGN, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new DynamicBytes(value),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void insertWithSign(byte[] key, byte[] value, List<byte[]> sign, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_INSERTWITHSIGN, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new DynamicBytes(value),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForInsertWithSign(byte[] key, byte[] value, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_INSERTWITHSIGN, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new DynamicBytes(value),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple3<byte[], byte[], List<byte[]>> getInsertWithSignInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_INSERTWITHSIGN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}, new TypeReference<DynamicBytes>() {}, new TypeReference<StaticArray4<Bytes32>>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple3<byte[], byte[], List<byte[]>>(

                (byte[]) results.get(0).getValue(), 
                (byte[]) results.get(1).getValue(), 
                convertToNative((List<Bytes32>) results.get(2).getValue())
                );
    }

    public Tuple1<Boolean> getInsertWithSignOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_INSERTWITHSIGN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<Boolean>(

                (Boolean) results.get(0).getValue()
                );
    }

    public TransactionReceipt checkAndHandleTransactionAddress(List<String> transactionAddress) {
        final Function function = new Function(
                FUNC_CHECKANDHANDLETRANSACTIONADDRESS, 
                Arrays.<Type>asList(transactionAddress.isEmpty()? DynamicArray.empty("address[]"):new DynamicArray<Address>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(transactionAddress, Address.class))),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void checkAndHandleTransactionAddress(List<String> transactionAddress, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_CHECKANDHANDLETRANSACTIONADDRESS, 
                Arrays.<Type>asList(transactionAddress.isEmpty()? DynamicArray.empty("address[]"):new DynamicArray<Address>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(transactionAddress, Address.class))),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForCheckAndHandleTransactionAddress(List<String> transactionAddress) {
        final Function function = new Function(
                FUNC_CHECKANDHANDLETRANSACTIONADDRESS, 
                Arrays.<Type>asList(transactionAddress.isEmpty()? DynamicArray.empty("address[]"):new DynamicArray<Address>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(transactionAddress, Address.class))),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<List<String>> getCheckAndHandleTransactionAddressInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_CHECKANDHANDLETRANSACTIONADDRESS, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Address>>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<List<String>>(

                convertToNative((List<Address>) results.get(0).getValue())
                );
    }

    public Tuple2<Boolean, List<String>> getCheckAndHandleTransactionAddressOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_CHECKANDHANDLETRANSACTIONADDRESS, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}, new TypeReference<DynamicArray<Address>>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<Boolean, List<String>>(

                (Boolean) results.get(0).getValue(), 
                convertToNative((List<Address>) results.get(1).getValue())
                );
    }

    public BigInteger getNonce() throws ContractException {
        final Function function = new Function(FUNC_GETNONCE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeCallWithSingleValueReturn(function, BigInteger.class);
    }

    public byte[] get(byte[] key) throws ContractException {
        final Function function = new Function(FUNC_GET, 
                Arrays.<Type>asList(new DynamicBytes(key)),
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public List getHolders(List<byte[]> sign) throws ContractException {
        final Function function = new Function(FUNC_GETHOLDERS, 
                Arrays.<Type>asList(new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Address>>() {}));
        List<Type> result = (List<Type>) executeCallWithSingleValueReturn(function, List.class);
        return convertToNative(result);
    }

    public TransactionReceipt setWithSign(byte[] key, byte[] value, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_SETWITHSIGN, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new DynamicBytes(value),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void setWithSign(byte[] key, byte[] value, List<byte[]> sign, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_SETWITHSIGN, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new DynamicBytes(value),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForSetWithSign(byte[] key, byte[] value, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_SETWITHSIGN, 
                Arrays.<Type>asList(new DynamicBytes(key),
                new DynamicBytes(value),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple3<byte[], byte[], List<byte[]>> getSetWithSignInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_SETWITHSIGN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}, new TypeReference<DynamicBytes>() {}, new TypeReference<StaticArray4<Bytes32>>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple3<byte[], byte[], List<byte[]>>(

                (byte[]) results.get(0).getValue(), 
                (byte[]) results.get(1).getValue(), 
                convertToNative((List<Bytes32>) results.get(2).getValue())
                );
    }

    public Tuple1<Boolean> getSetWithSignOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_SETWITHSIGN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<Boolean>(

                (Boolean) results.get(0).getValue()
                );
    }

    public TransactionReceipt openAccount(String account, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_OPENACCOUNT, 
                Arrays.<Type>asList(new Address(account),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void openAccount(String account, List<byte[]> sign, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_OPENACCOUNT, 
                Arrays.<Type>asList(new Address(account),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForOpenAccount(String account, List<byte[]> sign) {
        final Function function = new Function(
                FUNC_OPENACCOUNT, 
                Arrays.<Type>asList(new Address(account),
                new StaticArray4<Bytes32>(
                        org.fisco.bcos.sdk.abi.Utils.typeMap(sign, Bytes32.class))),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple2<String, List<byte[]>> getOpenAccountInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_OPENACCOUNT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<StaticArray4<Bytes32>>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<String, List<byte[]>>(

                (String) results.get(0).getValue(), 
                convertToNative((List<Bytes32>) results.get(1).getValue())
                );
    }

    public Tuple1<Boolean> getOpenAccountOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_OPENACCOUNT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<Boolean>(

                (Boolean) results.get(0).getValue()
                );
    }

    public byte[] KEY_ALL() throws ContractException {
        final Function function = new Function(FUNC_KEY_ALL, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeCallWithSingleValueReturn(function, byte[].class);
    }

    public List<TransferEventResponse> getTransferEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(TRANSFER_EVENT, transactionReceipt);
        ArrayList<TransferEventResponse> responses = new ArrayList<TransferEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            TransferEventResponse typedResponse = new TransferEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._from = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse._to = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.amount = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeTransferEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(TRANSFER_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeTransferEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(TRANSFER_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public List<DepositEventResponse> getDepositEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(DEPOSIT_EVENT, transactionReceipt);
        ArrayList<DepositEventResponse> responses = new ArrayList<DepositEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            DepositEventResponse typedResponse = new DepositEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.account = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.amount = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeDepositEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(DEPOSIT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeDepositEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(DEPOSIT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public List<WithDrawalEventResponse> getWithDrawalEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(WITHDRAWAL_EVENT, transactionReceipt);
        ArrayList<WithDrawalEventResponse> responses = new ArrayList<WithDrawalEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            WithDrawalEventResponse typedResponse = new WithDrawalEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.account = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.amount = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeWithDrawalEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(WITHDRAWAL_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeWithDrawalEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(WITHDRAWAL_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public List<InsertResultEventResponse> getInsertResultEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(INSERTRESULT_EVENT, transactionReceipt);
        ArrayList<InsertResultEventResponse> responses = new ArrayList<InsertResultEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            InsertResultEventResponse typedResponse = new InsertResultEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.termNo = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.seqNo = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.from = (String) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse.to = (String) eventValues.getNonIndexedValues().get(3).getValue();
            typedResponse.amount = (BigInteger) eventValues.getNonIndexedValues().get(4).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeInsertResultEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(INSERTRESULT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeInsertResultEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(INSERTRESULT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public static FungibleAsset load(String contractAddress, Client client, CryptoKeyPair credential) {
        return new FungibleAsset(contractAddress, client, credential);
    }

    public static FungibleAsset deploy(Client client, CryptoKeyPair credential, String tableName, String authCenterAddr, String orgAddr) throws ContractException {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new Utf8String(tableName),
                new Address(authCenterAddr),
                new Address(orgAddr)));
        return deploy(FungibleAsset.class, client, credential, getBinary(client.getCryptoSuite()), encodedConstructor);
    }

    public static class TransferEventResponse {
        public TransactionReceipt.Logs log;

        public String _from;

        public String _to;

        public BigInteger amount;
    }

    public static class DepositEventResponse {
        public TransactionReceipt.Logs log;

        public String account;

        public BigInteger amount;
    }

    public static class WithDrawalEventResponse {
        public TransactionReceipt.Logs log;

        public String account;

        public BigInteger amount;
    }

    public static class InsertResultEventResponse {
        public TransactionReceipt.Logs log;

        public BigInteger termNo;

        public BigInteger seqNo;

        public String from;

        public String to;

        public BigInteger amount;
    }
}
